{"version":3,"file":"static/js/main.01374016.js","mappings":"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","sources":["../node_modules/css-mediaquery/index.js","../node_modules/js-cookie/dist/js.cookie.js","../node_modules/matchmediaquery/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-auth-kit/AuthContext.js","../node_modules/react-auth-kit/AuthProvider.js","../node_modules/react-auth-kit/RxTokenObject.js","../node_modules/react-auth-kit/createStore.js","../node_modules/react-auth-kit/errors.js","../node_modules/react-auth-kit/hooks/useAuthHeader.js","../node_modules/react-auth-kit/hooks/useAuthUser.js","../node_modules/react-auth-kit/hooks/useSignIn.js","../node_modules/react-auth-kit/hooks/useSignOut.js","../node_modules/react-auth-kit/index.js","../node_modules/react-auth-kit/utils/hooks.js","../node_modules/react-auth-kit/utils/reducers.js","../node_modules/react-auth-kit/utils/utils.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/rxjs/src/index.ts","../node_modules/rxjs/src/internal/AsyncSubject.ts","../node_modules/rxjs/src/internal/BehaviorSubject.ts","../node_modules/rxjs/src/internal/Notification.ts","../node_modules/rxjs/src/internal/NotificationFactories.ts","../node_modules/rxjs/src/internal/Observable.ts","../node_modules/rxjs/src/internal/ReplaySubject.ts","../node_modules/rxjs/src/internal/Scheduler.ts","../node_modules/rxjs/src/internal/Subject.ts","../node_modules/rxjs/src/internal/Subscriber.ts","../node_modules/rxjs/src/internal/Subscription.ts","../node_modules/rxjs/src/internal/config.ts","../node_modules/rxjs/src/internal/firstValueFrom.ts","../node_modules/rxjs/src/internal/lastValueFrom.ts","../node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","../node_modules/rxjs/src/internal/observable/bindCallback.ts","../node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts","../node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","../node_modules/rxjs/src/internal/observable/combineLatest.ts","../node_modules/rxjs/src/internal/observable/concat.ts","../node_modules/rxjs/src/internal/observable/connectable.ts","../node_modules/rxjs/src/internal/observable/defer.ts","../node_modules/rxjs/src/internal/observable/dom/animationFrames.ts","../node_modules/rxjs/src/internal/observable/empty.ts","../node_modules/rxjs/src/internal/observable/forkJoin.ts","../node_modules/rxjs/src/internal/observable/from.ts","../node_modules/rxjs/src/internal/observable/fromEvent.ts","../node_modules/rxjs/src/internal/observable/fromEventPattern.ts","../node_modules/rxjs/src/internal/observable/fromSubscribable.ts","../node_modules/rxjs/src/internal/observable/generate.ts","../node_modules/rxjs/src/internal/observable/iif.ts","../node_modules/rxjs/src/internal/observable/innerFrom.ts","../node_modules/rxjs/src/internal/observable/interval.ts","../node_modules/rxjs/src/internal/observable/merge.ts","../node_modules/rxjs/src/internal/observable/never.ts","../node_modules/rxjs/src/internal/observable/of.ts","../node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","../node_modules/rxjs/src/internal/observable/pairs.ts","../node_modules/rxjs/src/internal/observable/partition.ts","../node_modules/rxjs/src/internal/observable/race.ts","../node_modules/rxjs/src/internal/observable/range.ts","../node_modules/rxjs/src/internal/observable/throwError.ts","../node_modules/rxjs/src/internal/observable/timer.ts","../node_modules/rxjs/src/internal/observable/using.ts","../node_modules/rxjs/src/internal/observable/zip.ts","../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../node_modules/rxjs/src/internal/operators/audit.ts","../node_modules/rxjs/src/internal/operators/auditTime.ts","../node_modules/rxjs/src/internal/operators/buffer.ts","../node_modules/rxjs/src/internal/operators/bufferCount.ts","../node_modules/rxjs/src/internal/operators/bufferTime.ts","../node_modules/rxjs/src/internal/operators/bufferToggle.ts","../node_modules/rxjs/src/internal/operators/bufferWhen.ts","../node_modules/rxjs/src/internal/operators/catchError.ts","../node_modules/rxjs/src/internal/operators/combineAll.ts","../node_modules/rxjs/src/internal/operators/combineLatest.ts","../node_modules/rxjs/src/internal/operators/combineLatestAll.ts","../node_modules/rxjs/src/internal/operators/combineLatestWith.ts","../node_modules/rxjs/src/internal/operators/concat.ts","../node_modules/rxjs/src/internal/operators/concatAll.ts","../node_modules/rxjs/src/internal/operators/concatMap.ts","../node_modules/rxjs/src/internal/operators/concatMapTo.ts","../node_modules/rxjs/src/internal/operators/concatWith.ts","../node_modules/rxjs/src/internal/operators/connect.ts","../node_modules/rxjs/src/internal/operators/count.ts","../node_modules/rxjs/src/internal/operators/debounce.ts","../node_modules/rxjs/src/internal/operators/debounceTime.ts","../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","../node_modules/rxjs/src/internal/operators/delay.ts","../node_modules/rxjs/src/internal/operators/delayWhen.ts","../node_modules/rxjs/src/internal/operators/dematerialize.ts","../node_modules/rxjs/src/internal/operators/distinct.ts","../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","../node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","../node_modules/rxjs/src/internal/operators/elementAt.ts","../node_modules/rxjs/src/internal/operators/endWith.ts","../node_modules/rxjs/src/internal/operators/every.ts","../node_modules/rxjs/src/internal/operators/exhaust.ts","../node_modules/rxjs/src/internal/operators/exhaustAll.ts","../node_modules/rxjs/src/internal/operators/exhaustMap.ts","../node_modules/rxjs/src/internal/operators/expand.ts","../node_modules/rxjs/src/internal/operators/filter.ts","../node_modules/rxjs/src/internal/operators/finalize.ts","../node_modules/rxjs/src/internal/operators/find.ts","../node_modules/rxjs/src/internal/operators/findIndex.ts","../node_modules/rxjs/src/internal/operators/first.ts","../node_modules/rxjs/src/internal/operators/flatMap.ts","../node_modules/rxjs/src/internal/operators/groupBy.ts","../node_modules/rxjs/src/internal/operators/ignoreElements.ts","../node_modules/rxjs/src/internal/operators/isEmpty.ts","../node_modules/rxjs/src/internal/operators/joinAllInternals.ts","../node_modules/rxjs/src/internal/operators/last.ts","../node_modules/rxjs/src/internal/operators/map.ts","../node_modules/rxjs/src/internal/operators/mapTo.ts","../node_modules/rxjs/src/internal/operators/materialize.ts","../node_modules/rxjs/src/internal/operators/max.ts","../node_modules/rxjs/src/internal/operators/merge.ts","../node_modules/rxjs/src/internal/operators/mergeAll.ts","../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../node_modules/rxjs/src/internal/operators/mergeMap.ts","../node_modules/rxjs/src/internal/operators/mergeMapTo.ts","../node_modules/rxjs/src/internal/operators/mergeScan.ts","../node_modules/rxjs/src/internal/operators/mergeWith.ts","../node_modules/rxjs/src/internal/operators/min.ts","../node_modules/rxjs/src/internal/operators/multicast.ts","../node_modules/rxjs/src/internal/operators/observeOn.ts","../node_modules/rxjs/src/internal/operators/onErrorResumeNextWith.ts","../node_modules/rxjs/src/internal/operators/pairwise.ts","../node_modules/rxjs/src/internal/operators/pluck.ts","../node_modules/rxjs/src/internal/operators/publish.ts","../node_modules/rxjs/src/internal/operators/publishBehavior.ts","../node_modules/rxjs/src/internal/operators/publishLast.ts","../node_modules/rxjs/src/internal/operators/publishReplay.ts","../node_modules/rxjs/src/internal/operators/raceWith.ts","../node_modules/rxjs/src/internal/operators/reduce.ts","../node_modules/rxjs/src/internal/operators/refCount.ts","../node_modules/rxjs/src/internal/operators/repeat.ts","../node_modules/rxjs/src/internal/operators/repeatWhen.ts","../node_modules/rxjs/src/internal/operators/retry.ts","../node_modules/rxjs/src/internal/operators/retryWhen.ts","../node_modules/rxjs/src/internal/operators/sample.ts","../node_modules/rxjs/src/internal/operators/sampleTime.ts","../node_modules/rxjs/src/internal/operators/scan.ts","../node_modules/rxjs/src/internal/operators/scanInternals.ts","../node_modules/rxjs/src/internal/operators/sequenceEqual.ts","../node_modules/rxjs/src/internal/operators/share.ts","../node_modules/rxjs/src/internal/operators/shareReplay.ts","../node_modules/rxjs/src/internal/operators/single.ts","../node_modules/rxjs/src/internal/operators/skip.ts","../node_modules/rxjs/src/internal/operators/skipLast.ts","../node_modules/rxjs/src/internal/operators/skipUntil.ts","../node_modules/rxjs/src/internal/operators/skipWhile.ts","../node_modules/rxjs/src/internal/operators/startWith.ts","../node_modules/rxjs/src/internal/operators/subscribeOn.ts","../node_modules/rxjs/src/internal/operators/switchAll.ts","../node_modules/rxjs/src/internal/operators/switchMap.ts","../node_modules/rxjs/src/internal/operators/switchMapTo.ts","../node_modules/rxjs/src/internal/operators/switchScan.ts","../node_modules/rxjs/src/internal/operators/take.ts","../node_modules/rxjs/src/internal/operators/takeLast.ts","../node_modules/rxjs/src/internal/operators/takeUntil.ts","../node_modules/rxjs/src/internal/operators/takeWhile.ts","../node_modules/rxjs/src/internal/operators/tap.ts","../node_modules/rxjs/src/internal/operators/throttle.ts","../node_modules/rxjs/src/internal/operators/throttleTime.ts","../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","../node_modules/rxjs/src/internal/operators/timeInterval.ts","../node_modules/rxjs/src/internal/operators/timeout.ts","../node_modules/rxjs/src/internal/operators/timeoutWith.ts","../node_modules/rxjs/src/internal/operators/timestamp.ts","../node_modules/rxjs/src/internal/operators/toArray.ts","../node_modules/rxjs/src/internal/operators/window.ts","../node_modules/rxjs/src/internal/operators/windowCount.ts","../node_modules/rxjs/src/internal/operators/windowTime.ts","../node_modules/rxjs/src/internal/operators/windowToggle.ts","../node_modules/rxjs/src/internal/operators/windowWhen.ts","../node_modules/rxjs/src/internal/operators/withLatestFrom.ts","../node_modules/rxjs/src/internal/operators/zip.ts","../node_modules/rxjs/src/internal/operators/zipAll.ts","../node_modules/rxjs/src/internal/operators/zipWith.ts","../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../node_modules/rxjs/src/internal/scheduler/Action.ts","../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","../node_modules/rxjs/src/internal/scheduler/AsapAction.ts","../node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../node_modules/rxjs/src/internal/scheduler/QueueAction.ts","../node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","../node_modules/rxjs/src/internal/scheduler/animationFrame.ts","../node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts","../node_modules/rxjs/src/internal/scheduler/asap.ts","../node_modules/rxjs/src/internal/scheduler/async.ts","../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../node_modules/rxjs/src/internal/scheduler/immediateProvider.ts","../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","../node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts","../node_modules/rxjs/src/internal/scheduler/queue.ts","../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../node_modules/rxjs/src/internal/symbol/iterator.ts","../node_modules/rxjs/src/internal/symbol/observable.ts","../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","../node_modules/rxjs/src/internal/util/EmptyError.ts","../node_modules/rxjs/src/internal/util/Immediate.ts","../node_modules/rxjs/src/internal/util/NotFoundError.ts","../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../node_modules/rxjs/src/internal/util/SequenceError.ts","../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../node_modules/rxjs/src/internal/util/args.ts","../node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts","../node_modules/rxjs/src/internal/util/argsOrArgArray.ts","../node_modules/rxjs/src/internal/util/arrRemove.ts","../node_modules/rxjs/src/internal/util/createErrorClass.ts","../node_modules/rxjs/src/internal/util/createObject.ts","../node_modules/rxjs/src/internal/util/errorContext.ts","../node_modules/rxjs/src/internal/util/executeSchedule.ts","../node_modules/rxjs/src/internal/util/identity.ts","../node_modules/rxjs/src/internal/util/isArrayLike.ts","../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../node_modules/rxjs/src/internal/util/isDate.ts","../node_modules/rxjs/src/internal/util/isFunction.ts","../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../node_modules/rxjs/src/internal/util/isIterable.ts","../node_modules/rxjs/src/internal/util/isObservable.ts","../node_modules/rxjs/src/internal/util/isPromise.ts","../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../node_modules/rxjs/src/internal/util/isScheduler.ts","../node_modules/rxjs/src/internal/util/lift.ts","../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","../node_modules/rxjs/src/internal/util/noop.ts","../node_modules/rxjs/src/internal/util/not.ts","../node_modules/rxjs/src/internal/util/pipe.ts","../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.js","../node_modules/use-sync-external-store/with-selector.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/deprecations.ts","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","reportWebVitals.ts","../node_modules/react-redux/src/utils/batch.ts","../node_modules/react-redux/src/utils/Subscription.ts","../node_modules/react-redux/src/utils/useIsomorphicLayoutEffect.ts","../node_modules/react-redux/src/utils/hoistStatics.ts","../node_modules/react-redux/src/components/Context.ts","../node_modules/react-redux/src/components/Provider.tsx","../node_modules/react-redux/src/hooks/useReduxContext.ts","../node_modules/react-redux/src/hooks/useStore.ts","../node_modules/react-redux/src/hooks/useDispatch.ts","../node_modules/react-redux/src/hooks/useSelector.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/redux/src/utils/formatProdErrorMessage.ts","../node_modules/redux/src/utils/symbol-observable.ts","../node_modules/redux/src/utils/actionTypes.ts","../node_modules/redux/src/utils/isPlainObject.ts","../node_modules/redux/src/createStore.ts","../node_modules/redux/src/combineReducers.ts","../node_modules/redux/src/compose.ts","../node_modules/redux-thunk/dist/redux-thunk.mjs","../node_modules/immer/src/utils/env.ts","../node_modules/immer/src/utils/errors.ts","../node_modules/immer/src/utils/common.ts","../node_modules/immer/src/utils/plugins.ts","../node_modules/immer/src/core/scope.ts","../node_modules/immer/src/core/finalize.ts","../node_modules/immer/src/core/proxy.ts","../node_modules/immer/src/core/immerClass.ts","../node_modules/immer/src/core/current.ts","../node_modules/immer/src/immer.ts","../node_modules/@reduxjs/toolkit/src/createDraftSafeSelector.ts","../node_modules/@reduxjs/toolkit/src/devtoolsExtension.ts","../node_modules/@reduxjs/toolkit/src/createAction.ts","../node_modules/redux/src/utils/isAction.ts","../node_modules/@reduxjs/toolkit/src/utils.ts","../node_modules/@reduxjs/toolkit/src/getDefaultMiddleware.ts","../node_modules/@reduxjs/toolkit/src/autoBatchEnhancer.ts","../node_modules/@reduxjs/toolkit/src/getDefaultEnhancers.ts","../node_modules/@reduxjs/toolkit/src/mapBuilders.ts","../node_modules/@reduxjs/toolkit/src/createSlice.ts","../node_modules/@reduxjs/toolkit/src/createReducer.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/exceptions.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/task.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/index.ts","../node_modules/@reduxjs/toolkit/src/combineSlices.ts","../node_modules/@reduxjs/toolkit/src/formatProdErrorMessage.ts","assets/redux/cartSlice.ts","assets/redux/store.ts","../node_modules/@reduxjs/toolkit/src/configureStore.ts","../node_modules/redux/src/applyMiddleware.ts","../node_modules/hyphenate-style-name/index.js","../node_modules/shallow-equal/src/objects.ts","../node_modules/react-responsive/src/mediaQuery.ts","../node_modules/react-responsive/src/toQuery.ts","../node_modules/react-responsive/src/Context.ts","../node_modules/react-responsive/src/useMediaQuery.ts","components/client/header/Header.tsx","components/client/footer/Footer.tsx","App.tsx","Admin.tsx","Consumer.tsx","pages/accueil/Accueil.tsx","components/oneproduct/OneProduct.tsx","components/h1visiteur/H1visiteur.tsx","pages/listingproducts/ListingProducts.tsx","../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","../node_modules/react-hook-form/src/utils/isDateObject.ts","../node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","../node_modules/react-hook-form/src/utils/isObject.ts","../node_modules/react-hook-form/src/logic/getEventValue.ts","../node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","../node_modules/react-hook-form/src/logic/getNodeParentName.ts","../node_modules/react-hook-form/src/utils/isWeb.ts","../node_modules/react-hook-form/src/utils/cloneObject.ts","../node_modules/react-hook-form/src/utils/isPlainObject.ts","../node_modules/react-hook-form/src/utils/compact.ts","../node_modules/react-hook-form/src/utils/isUndefined.ts","../node_modules/react-hook-form/src/utils/get.ts","../node_modules/react-hook-form/src/utils/isBoolean.ts","../node_modules/react-hook-form/src/utils/isKey.ts","../node_modules/react-hook-form/src/utils/stringToPath.ts","../node_modules/react-hook-form/src/utils/set.ts","../node_modules/react-hook-form/src/constants.ts","../node_modules/react-hook-form/src/useFormContext.tsx","../node_modules/react-hook-form/src/logic/getProxyFormState.ts","../node_modules/react-hook-form/src/utils/isEmptyObject.ts","../node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","../node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","../node_modules/react-hook-form/src/useSubscribe.ts","../node_modules/react-hook-form/src/utils/isString.ts","../node_modules/react-hook-form/src/logic/generateWatchOutput.ts","../node_modules/react-hook-form/src/logic/appendErrors.ts","../node_modules/react-hook-form/src/logic/getValidationModes.ts","../node_modules/react-hook-form/src/logic/isWatched.ts","../node_modules/react-hook-form/src/logic/iterateFieldsByAction.ts","../node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","../node_modules/react-hook-form/src/utils/isFileInput.ts","../node_modules/react-hook-form/src/utils/isFunction.ts","../node_modules/react-hook-form/src/utils/isHTMLElement.ts","../node_modules/react-hook-form/src/utils/isMessage.ts","../node_modules/react-hook-form/src/utils/isRadioInput.ts","../node_modules/react-hook-form/src/utils/isRegex.ts","../node_modules/react-hook-form/src/logic/getCheckboxValue.ts","../node_modules/react-hook-form/src/logic/getRadioValue.ts","../node_modules/react-hook-form/src/logic/getValidateError.ts","../node_modules/react-hook-form/src/logic/getValueAndMessage.ts","../node_modules/react-hook-form/src/logic/validateField.ts","../node_modules/react-hook-form/src/utils/unset.ts","../node_modules/react-hook-form/src/utils/createSubject.ts","../node_modules/react-hook-form/src/utils/isPrimitive.ts","../node_modules/react-hook-form/src/utils/deepEqual.ts","../node_modules/react-hook-form/src/utils/isMultipleSelect.ts","../node_modules/react-hook-form/src/utils/live.ts","../node_modules/react-hook-form/src/utils/objectHasFunction.ts","../node_modules/react-hook-form/src/logic/getDirtyFields.ts","../node_modules/react-hook-form/src/logic/getFieldValueAs.ts","../node_modules/react-hook-form/src/logic/getFieldValue.ts","../node_modules/react-hook-form/src/logic/getResolverOptions.ts","../node_modules/react-hook-form/src/logic/getRuleValue.ts","../node_modules/react-hook-form/src/logic/hasPromiseValidation.ts","../node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","../node_modules/react-hook-form/src/logic/createFormControl.ts","../node_modules/react-hook-form/src/logic/hasValidation.ts","../node_modules/react-hook-form/src/logic/skipValidation.ts","../node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","../node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","../node_modules/react-hook-form/src/useForm.ts","components/input/Input.tsx","components/btnsubmit/BtnSubmit.tsx","pages/loginclient/LoginClient.tsx","pages/cart/one/One.tsx","pages/cart/cart/Cart.tsx","AppError.tsx","components/logincart/LoginCart.tsx","pages/cart/oneSummary/OneSummary.tsx","pages/cart/summary/Summary.tsx","components/selectinput/SelectInput.tsx","pages/register/Register.tsx","pages/cart/payment/Payment.tsx","components/textarea/Textarea.tsx","pages/account/Account.tsx","components/oneorder/OneOrder.tsx","pages/boardconsumer/BoardConsumer.tsx","components/detailorder/DetailOrder.tsx","pages/detailorder/DetailOrder.tsx","index.tsx"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n","/*! js-cookie v3.0.5 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  })());\n})(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (name, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      name = encodeURIComponent(name)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        name + '=' + converter.write(value, name) + stringifiedAttributes)\n    }\n\n    function get (name) {\n      if (typeof document === 'undefined' || (arguments.length && !name)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var found = decodeURIComponent(parts[0]);\n          jar[found] = converter.read(value, found);\n\n          if (name === found) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return name ? jar[name] : jar\n    }\n\n    return Object.create(\n      {\n        set,\n        get,\n        remove: function (name, attributes) {\n          set(\n            name,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n}));\n","'use strict';\n\nvar staticMatch = require('css-mediaquery').match;\nvar dynamicMatch = typeof window !== 'undefined' ? window.matchMedia : null;\n\n// our fake MediaQueryList\nfunction Mql(query, values, forceStatic){\n  var self = this;\n  var mql;\n\n  // matchMedia will return null in FF when it's called in a hidden iframe\n  // ref: https://stackoverflow.com/a/12330568\n  if(dynamicMatch && !forceStatic) mql = dynamicMatch.call(window, query);\n\n  if (mql) {\n    this.matches = mql.matches;\n    this.media = mql.media;\n    // TODO: is there a time it makes sense to remove this listener?\n    mql.addListener(update);\n  } else {\n    this.matches = staticMatch(query, values);\n    this.media = query;\n  }\n\n  this.addListener = addListener;\n  this.removeListener = removeListener;\n  this.dispose = dispose;\n\n  function addListener(listener){\n    if(mql){\n      mql.addListener(listener);\n    }\n  }\n\n  function removeListener(listener){\n    if(mql){\n      mql.removeListener(listener);\n    }\n  }\n\n  // update ourselves!\n  function update(evt){\n    self.matches = evt.matches;\n    self.media = evt.media;\n  }\n\n  function dispose(){\n    if(mql){\n      mql.removeListener(update);\n    }\n  }\n}\n\nfunction matchMedia(query, values, forceStatic){\n  return new Mql(query, values, forceStatic);\n}\n\nmodule.exports = matchMedia;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.useReactAuthKit = useReactAuthKit;\nvar _react = require(\"react\");\nvar _errors = require(\"./errors\");\nfunction getContext() {\n  var context = (0, _react.createContext)(null);\n  if (process.env.NODE_ENV !== 'production') {\n    context.displayName = 'ReactAuthKit';\n  }\n  return context;\n}\nvar AuthKitContext = getContext();\nfunction useReactAuthKit() {\n  var context = (0, _react.useContext)(AuthKitContext);\n  if (context === null) {\n    throw new _errors.AuthError('Auth Provider is missing. ' + 'Make sure, you are using this component inside the auth provider.');\n  }\n  return context;\n}\nvar _default = exports.default = AuthKitContext;","\"use strict\";\n'use client';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _AuthContext = _interopRequireDefault(require(\"./AuthContext\"));\nvar _hooks = require(\"./utils/hooks\");\nvar _reducers = require(\"./utils/reducers\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction AuthProvider(_ref) {\n  var store = _ref.store,\n    children = _ref.children;\n  var tokenObject = store.tokenObject,\n    refresh = store.refresh;\n  if (refresh) {\n    (0, _hooks.useInterval)(function () {\n      var _tokenObject$value$au, _tokenObject$value$re;\n      refresh.refreshApiCallback({\n        authToken: (_tokenObject$value$au = tokenObject.value.auth) === null || _tokenObject$value$au === void 0 ? void 0 : _tokenObject$value$au.token,\n        authUserState: tokenObject.value.userState,\n        refreshToken: (_tokenObject$value$re = tokenObject.value.refresh) === null || _tokenObject$value$re === void 0 ? void 0 : _tokenObject$value$re.token\n      }).then(function (result) {\n        if (result.isSuccess) {\n          tokenObject.set((0, _reducers.doRefresh)(result));\n        } else {\n          tokenObject.set((0, _reducers.doSignOut)());\n        }\n      }).catch(function () {});\n    }, tokenObject.value.isSignIn ? refresh.interval : null);\n  }\n  return (0, _jsxRuntime.jsx)(_AuthContext.default.Provider, {\n    value: tokenObject,\n    children: children\n  });\n}\nvar _default = exports.default = AuthProvider;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\nvar _rxjs = require(\"rxjs\");\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nclass TokenObject {\n  constructor(authStorageName, authStorageType, refreshTokenName, debug, cookieDomain, cookieSecure) {\n    this.authStorageName = authStorageName;\n    this.authStorageType = authStorageType;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.debug = debug;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.authValue = this.initialToken_();\n    this.authSubject = new _rxjs.BehaviorSubject(this.authValue);\n    this.log(`[Auth Kit] - Initial Value ${this.authValue}`);\n    this.authSubject.subscribe({\n      next: this.syncTokens\n    });\n  }\n  subscribe = (next, error, complete) => {\n    this.authSubject.subscribe({\n      next: next,\n      error: error,\n      complete: complete\n    });\n  };\n  set = data => {\n    this.log(`Set Function is called with`);\n    if (this.debug) {\n      console.dir(data);\n    }\n    this.log(`Set Function Old Data`);\n    if (this.debug) {\n      console.dir(this.value);\n    }\n    let obj = this.value;\n    if (data.userState !== undefined) {\n      obj.userState = data.userState;\n    }\n    if (data.auth) {\n      try {\n        const exp = this.getExpireDateTime(data.auth.token);\n        if (exp > new Date()) {\n          obj = {\n            ...obj,\n            auth: {\n              'token': data.auth.token,\n              'type': data.auth.type,\n              'expiresAt': exp\n            },\n            isSignIn: true\n          };\n        } else {\n          obj = {\n            ...obj,\n            auth: null,\n            isSignIn: false,\n            userState: null\n          };\n          new _errors.AuthError('Given Auth Token is already expired.');\n        }\n      } catch (e) {\n        obj = {\n          ...obj,\n          auth: null,\n          isSignIn: false,\n          userState: null\n        };\n        new _errors.AuthError('Error pursing the Auth Token. Make sure you provided a valid JWT.');\n      }\n    } else if (data.auth === null) {\n      obj = {\n        ...obj,\n        auth: null,\n        isSignIn: false,\n        userState: null\n      };\n    }\n    if (this.isUsingRefreshToken) {\n      if (obj.auth === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      } else if (data.refresh) {\n        try {\n          const refreshExpireTime = this.getExpireDateTime(data.refresh);\n          if (refreshExpireTime > new Date()) {\n            obj = {\n              ...obj,\n              refresh: {\n                'token': data.refresh,\n                'expiresAt': refreshExpireTime\n              }\n            };\n          } else {\n            obj = {\n              ...obj,\n              auth: null,\n              isSignIn: false,\n              userState: null,\n              refresh: null\n            };\n            new _errors.AuthError('Given Refresh Token is already expired.');\n          }\n        } catch (e) {\n          obj = {\n            ...obj,\n            auth: null,\n            isSignIn: false,\n            userState: null,\n            refresh: null\n          };\n          new _errors.AuthError('Error pursing the Auth Token.' + ' Make sure you provided a valid JWT.');\n        }\n      } else if (data.refresh === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      }\n    }\n    this.log(`[Auth Kit] - Set Function New Data`);\n    this.log(obj);\n    this.authValue = obj;\n    this.authSubject.next(obj);\n  };\n  get value() {\n    return this.authSubject.value;\n  }\n  initialToken_ = () => {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  };\n  initialCookieToken_ = () => {\n    const authToken = _jsCookie.default.get(this.authStorageName);\n    const authTokenType = _jsCookie.default.get(this.authStorageTypeName);\n    const stateCookie = _jsCookie.default.get(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? _jsCookie.default.get(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  initialLSToken_ = () => {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? localStorage.getItem(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  checkTokenExist_ = (authToken, authTokenType, stateCookie, refreshToken) => {\n    this.log('checkTokenExist_ is called');\n    this.log(`Params: authToken: ${authToken}, authTokenType: ${authTokenType},\n      stateCookie: ${stateCookie}, refreshToken: ${refreshToken}`);\n    try {\n      let refresh;\n      if (this.isUsingRefreshToken && !!refreshToken) {\n        this.log(`checkTokenExist - isUsingRefreshToken\n          = ${this.isUsingRefreshToken} refrehToken - ${refreshToken}`);\n        const refreshTokenExpiresAt = this.getExpireDateTime(refreshToken);\n        if (refreshTokenExpiresAt < new Date()) {\n          this.log(`checkTokenExist - refresh token is expired \n            ${refreshTokenExpiresAt} ${new Date()}`);\n          refresh = null;\n        } else {\n          this.log(`checkTokenExist - new refresh token is assigned \n            ${refreshToken}`);\n          refresh = {\n            token: refreshToken,\n            expiresAt: refreshTokenExpiresAt\n          };\n        }\n      } else {\n        this.log(`checkTokenExist - Refesh Token is invalid or not using\n           refresh feature ${this.isUsingRefreshToken} ${refreshToken}`);\n        refresh = null;\n      }\n      if (this.isUsingRefreshToken && !refresh) {\n        this.log(`checkTokenExist - Removing Refresh Token`);\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n      let auth;\n      let authState;\n      if (!!authToken && !!authTokenType && !!stateCookie) {\n        this.log(`checkTokenExist - authToken, authTokenType, stateCookie exists`);\n        try {\n          const expiresAt = this.getExpireDateTime(authToken);\n          if (expiresAt < new Date()) {\n            this.log(`checkTokenExist - auth token is expired \n              ${expiresAt} ${new Date()}`);\n            auth = null;\n            authState = null;\n          } else {\n            try {\n              authState = JSON.parse(stateCookie.replaceAll('\\\\', ''));\n              auth = {\n                token: authToken,\n                type: authTokenType,\n                expiresAt: expiresAt\n              };\n            } catch (err) {\n              this.log('state cookie JSON parsing failed');\n              this.log(err);\n              auth = null;\n              authState = null;\n            }\n          }\n        } catch (e) {\n          this.log(`checkTokenExist - auth token or auth state is invalid \n            ${authToken} ${stateCookie}`);\n          this.log(e);\n          auth = null;\n          authState = null;\n        }\n      } else {\n        this.log(`checkTokenExist ` + `- authToken, authTokenType, stateCookie doesn't exists`);\n        auth = null;\n        authState = null;\n      }\n      if (refresh) {\n        if (!!auth && !!authState) {\n          this.log('checkTokenExist - Returning auth and refrsh');\n          this.log({\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          });\n          return {\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          };\n        }\n        this.log('checkTokenExist - Removing Auth Token');\n        this.removeAuth();\n        this.log({\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        });\n        return {\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      } else if (!this.isUsingRefreshToken && !!auth && !!authState) {\n        this.log('checkTokenExist - Returning auth');\n        this.log({\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        });\n        return {\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        };\n      }\n      {\n        this.log('checkTokenExist- removing all tokens. Returning null');\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n    } catch (e) {\n      this.removeAllToken();\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false\n      };\n    }\n  };\n  parseJwt = token => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n  getExpireDateTime = token => {\n    const jwtData = this.parseJwt(token);\n    if (Object.prototype.hasOwnProperty.call(jwtData, 'exp')) {\n      const d = new Date(0);\n      d.setUTCSeconds(jwtData.exp);\n      return d;\n    } else {\n      throw new _errors.AuthError('JWT has no exp param');\n    }\n  };\n  syncTokens = authState => {\n    if (authState.auth) {\n      this.setAuthToken(authState.auth.token, authState.auth.type, authState.userState);\n    } else {\n      this.removeAuth();\n    }\n    if (!!authState.refresh && this.isUsingRefreshToken) {\n      this.setRefreshToken(authState.refresh.token);\n    } else {\n      this.removeRefresh();\n    }\n  };\n  setAuthToken = (authToken, authTokenType, authState) => {\n    if (this.authStorageType === 'cookie') {\n      const expiresAt = this.getExpireDateTime(authToken);\n      _jsCookie.default.set(this.authStorageName, authToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      _jsCookie.default.set(this.authStorageTypeName, authTokenType, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      if (authState) {\n        _jsCookie.default.set(this.stateStorageName, JSON.stringify(authState), {\n          expires: expiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      window.localStorage.setItem(this.authStorageName, authToken);\n      window.localStorage.setItem(this.authStorageTypeName, authTokenType);\n      if (authState) {\n        window.localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n      }\n    }\n  };\n  setRefreshToken = refreshToken => {\n    if (this.authStorageType === 'cookie') {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime(refreshToken);\n        _jsCookie.default.set(this.refreshTokenName, refreshToken, {\n          expires: refreshTokenExpiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n      localStorage.setItem(this.refreshTokenName, refreshToken);\n    }\n  };\n  removeAllToken = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAllCookieToken_();\n    } else {\n      this.removeAllLSToken_();\n    }\n  };\n  removeAllCookieToken_ = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeAllLSToken_ = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  removeAuth = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAuthCookie();\n    } else {\n      this.removeAuthToken();\n    }\n  };\n  removeAuthCookie = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n  };\n  removeAuthToken = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n  };\n  removeRefresh = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeRefreshCookie();\n    } else {\n      this.removeRefreshLocalStorage();\n    }\n  };\n  removeRefreshCookie = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeRefreshLocalStorage = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  log = (msg, ...optionalParams) => {\n    if (this.debug) {\n      console.log(`[Auth Kit] - ${msg}`, optionalParams);\n    }\n  };\n}\nvar _default = exports.default = TokenObject;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createStore;\nvar _RxTokenObject = _interopRequireDefault(require(\"./RxTokenObject\"));\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction createStore(params) {\n  if (params.authType === 'cookie' && (params.cookieDomain === undefined || params.cookieSecure === undefined)) {\n    throw new _errors.AuthError('authType \\'cookie\\' requires \\'cookieDomain\\'' + ' and \\'cookieSecure\\' to be present in the param');\n  }\n  const refreshTokenName = params.refresh ? `${params.authName}_refresh` : null;\n  const tokenObject = new _RxTokenObject.default(params.authName, params.authType, refreshTokenName, params.debug === undefined ? false : params.debug, params.cookieDomain, params.cookieSecure);\n  return {\n    tokenObject,\n    refresh: params.refresh\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthError = void 0;\nclass AuthError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\nexports.AuthError = AuthError;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _AuthContext = require(\"../AuthContext\");\nvar _utils = require(\"../utils/utils\");\nfunction useAuthHeader() {\n  var _useReactAuthKit = (0, _AuthContext.useReactAuthKit)(),\n    value = _useReactAuthKit.value;\n  if (!!value.auth && (0, _utils.isAuthenticated)(value)) {\n    return \"\".concat(value.auth.type, \" \").concat(value.auth.token);\n  } else {\n    return null;\n  }\n}\nvar _default = exports.default = useAuthHeader;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _AuthContext = require(\"../AuthContext\");\nvar _utils = require(\"../utils/utils\");\nfunction useAuthUser() {\n  var _useReactAuthKit = (0, _AuthContext.useReactAuthKit)(),\n    value = _useReactAuthKit.value;\n  if ((0, _utils.isAuthenticated)(value)) {\n    return value.userState;\n  } else {\n    return null;\n  }\n}\nvar _default = exports.default = useAuthUser;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _AuthContext = require(\"../AuthContext\");\nvar _reducers = require(\"../utils/reducers\");\nvar _errors = require(\"../errors\");\nfunction useSignIn() {\n  var context = (0, _AuthContext.useReactAuthKit)();\n  return function (signInConfig) {\n    if (context.value.isUsingRefreshToken) {\n      if (signInConfig.refresh) {\n        context.set((0, _reducers.doSignIn)(signInConfig));\n        return true;\n      } else {\n        throw new _errors.AuthError('This appication is using refresh token feature.' + ' So please include `refresh` param in the parameters');\n      }\n    } else if (signInConfig.refresh) {\n      throw new _errors.AuthError('This appication is not using refresh token feature.' + ' So please remove the `refresh` param in the parameters.' + ' In Case you want to use refresh token feature,' + ' make sure you added that while creating the store.');\n    } else {\n      context.set((0, _reducers.doSignIn)(signInConfig));\n      return true;\n    }\n  };\n}\nvar _default = exports.default = useSignIn;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _AuthContext = require(\"../AuthContext\");\nvar _reducers = require(\"../utils/reducers\");\nfunction useSignOut() {\n  var context = (0, _AuthContext.useReactAuthKit)();\n  return function () {\n    context.set((0, _reducers.doSignOut)());\n  };\n}\nvar _default = exports.default = useSignOut;","\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {};\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AuthProvider.default;\n  }\n});\nvar _errors = require(\"./errors\");\nObject.keys(_errors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _errors[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _errors[key];\n    }\n  });\n});\nvar _AuthProvider = _interopRequireWildcard(require(\"./AuthProvider\"));\nObject.keys(_AuthProvider).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _AuthProvider[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _AuthProvider[key];\n    }\n  });\n});\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInterval = useInterval;\nvar _react = require(\"react\");\nfunction useInterval(callback, delay) {\n  const savedCallback = (0, _react.useRef)(callback);\n  const intervalRef = (0, _react.useRef)(null);\n  (0, _react.useEffect)(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  (0, _react.useEffect)(() => {\n    const tick = () => savedCallback.current();\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay * 60 * 1000);\n    }\n    return () => {\n      if (intervalRef.current) {\n        window.clearTimeout(intervalRef.current);\n      }\n    };\n  }, [delay]);\n  return intervalRef;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.doRefresh = doRefresh;\nexports.doSignIn = doSignIn;\nexports.doSignOut = doSignOut;\nfunction doSignIn(signInParams) {\n  const authType = signInParams.auth.type || 'Bearer';\n  const authToken = signInParams.auth.token;\n  return {\n    auth: {\n      token: authToken,\n      type: authType\n    },\n    refresh: signInParams.refresh,\n    userState: signInParams.userState || {}\n  };\n}\nfunction doRefresh(refreshTokenParam) {\n  let ret = {\n    auth: {\n      token: refreshTokenParam.newAuthToken,\n      type: refreshTokenParam.newAuthTokenType || 'Bearer'\n    }\n  };\n  if (refreshTokenParam.newAuthUserState) {\n    ret = {\n      ...ret,\n      userState: refreshTokenParam.newAuthUserState\n    };\n  }\n  if (refreshTokenParam.newRefreshToken) {\n    ret = {\n      ...ret,\n      refresh: refreshTokenParam.newRefreshToken\n    };\n  }\n  return ret;\n}\nfunction doSignOut() {\n  return {\n    auth: null\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAuthenticated = isAuthenticated;\nfunction isAuthenticated(auth) {\n  if (auth.auth) {\n    return new Date(auth.auth.expiresAt) > new Date();\n  }\n  return false;\n}","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap, TapObserver } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n","/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (n, s, cb) => {\n *   cb(n, s, { someProperty: 'someValue' });\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(5, 'some string').subscribe((values) => {\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\n\nexport function bindCallbackInternals(\n  isNodeStyle: boolean,\n  callbackFunc: any,\n  resultSelector?: any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // The user provided a result selector.\n      return function (this: any, ...args: any[]) {\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\n          .apply(this, args)\n          .pipe(mapOneOrManyArgs(resultSelector as any));\n      };\n    }\n  }\n\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\n  // to compose that behavior for the user.\n  if (scheduler) {\n    return function (this: any, ...args: any[]) {\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\n        .apply(this, args)\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\n    };\n  }\n\n  return function (this: any, ...args: any[]): Observable<any> {\n    // We're using AsyncSubject, because it emits when it completes,\n    // and it will play the value to all late-arriving subscribers.\n    const subject = new AsyncSubject<any>();\n\n    // If this is true, then we haven't called our function yet.\n    let uninitialized = true;\n    return new Observable((subscriber) => {\n      // Add our subscriber to the subject.\n      const subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        // We're going to execute the bound function\n        // This bit is to signal that we are hitting the callback asynchronously.\n        // Because we don't have any anti-\"Zalgo\" guarantees with whatever\n        // function we are handed, we use this bit to figure out whether or not\n        // we are getting hit in a callback synchronously during our call.\n        let isAsync = false;\n\n        // This is used to signal that the callback completed synchronously.\n        let isComplete = false;\n\n        // Call our function that has a callback. If at any time during this\n        // call, an error is thrown, it will be caught by the Observable\n        // subscription process and sent to the consumer.\n        callbackFunc.apply(\n          // Pass the appropriate `this` context.\n          this,\n          [\n            // Pass the arguments.\n            ...args,\n            // And our callback handler.\n            (...results: any[]) => {\n              if (isNodeStyle) {\n                // If this is a node callback, shift the first value off of the\n                // results and check it, as it is the error argument. By shifting,\n                // we leave only the argument(s) we want to pass to the consumer.\n                const err = results.shift();\n                if (err != null) {\n                  subject.error(err);\n                  // If we've errored, we can stop processing this function\n                  // as there's nothing else to do. Just return to escape.\n                  return;\n                }\n              }\n              // If we have one argument, notify the consumer\n              // of it as a single value, otherwise, if there's more than one, pass\n              // them as an array. Note that if there are no arguments, `undefined`\n              // will be emitted.\n              subject.next(1 < results.length ? results : results[0]);\n              // Flip this flag, so we know we can complete it in the synchronous\n              // case below.\n              isComplete = true;\n              // If we're not asynchronous, we need to defer the `complete` call\n              // until after the call to the function is over. This is because an\n              // error could be thrown in the function after it calls our callback,\n              // and if that is the case, if we complete here, we are unable to notify\n              // the consumer than an error occurred.\n              if (isAsync) {\n                subject.complete();\n              }\n            },\n          ]\n        );\n        // If we flipped `isComplete` during the call, we resolved synchronously,\n        // notify complete, because we skipped it in the callback to wait\n        // to make sure there were no errors during the call.\n        if (isComplete) {\n          subject.complete();\n        }\n\n        // We're no longer synchronous. If the callback is called at this point\n        // we can notify complete on the spot.\n        isAsync = true;\n      }\n\n      // Return the subscription from adding our subscriber to the subject.\n      return subs;\n    });\n  };\n}\n","/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n","import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Produces sequence of numbers\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Use `asapScheduler`\n *\n * ```ts\n * import { generate, asapScheduler } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\n\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource: Observable<A[number]>;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n","import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\n\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n *\n * Combine age and name from different sources\n *\n * ```ts\n * import { of, zip, map } from 'rxjs';\n *\n * const age$ = of(27, 25, 29);\n * const name$ = of('Foo', 'Bar', 'Beer');\n * const isDev$ = of(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\n * )\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n *\n * @param sources\n * @return {Observable<R>}\n */\nexport function zip(...args: unknown[]): Observable<unknown> {\n  const resultSelector = popResultSelector(args);\n\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\n\n  return sources.length\n    ? new Observable<unknown[]>((subscriber) => {\n        // A collection of buffers of values from each source.\n        // Keyed by the same index with which the sources were passed in.\n        let buffers: unknown[][] = sources.map(() => []);\n\n        // An array of flags of whether or not the sources have completed.\n        // This is used to check to see if we should complete the result.\n        // Keyed by the same index with which the sources were passed in.\n        let completed = sources.map(() => false);\n\n        // When everything is done, release the arrays above.\n        subscriber.add(() => {\n          buffers = completed = null!;\n        });\n\n        // Loop over our sources and subscribe to each one. The index `i` is\n        // especially important here, because we use it in closures below to\n        // access the related buffers and completion properties\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n          innerFrom(sources[sourceIndex]).subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                buffers[sourceIndex].push(value);\n                // if every buffer has at least one value in it, then we\n                // can shift out the oldest value from each buffer and emit\n                // them as an array.\n                if (buffers.every((buffer) => buffer.length)) {\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\n                  // Emit the array. If theres' a result selector, use that.\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\n                  // If any one of the sources is both complete and has an empty buffer\n                  // then we complete the result. This is because we cannot possibly have\n                  // any more values to zip together.\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                    subscriber.complete();\n                  }\n                }\n              },\n              () => {\n                // This source completed. Mark it as complete so we can check it later\n                // if we have to.\n                completed[sourceIndex] = true;\n                // But, if this complete source has nothing in its buffer, then we\n                // can complete the result, because we can't possibly have any more\n                // values from this to zip together with the other values.\n                !buffers[sourceIndex].length && subscriber.complete();\n              }\n            )\n          );\n        }\n\n        // When everything is done, release the arrays above.\n        return () => {\n          buffers = completed = null!;\n        };\n      })\n    : EMPTY;\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * `ObservableInput` (that internally gets converted to an Observable)\n * emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param closingNotifier An `ObservableInput` that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    innerFrom(closingNotifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (value: O) => ObservableInput<any>\n): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    const buffers: T[][] = [];\n\n    // Subscribe to the openings notifier first\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const buffer: T[] = [];\n          buffers.push(buffer);\n          // We use this composite subscription, so that\n          // when the closing notifier emits, we can tear it down.\n          const closingSubscription = new Subscription();\n\n          const emitBuffer = () => {\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n            closingSubscription.unsubscribe();\n          };\n\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        },\n        noop\n      )\n    );\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Value from our source. Add it to all pending buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n          }\n        },\n        () => {\n          // Source complete. Emit all pending buffers.\n          while (buffers.length > 0) {\n            subscriber.next(buffers.shift()!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n","import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n","import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n","import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param keySelector Optional `function` to select which value you want to check as distinct.\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaustAll.svg)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // when the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n","import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return (source) => oERNCreate(source, ...nextSources);\n}\n\n/**\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\n */\nexport const onErrorResumeNext = onErrorResumeNextWith;\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n","import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n","import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param notifier Function that receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        innerFrom(notifier(completions$)).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` `ObservableInput` emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The `ObservableInput` to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    innerFrom(notifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\n * @param comparator An optional function to compare each value pair.\n *\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided `ObservableInput` were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: ObservableInput<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in its buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n","import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n","import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\n * configuration options of these operators.\n *\n * @see {@link throttle}\n * @see {@link throttleTime}\n */\nexport interface ThrottleConfig {\n  /**\n   * If `true`, the resulting Observable will emit the first value from the source\n   * Observable at the **start** of the \"throttling\" process (when starting an\n   * internal timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the first value from the source Observable at the\n   * start of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `true`.\n   */\n  leading?: boolean;\n  /**\n   * If `true`, the resulting Observable will emit the last value from the source\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\n   * timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the last value from the source Observable at the\n   * end of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `false`.\n   */\n  trailing?: boolean;\n}\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function that receives a value from the source\n * Observable, for computing the silencing duration for each source value,\n * returned as an `ObservableInput`.\n * @param config A configuration object to define `leading` and `trailing`\n * behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading = true, trailing = false } = config ?? {};\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle, ThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config A configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config?: ThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n","import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n","import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to encapsulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\n * `ObservableInput` accepts. It internally gets converted to an Observable.\n * Because each window is an Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param windowBoundaries An `ObservableInput` that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    innerFrom(windowBoundaries).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n *\n * Ignore every 3rd click event, starting from the first one\n *\n * ```ts\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n *\n * ```ts\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll() // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of windows, which in turn are\n * Observable of values.\n */\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n\n  return operate((source, subscriber) => {\n    let windows = [new Subject<T>()];\n    let starts: number[] = [];\n    let count = 0;\n\n    // Open the first window.\n    subscriber.next(windows[0].asObservable());\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Emit the value through all current windows.\n          // We don't need to create a new window yet, we\n          // do that as soon as we close one.\n          for (const window of windows) {\n            window.next(value);\n          }\n          // Here we're using the size of the window array to figure\n          // out if the oldest window has emitted enough values. We can do this\n          // because the size of the window array is a function of the values\n          // seen by the subscription. If it's time to close it, we complete\n          // it and remove it.\n          const c = count - windowSize + 1;\n          if (c >= 0 && c % startEvery === 0) {\n            windows.shift()!.complete();\n          }\n\n          // Look to see if the next count tells us it's time to open a new window.\n          // TODO: We need to figure out if this really makes sense. We're technically\n          // emitting windows *before* we have a value to emit them for. It's probably\n          // more expected that we should be emitting the window when the start\n          // count is reached -- not before.\n          if (++count % startEvery === 0) {\n            const window = new Subject<T>();\n            windows.push(window);\n            subscriber.next(window.asObservable());\n          }\n        },\n        () => {\n          while (windows.length > 0) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        (err) => {\n          while (windows.length > 0) {\n            windows.shift()!.error(err);\n          }\n          subscriber.error(err);\n        },\n        () => {\n          starts = null!;\n          windows = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits a next notification, signals that the\n * associated window should complete.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (openValue: O) => ObservableInput<any>\n): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    const windows: Subject<T>[] = [];\n\n    const handleError = (err: any) => {\n      while (0 < windows.length) {\n        windows.shift()!.error(err);\n      }\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const window = new Subject<T>();\n          windows.push(window);\n          const closingSubscription = new Subscription();\n          const closeWindow = () => {\n            arrRemove(windows, window);\n            window.complete();\n            closingSubscription.unsubscribe();\n          };\n\n          let closingNotifier: Observable<any>;\n          try {\n            closingNotifier = innerFrom(closingSelector(openValue));\n          } catch (err) {\n            handleError(err);\n            return;\n          }\n\n          subscriber.next(window.asObservable());\n\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        },\n        noop\n      )\n    );\n\n    // Subscribe to the source to get things started.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Copy the windows array before we emit to\n          // make sure we don't have issues with reentrant code.\n          const windowsCopy = windows.slice();\n          for (const window of windowsCopy) {\n            window.next(value);\n          }\n        },\n        () => {\n          // Complete all of our windows before we complete.\n          while (0 < windows.length) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Add this finalization so that all window subjects are\n          // disposed of. This way, if a user tries to subscribe\n          // to a window *after* the outer subscription has been unsubscribed,\n          // they will get an error, instead of waiting forever to\n          // see if a value arrives.\n          while (0 < windows.length) {\n            windows.shift()!.unsubscribe();\n          }\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destination subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { zip } from './zip';\n\n/**\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\n *\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\n * then the second value from each will be combined into a single array and emitted, then the third value\n * from each will be combined into a single array and emitted, and so on.\n *\n * This will continue until it is no longer able to combine values of the same index into an array.\n *\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\n * as there is no way to continue \"zipping\" values together by index.\n *\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\n * at a similar pace, or finite streams of known length.\n *\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\n *\n * @param otherInputs other observable inputs to collate values from.\n * @return A function that returns an Observable that emits items by index\n * combined from the source Observable and provided Observables, in form of an\n * array.\n */\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\n  return zip(...otherInputs);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n","import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","/* tslint:disable:no-empty */\nexport function noop() { }\n","export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = React.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-sync-external-store-with-selector.production.js');\n} else {\n  module.exports = require('./cjs/use-sync-external-store-with-selector.development.js');\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"7bcff3df\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"front-riad:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfront_riad\"] = self[\"webpackChunkfront_riad\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport type AgnosticPatchRoutesOnNavigationFunctionArgs<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = {\n  path: string;\n  matches: M[];\n  patch: (routeId: string | null, children: O[]) => void;\n};\n\nexport type AgnosticPatchRoutesOnNavigationFunction<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = (\n  opts: AgnosticPatchRoutesOnNavigationFunctionArgs<O, M>\n) => void | Promise<void>;\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      viewTransitionOpts?: ViewTransitionOpts;\n      flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches\n        .slice(0, idx + 1)\n        .every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error: discoverResult.error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    abortFetcher(key);\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        abortFetcher(staleKey);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset,\n        });\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties\n            );\n          },\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search\n        ? path.search.replace(/^\\?/, \"?index&\")\n        : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string,\n  includeBoundary = false\n) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  initialHydration: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      initialHydration ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction shouldLoadRouteOnHydration(\n  route: AgnosticDataRouteObject,\n  loaderData: RouteData | null | undefined,\n  errors: RouteData | null | undefined\n) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  let childrenToPatch: AgnosticDataRouteObject[];\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(\n    (newRoute) =>\n      !childrenToPatch.some((existingRoute) =>\n        isSameRoute(newRoute, existingRoute)\n      )\n  );\n\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n\n  childrenToPatch.push(...newRoutes);\n}\n\nfunction isSameRoute(\n  newRoute: AgnosticRouteObject,\n  existingRoute: AgnosticRouteObject\n): boolean {\n  // Most optimal check is by id\n  if (\n    \"id\" in newRoute &&\n    \"id\" in existingRoute &&\n    newRoute.id === existingRoute.id\n  ) {\n    return true;\n  }\n\n  // Second is by pathing differences\n  if (\n    !(\n      newRoute.index === existingRoute.index &&\n      newRoute.path === existingRoute.path &&\n      newRoute.caseSensitive === existingRoute.caseSensitive\n    )\n  ) {\n    return false;\n  }\n\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if (\n    (!newRoute.children || newRoute.children.length === 0) &&\n    (!existingRoute.children || existingRoute.children.length === 0)\n  ) {\n    return true;\n  }\n\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children!.every((aChild, i) =>\n    existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n  viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type { FutureConfig as RouterFutureConfig } from \"@remix-run/router\";\nimport type { FutureConfig as RenderFutureConfig } from \"./components\";\n\nconst alreadyWarned: { [key: string]: boolean } = {};\n\nexport function warnOnce(key: string, message: string): void {\n  if (!alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\n\nconst logDeprecation = (flag: string, msg: string, link: string) =>\n  warnOnce(\n    flag,\n    `⚠️ React Router Future Flag Warning: ${msg}. ` +\n      `You can use the \\`${flag}\\` future flag to opt-in early. ` +\n      `For more information, see ${link}.`\n  );\n\nexport function logV6DeprecationWarnings(\n  renderFuture: Partial<RenderFutureConfig> | undefined,\n  routerFuture?: Omit<RouterFutureConfig, \"v7_prependBasename\">\n) {\n  if (!renderFuture?.v7_startTransition) {\n    logDeprecation(\n      \"v7_startTransition\",\n      \"React Router will begin wrapping state updates in `React.startTransition` in v7\",\n      \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\"\n    );\n  }\n\n  if (\n    !renderFuture?.v7_relativeSplatPath &&\n    (!routerFuture || !routerFuture.v7_relativeSplatPath)\n  ) {\n    logDeprecation(\n      \"v7_relativeSplatPath\",\n      \"Relative route resolution within Splat routes is changing in v7\",\n      \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\"\n    );\n  }\n\n  if (routerFuture) {\n    if (!routerFuture.v7_fetcherPersist) {\n      logDeprecation(\n        \"v7_fetcherPersist\",\n        \"The persistence behavior of fetchers is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\"\n      );\n    }\n\n    if (!routerFuture.v7_normalizeFormMethod) {\n      logDeprecation(\n        \"v7_normalizeFormMethod\",\n        \"Casing of `formMethod` fields is being normalized to uppercase in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\"\n      );\n    }\n\n    if (!routerFuture.v7_partialHydration) {\n      logDeprecation(\n        \"v7_partialHydration\",\n        \"`RouterProvider` hydration behavior is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\"\n      );\n    }\n\n    if (!routerFuture.v7_skipActionErrorRevalidation) {\n      logDeprecation(\n        \"v7_skipActionErrorRevalidation\",\n        \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\"\n      );\n    }\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\nimport { logV6DeprecationWarnings } from \"./deprecations\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [router, future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AgnosticPatchRoutesOnNavigationFunction,\n  AgnosticPatchRoutesOnNavigationFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  HydrationState,\n  InitialEntry,\n  JsonFunction,\n  LazyRouteFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathParam,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  FutureConfig as RouterFutureConfig,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  FutureConfig,\n  IndexRouteProps,\n  LayoutRouteProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  PathRouteProps,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n} from \"./lib/components\";\nimport {\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createRoutesFromChildren,\n  renderMatches,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  NavigateOptions,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteId,\n  useRouteLoaderData,\n  useRoutes,\n  useRoutesImpl,\n} from \"./lib/hooks\";\nimport { logV6DeprecationWarnings } from \"./lib/deprecations\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LazyRouteFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  Pathname,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  Blocker,\n  BlockerFunction,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useBlocker,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport type PatchRoutesOnNavigationFunctionArgs =\n  AgnosticPatchRoutesOnNavigationFunctionArgs<RouteObject, RouteMatch>;\n\nexport type PatchRoutesOnNavigationFunction =\n  AgnosticPatchRoutesOnNavigationFunction<RouteObject, RouteMatch>;\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.HydrateFallback) {\n    if (__DEV__) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" +\n            \"`HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n    dataStrategy?: DataStrategyFunction;\n    patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  LocationContext as UNSAFE_LocationContext,\n  NavigationContext as UNSAFE_NavigationContext,\n  RouteContext as UNSAFE_RouteContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n  logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_logV6DeprecationWarnings as logV6DeprecationWarnings,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [future, router.future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Default to a dummy \"batch\" implementation that just runs the callback\r\nexport function defaultNoopBatch(callback: () => void) {\r\n  callback()\r\n}\r\n","import { defaultNoopBatch as batch } from './batch'\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\ntype VoidFunc = () => void\n\ntype Listener = {\n  callback: VoidFunc\n  next: Listener | null\n  prev: Listener | null\n}\n\nfunction createListenerCollection() {\n  let first: Listener | null = null\n  let last: Listener | null = null\n\n  return {\n    clear() {\n      first = null\n      last = null\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first\n        while (listener) {\n          listener.callback()\n          listener = listener.next\n        }\n      })\n    },\n\n    get() {\n      const listeners: Listener[] = []\n      let listener = first\n      while (listener) {\n        listeners.push(listener)\n        listener = listener.next\n      }\n      return listeners\n    },\n\n    subscribe(callback: () => void) {\n      let isSubscribed = true\n\n      const listener: Listener = (last = {\n        callback,\n        next: null,\n        prev: last,\n      })\n\n      if (listener.prev) {\n        listener.prev.next = listener\n      } else {\n        first = listener\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return\n        isSubscribed = false\n\n        if (listener.next) {\n          listener.next.prev = listener.prev\n        } else {\n          last = listener.prev\n        }\n        if (listener.prev) {\n          listener.prev.next = listener.next\n        } else {\n          first = listener.next\n        }\n      }\n    },\n  }\n}\n\ntype ListenerCollection = ReturnType<typeof createListenerCollection>\n\nexport interface Subscription {\n  addNestedSub: (listener: VoidFunc) => VoidFunc\n  notifyNestedSubs: VoidFunc\n  handleChangeWrapper: VoidFunc\n  isSubscribed: () => boolean\n  onStateChange?: VoidFunc | null\n  trySubscribe: VoidFunc\n  tryUnsubscribe: VoidFunc\n  getListeners: () => ListenerCollection\n}\n\nconst nullListeners = {\n  notify() {},\n  get: () => [],\n} as unknown as ListenerCollection\n\nexport function createSubscription(store: any, parentSub?: Subscription) {\n  let unsubscribe: VoidFunc | undefined\n  let listeners: ListenerCollection = nullListeners\n\n  // Reasons to keep the subscription active\n  let subscriptionsAmount = 0\n\n  // Is this specific subscription subscribed (or only nested ones?)\n  let selfSubscribed = false\n\n  function addNestedSub(listener: () => void) {\n    trySubscribe()\n\n    const cleanupListener = listeners.subscribe(listener)\n\n    // cleanup nested sub\n    let removed = false\n    return () => {\n      if (!removed) {\n        removed = true\n        cleanupListener()\n        tryUnsubscribe()\n      }\n    }\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify()\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange()\n    }\n  }\n\n  function isSubscribed() {\n    return selfSubscribed\n  }\n\n  function trySubscribe() {\n    subscriptionsAmount++\n    if (!unsubscribe) {\n      unsubscribe = parentSub\n        ? parentSub.addNestedSub(handleChangeWrapper)\n        : store.subscribe(handleChangeWrapper)\n\n      listeners = createListenerCollection()\n    }\n  }\n\n  function tryUnsubscribe() {\n    subscriptionsAmount--\n    if (unsubscribe && subscriptionsAmount === 0) {\n      unsubscribe()\n      unsubscribe = undefined\n      listeners.clear()\n      listeners = nullListeners\n    }\n  }\n\n  function trySubscribeSelf() {\n    if (!selfSubscribed) {\n      selfSubscribed = true\n      trySubscribe()\n    }\n  }\n\n  function tryUnsubscribeSelf() {\n    if (selfSubscribed) {\n      selfSubscribed = false\n      tryUnsubscribe()\n    }\n  }\n\n  const subscription: Subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe: trySubscribeSelf,\n    tryUnsubscribe: tryUnsubscribeSelf,\n    getListeners: () => listeners,\n  }\n\n  return subscription\n}\n","import { React } from '../utils/react'\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n\n// Matches logic in React's `shared/ExecutionEnvironment` file\nconst canUseDOM = () =>\n  !!(\n    typeof window !== 'undefined' &&\n    typeof window.document !== 'undefined' &&\n    typeof window.document.createElement !== 'undefined'\n  )\n\nconst isDOM = /* @__PURE__ */ canUseDOM()\n\n// Under React Native, we know that we always want to use useLayoutEffect\n\n/**\n * Checks if the code is running in a React Native environment.\n *\n * @returns Whether the code is running in a React Native environment.\n *\n * @see {@link https://github.com/facebook/react-native/issues/1331 Reference}\n */\nconst isRunningInReactNative = () =>\n  typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nconst isReactNative = /* @__PURE__ */ isRunningInReactNative()\n\nconst getUseIsomorphicLayoutEffect = () =>\n  isDOM || isReactNative ? React.useLayoutEffect : React.useEffect\n\nexport const useIsomorphicLayoutEffect =\n  /* @__PURE__ */ getUseIsomorphicLayoutEffect()\n","// Copied directly from:\n// https://github.com/mridgway/hoist-non-react-statics/blob/main/src/index.js\n// https://unpkg.com/browse/@types/hoist-non-react-statics@3.3.6/index.d.ts\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nimport type { ForwardRefExoticComponent, MemoExoticComponent } from 'react'\nimport { ForwardRef, Memo, isMemo } from '../utils/react-is'\n\nconst REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true,\n} as const\n\nconst KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true,\n} as const\n\nconst FORWARD_REF_STATICS = {\n  $$typeof: true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n} as const\n\nconst MEMO_STATICS = {\n  $$typeof: true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true,\n} as const\n\nconst TYPE_STATICS = {\n  [ForwardRef]: FORWARD_REF_STATICS,\n  [Memo]: MEMO_STATICS,\n} as const\n\nfunction getStatics(component: any) {\n  // React v16.11 and below\n  if (isMemo(component)) {\n    return MEMO_STATICS\n  }\n\n  // React v16.12 and above\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS\n}\n\nexport type NonReactStatics<\n  Source,\n  C extends {\n    [key: string]: true\n  } = {},\n> = {\n  [key in Exclude<\n    keyof Source,\n    Source extends MemoExoticComponent<any>\n      ? keyof typeof MEMO_STATICS | keyof C\n      : Source extends ForwardRefExoticComponent<any>\n        ? keyof typeof FORWARD_REF_STATICS | keyof C\n        : keyof typeof REACT_STATICS | keyof typeof KNOWN_STATICS | keyof C\n  >]: Source[key]\n}\n\nconst defineProperty = Object.defineProperty\nconst getOwnPropertyNames = Object.getOwnPropertyNames\nconst getOwnPropertySymbols = Object.getOwnPropertySymbols\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nconst getPrototypeOf = Object.getPrototypeOf\nconst objectPrototype = Object.prototype\n\nexport default function hoistNonReactStatics<\n  Target,\n  Source,\n  CustomStatic extends {\n    [key: string]: true\n  } = {},\n>(\n  targetComponent: Target,\n  sourceComponent: Source,\n): Target & NonReactStatics<Source, CustomStatic> {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n\n    if (objectPrototype) {\n      const inheritedComponent = getPrototypeOf(sourceComponent)\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent)\n      }\n    }\n\n    let keys: (string | symbol)[] = getOwnPropertyNames(sourceComponent)\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent))\n    }\n\n    const targetStatics = getStatics(targetComponent)\n    const sourceStatics = getStatics(sourceComponent)\n\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i]\n      if (\n        !KNOWN_STATICS[key as keyof typeof KNOWN_STATICS] &&\n        !(sourceStatics && sourceStatics[key as keyof typeof sourceStatics]) &&\n        !(targetStatics && targetStatics[key as keyof typeof targetStatics])\n      ) {\n        const descriptor = getOwnPropertyDescriptor(sourceComponent, key)\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor!)\n        } catch (e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n  return targetComponent as any\n}\n","import type { Context } from 'react'\nimport { React } from '../utils/react'\nimport type { Action, Store, UnknownAction } from 'redux'\nimport type { Subscription } from '../utils/Subscription'\nimport type { ProviderProps } from './Provider'\n\nexport interface ReactReduxContextValue<\n  SS = any,\n  A extends Action<string> = UnknownAction,\n> extends Pick<ProviderProps, 'stabilityCheck' | 'identityFunctionCheck'> {\n  store: Store<SS, A>\n  subscription: Subscription\n  getServerState?: () => SS\n}\n\nconst ContextKey = /* @__PURE__ */ Symbol.for(`react-redux-context`)\nconst gT: {\n  [ContextKey]?: Map<\n    typeof React.createContext,\n    Context<ReactReduxContextValue | null>\n  >\n} = (\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */ {}\n) as any\n\nfunction getContext(): Context<ReactReduxContextValue | null> {\n  if (!React.createContext) return {} as any\n\n  const contextMap = (gT[ContextKey] ??= new Map<\n    typeof React.createContext,\n    Context<ReactReduxContextValue | null>\n  >())\n  let realContext = contextMap.get(React.createContext)\n  if (!realContext) {\n    realContext = React.createContext<ReactReduxContextValue | null>(\n      null as any,\n    )\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux'\n    }\n    contextMap.set(React.createContext, realContext)\n  }\n  return realContext\n}\n\nexport const ReactReduxContext = /*#__PURE__*/ getContext()\n\nexport type ReactReduxContextInstance = typeof ReactReduxContext\n","import type { Context, ReactNode } from 'react'\nimport { React } from '../utils/react'\nimport type { Action, Store, UnknownAction } from 'redux'\nimport type { DevModeCheckFrequency } from '../hooks/useSelector'\nimport { createSubscription } from '../utils/Subscription'\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect'\nimport type { ReactReduxContextValue } from './Context'\nimport { ReactReduxContext } from './Context'\n\nexport interface ProviderProps<\n  A extends Action<string> = UnknownAction,\n  S = unknown,\n> {\n  /**\n   * The single Redux store in your application.\n   */\n  store: Store<S, A>\n\n  /**\n   * An optional server state snapshot. Will be used during initial hydration render if available, to ensure that the UI output is consistent with the HTML generated on the server.\n   */\n  serverState?: S\n\n  /**\n   * Optional context to be used internally in react-redux. Use React.createContext() to create a context to be used.\n   * If this is used, you'll need to customize `connect` by supplying the same context provided to the Provider.\n   * Set the initial value to null, and the hooks will error\n   * if this is not overwritten by Provider.\n   */\n  context?: Context<ReactReduxContextValue<S, A> | null>\n\n  /**\n   * Determines the frequency of stability checks for all selectors.\n   * This setting overrides the global configuration for\n   * the `useSelector` stability check, allowing you to specify how often\n   * these checks should occur in development mode.\n   *\n   * @since 8.1.0\n   */\n  stabilityCheck?: DevModeCheckFrequency\n\n  /**\n   * Determines the frequency of identity function checks for all selectors.\n   * This setting overrides the global configuration for\n   * the `useSelector` identity function check, allowing you to specify how often\n   * these checks should occur in development mode.\n   *\n   * **Note**: Previously referred to as `noopCheck`.\n   *\n   * @since 9.0.0\n   */\n  identityFunctionCheck?: DevModeCheckFrequency\n\n  children: ReactNode\n}\n\nfunction Provider<A extends Action<string> = UnknownAction, S = unknown>(\n  providerProps: ProviderProps<A, S>,\n) {\n  const { children, context, serverState, store } = providerProps\n\n  const contextValue = React.useMemo(() => {\n    const subscription = createSubscription(store)\n\n    const baseContextValue = {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined,\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return baseContextValue\n    } else {\n      const { identityFunctionCheck = 'once', stabilityCheck = 'once' } =\n        providerProps\n\n      return /* @__PURE__ */ Object.assign(baseContextValue, {\n        stabilityCheck,\n        identityFunctionCheck,\n      })\n    }\n  }, [store, serverState])\n\n  const previousState = React.useMemo(() => store.getState(), [store])\n\n  useIsomorphicLayoutEffect(() => {\n    const { subscription } = contextValue\n    subscription.onStateChange = subscription.notifyNestedSubs\n    subscription.trySubscribe()\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs()\n    }\n    return () => {\n      subscription.tryUnsubscribe()\n      subscription.onStateChange = undefined\n    }\n  }, [contextValue, previousState])\n\n  const Context = context || ReactReduxContext\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>\n}\n\nexport default Provider\n","import { React } from '../utils/react'\nimport { ReactReduxContext } from '../components/Context'\nimport type { ReactReduxContextValue } from '../components/Context'\n\n/**\n * Hook factory, which creates a `useReduxContext` hook bound to a given context. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useReduxContext` hook bound to the specified context.\n */\nexport function createReduxContextHook(context = ReactReduxContext) {\n  return function useReduxContext(): ReactReduxContextValue {\n    const contextValue = React.useContext(context)\n\n    if (process.env.NODE_ENV !== 'production' && !contextValue) {\n      throw new Error(\n        'could not find react-redux context value; please ensure the component is wrapped in a <Provider>',\n      )\n    }\n\n    return contextValue!\n  }\n}\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport const useReduxContext = /*#__PURE__*/ createReduxContextHook()\n","import type { Context } from 'react'\nimport type { Action, Store } from 'redux'\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport {\n  createReduxContextHook,\n  useReduxContext as useDefaultReduxContext,\n} from './useReduxContext'\n\n/**\n * Represents a type that extracts the action type from a given Redux store.\n *\n * @template StoreType - The specific type of the Redux store.\n *\n * @since 9.1.0\n * @internal\n */\nexport type ExtractStoreActionType<StoreType extends Store> =\n  StoreType extends Store<any, infer ActionType> ? ActionType : never\n\n/**\n * Represents a custom hook that provides access to the Redux store.\n *\n * @template StoreType - The specific type of the Redux store that gets returned.\n *\n * @since 9.1.0\n * @public\n */\nexport interface UseStore<StoreType extends Store> {\n  /**\n   * Returns the Redux store instance.\n   *\n   * @returns The Redux store instance.\n   */\n  (): StoreType\n\n  /**\n   * Returns the Redux store instance with specific state and action types.\n   *\n   * @returns The Redux store with the specified state and action types.\n   *\n   * @template StateType - The specific type of the state used in the store.\n   * @template ActionType - The specific type of the actions used in the store.\n   */\n  <\n    StateType extends ReturnType<StoreType['getState']> = ReturnType<\n      StoreType['getState']\n    >,\n    ActionType extends Action = ExtractStoreActionType<Store>,\n  >(): Store<StateType, ActionType>\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useStore useStore}\n   * where the type of the Redux `store` is predefined.\n   *\n   * This allows you to set the `store` type once, eliminating the need to\n   * specify it with every {@linkcode useStore useStore} call.\n   *\n   * @returns A pre-typed `useStore` with the store type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppStore = useStore.withTypes<AppStore>()\n   * ```\n   *\n   * @template OverrideStoreType - The specific type of the Redux store that gets returned.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideStoreType extends StoreType,\n  >() => UseStore<OverrideStoreType>\n}\n\n/**\n * Hook factory, which creates a `useStore` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useStore` hook bound to the specified context.\n */\nexport function createStoreHook<\n  StateType = unknown,\n  ActionType extends Action = Action,\n>(\n  // @ts-ignore\n  context?: Context<ReactReduxContextValue<\n    StateType,\n    ActionType\n  > | null> = ReactReduxContext,\n) {\n  const useReduxContext =\n    context === ReactReduxContext\n      ? useDefaultReduxContext\n      : // @ts-ignore\n        createReduxContextHook(context)\n  const useStore = () => {\n    const { store } = useReduxContext()\n    return store\n  }\n\n  Object.assign(useStore, {\n    withTypes: () => useStore,\n  })\n\n  return useStore as UseStore<Store<StateType, ActionType>>\n}\n\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\nexport const useStore = /*#__PURE__*/ createStoreHook()\n","import type { Context } from 'react'\nimport type { Action, Dispatch, UnknownAction } from 'redux'\n\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport { createStoreHook, useStore as useDefaultStore } from './useStore'\n\n/**\n * Represents a custom hook that provides a dispatch function\n * from the Redux store.\n *\n * @template DispatchType - The specific type of the dispatch function.\n *\n * @since 9.1.0\n * @public\n */\nexport interface UseDispatch<\n  DispatchType extends Dispatch<UnknownAction> = Dispatch<UnknownAction>,\n> {\n  /**\n   * Returns the dispatch function from the Redux store.\n   *\n   * @returns The dispatch function from the Redux store.\n   *\n   * @template AppDispatch - The specific type of the dispatch function.\n   */\n  <AppDispatch extends DispatchType = DispatchType>(): AppDispatch\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useDispatch useDispatch}\n   * where the type of the `dispatch` function is predefined.\n   *\n   * This allows you to set the `dispatch` type once, eliminating the need to\n   * specify it with every {@linkcode useDispatch useDispatch} call.\n   *\n   * @returns A pre-typed `useDispatch` with the dispatch type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppDispatch = useDispatch.withTypes<AppDispatch>()\n   * ```\n   *\n   * @template OverrideDispatchType - The specific type of the dispatch function.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideDispatchType extends DispatchType,\n  >() => UseDispatch<OverrideDispatchType>\n}\n\n/**\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useDispatch` hook bound to the specified context.\n */\nexport function createDispatchHook<\n  StateType = unknown,\n  ActionType extends Action = UnknownAction,\n>(\n  // @ts-ignore\n  context?: Context<ReactReduxContextValue<\n    StateType,\n    ActionType\n  > | null> = ReactReduxContext,\n) {\n  const useStore =\n    context === ReactReduxContext ? useDefaultStore : createStoreHook(context)\n\n  const useDispatch = () => {\n    const store = useStore()\n    return store.dispatch\n  }\n\n  Object.assign(useDispatch, {\n    withTypes: () => useDispatch,\n  })\n\n  return useDispatch as UseDispatch<Dispatch<ActionType>>\n}\n\n/**\n * A hook to access the redux `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\nexport const useDispatch = /*#__PURE__*/ createDispatchHook()\n","//import * as React from 'react'\nimport { React } from '../utils/react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector.js'\nimport type { ReactReduxContextValue } from '../components/Context'\nimport { ReactReduxContext } from '../components/Context'\nimport type { EqualityFn, NoInfer } from '../types'\nimport {\n  createReduxContextHook,\n  useReduxContext as useDefaultReduxContext,\n} from './useReduxContext'\n\n/**\n * The frequency of development mode checks.\n *\n * @since 8.1.0\n * @internal\n */\nexport type DevModeCheckFrequency = 'never' | 'once' | 'always'\n\n/**\n * Represents the configuration for development mode checks.\n *\n * @since 9.0.0\n * @internal\n */\nexport interface DevModeChecks {\n  /**\n   * Overrides the global stability check for the selector.\n   * - `once` - Run only the first time the selector is called.\n   * - `always` - Run every time the selector is called.\n   * - `never` - Never run the stability check.\n   *\n   * @default 'once'\n   *\n   * @since 8.1.0\n   */\n  stabilityCheck: DevModeCheckFrequency\n\n  /**\n   * Overrides the global identity function check for the selector.\n   * - `once` - Run only the first time the selector is called.\n   * - `always` - Run every time the selector is called.\n   * - `never` - Never run the identity function check.\n   *\n   * **Note**: Previously referred to as `noopCheck`.\n   *\n   * @default 'once'\n   *\n   * @since 9.0.0\n   */\n  identityFunctionCheck: DevModeCheckFrequency\n}\n\nexport interface UseSelectorOptions<Selected = unknown> {\n  equalityFn?: EqualityFn<Selected>\n\n  /**\n   * `useSelector` performs additional checks in development mode to help\n   * identify and warn about potential issues in selector behavior. This\n   * option allows you to customize the behavior of these checks per selector.\n   *\n   * @since 9.0.0\n   */\n  devModeChecks?: Partial<DevModeChecks>\n}\n\n/**\n * Represents a custom hook that allows you to extract data from the\n * Redux store state, using a selector function. The selector function\n * takes the current state as an argument and returns a part of the state\n * or some derived data. The hook also supports an optional equality\n * function or options object to customize its behavior.\n *\n * @template StateType - The specific type of state this hook operates on.\n *\n * @public\n */\nexport interface UseSelector<StateType = unknown> {\n  /**\n   * A function that takes a selector function as its first argument.\n   * The selector function is responsible for selecting a part of\n   * the Redux store's state or computing derived data.\n   *\n   * @param selector - A function that receives the current state and returns a part of the state or some derived data.\n   * @param equalityFnOrOptions - An optional equality function or options object for customizing the behavior of the selector.\n   * @returns The selected part of the state or derived data.\n   *\n   * @template TState - The specific type of state this hook operates on.\n   * @template Selected - The type of the value that the selector function will return.\n   */\n  <TState extends StateType = StateType, Selected = unknown>(\n    selector: (state: TState) => Selected,\n    equalityFnOrOptions?: EqualityFn<Selected> | UseSelectorOptions<Selected>,\n  ): Selected\n\n  /**\n   * Creates a \"pre-typed\" version of {@linkcode useSelector useSelector}\n   * where the `state` type is predefined.\n   *\n   * This allows you to set the `state` type once, eliminating the need to\n   * specify it with every {@linkcode useSelector useSelector} call.\n   *\n   * @returns A pre-typed `useSelector` with the state type already defined.\n   *\n   * @example\n   * ```ts\n   * export const useAppSelector = useSelector.withTypes<RootState>()\n   * ```\n   *\n   * @template OverrideStateType - The specific type of state this hook operates on.\n   *\n   * @since 9.1.0\n   */\n  withTypes: <\n    OverrideStateType extends StateType,\n  >() => UseSelector<OverrideStateType>\n}\n\nconst refEquality: EqualityFn<any> = (a, b) => a === b\n\n/**\n * Hook factory, which creates a `useSelector` hook bound to a given context.\n *\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useSelector` hook bound to the specified context.\n */\nexport function createSelectorHook(\n  context: React.Context<ReactReduxContextValue<\n    any,\n    any\n  > | null> = ReactReduxContext,\n): UseSelector {\n  const useReduxContext =\n    context === ReactReduxContext\n      ? useDefaultReduxContext\n      : createReduxContextHook(context)\n\n  const useSelector = <TState, Selected>(\n    selector: (state: TState) => Selected,\n    equalityFnOrOptions:\n      | EqualityFn<NoInfer<Selected>>\n      | UseSelectorOptions<NoInfer<Selected>> = {},\n  ): Selected => {\n    const { equalityFn = refEquality } =\n      typeof equalityFnOrOptions === 'function'\n        ? { equalityFn: equalityFnOrOptions }\n        : equalityFnOrOptions\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`)\n      }\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`)\n      }\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\n          `You must pass a function as an equality function to useSelector`,\n        )\n      }\n    }\n\n    const reduxContext = useReduxContext()\n\n    const { store, subscription, getServerState } = reduxContext\n\n    const firstRun = React.useRef(true)\n\n    const wrappedSelector = React.useCallback<typeof selector>(\n      {\n        [selector.name](state: TState) {\n          const selected = selector(state)\n          if (process.env.NODE_ENV !== 'production') {\n            const { devModeChecks = {} } =\n              typeof equalityFnOrOptions === 'function'\n                ? {}\n                : equalityFnOrOptions\n            const { identityFunctionCheck, stabilityCheck } = reduxContext\n            const {\n              identityFunctionCheck: finalIdentityFunctionCheck,\n              stabilityCheck: finalStabilityCheck,\n            } = {\n              stabilityCheck,\n              identityFunctionCheck,\n              ...devModeChecks,\n            }\n            if (\n              finalStabilityCheck === 'always' ||\n              (finalStabilityCheck === 'once' && firstRun.current)\n            ) {\n              const toCompare = selector(state)\n              if (!equalityFn(selected, toCompare)) {\n                let stack: string | undefined = undefined\n                try {\n                  throw new Error()\n                } catch (e) {\n                  // eslint-disable-next-line no-extra-semi\n                  ;({ stack } = e as Error)\n                }\n                console.warn(\n                  'Selector ' +\n                    (selector.name || 'unknown') +\n                    ' returned a different result when called with the same parameters. This can lead to unnecessary rerenders.' +\n                    '\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization',\n                  {\n                    state,\n                    selected,\n                    selected2: toCompare,\n                    stack,\n                  },\n                )\n              }\n            }\n            if (\n              finalIdentityFunctionCheck === 'always' ||\n              (finalIdentityFunctionCheck === 'once' && firstRun.current)\n            ) {\n              // @ts-ignore\n              if (selected === state) {\n                let stack: string | undefined = undefined\n                try {\n                  throw new Error()\n                } catch (e) {\n                  // eslint-disable-next-line no-extra-semi\n                  ;({ stack } = e as Error)\n                }\n                console.warn(\n                  'Selector ' +\n                    (selector.name || 'unknown') +\n                    ' returned the root state when called. This can lead to unnecessary rerenders.' +\n                    '\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.',\n                  { stack },\n                )\n              }\n            }\n            if (firstRun.current) firstRun.current = false\n          }\n          return selected\n        },\n      }[selector.name],\n      [selector],\n    )\n\n    const selectedState = useSyncExternalStoreWithSelector(\n      subscription.addNestedSub,\n      store.getState,\n      getServerState || store.getState,\n      wrappedSelector,\n      equalityFn,\n    )\n\n    React.useDebugValue(selectedState)\n\n    return selectedState\n  }\n\n  Object.assign(useSelector, {\n    withTypes: () => useSelector,\n  })\n\n  return useSelector as UseSelector\n}\n\n/**\n * A hook to access the redux store's state. This hook takes a selector function\n * as an argument. The selector is called with the store state.\n *\n * This hook takes an optional equality comparison function as the second parameter\n * that allows you to customize the way the selected state is compared to determine\n * whether the component needs to be re-rendered.\n *\n * @param {Function} selector the selector function\n * @param {Function=} equalityFn the function that will be used to determine equality\n *\n * @returns {any} the selected state\n *\n * @example\n *\n * import React from 'react'\n * import { useSelector } from 'react-redux'\n *\n * export const CounterComponent = () => {\n *   const counter = useSelector(state => state.counter)\n *   return <div>{counter}</div>\n * }\n */\nexport const useSelector = /*#__PURE__*/ createSelectorHook()\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}","declare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\nconst $$observable = /* #__PURE__ */(() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\nexport default $$observable;","/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nconst randomString = () => Math.random().toString(36).substring(7).split('').join('.');\nconst ActionTypes = {\n  INIT: `@@redux/INIT${/* #__PURE__ */randomString()}`,\n  REPLACE: `@@redux/REPLACE${/* #__PURE__ */randomString()}`,\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\n};\nexport default ActionTypes;","/**\n * @param obj The object to inspect.\n * @returns True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj: any): obj is object {\n  if (typeof obj !== 'object' || obj === null) return false;\n  let proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(obj) === proto || Object.getPrototypeOf(obj) === null;\n}","import { formatProdErrorMessage as _formatProdErrorMessage13 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage12 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage11 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage10 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage9 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage8 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage7 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage6 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport $$observable from './utils/symbol-observable';\nimport { Store, StoreEnhancer, Dispatch, Observer, ListenerCallback, UnknownIfNonSpecific } from './types/store';\nimport { Action } from './types/actions';\nimport { Reducer } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport { kindOf } from './utils/kindOf';\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(2) : `Expected the root reducer to be a function. Instead, received: '${kindOf(reducer)}'`);\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = (preloadedState as StoreEnhancer<Ext, StateExt>);\n    preloadedState = undefined;\n  }\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(1) : `Expected the enhancer to be a function. Instead, received: '${kindOf(enhancer)}'`);\n    }\n    return enhancer(createStore)(reducer, (preloadedState as PreloadedState | undefined));\n  }\n  let currentReducer = reducer;\n  let currentState: S | PreloadedState | undefined = (preloadedState as PreloadedState | undefined);\n  let currentListeners: Map<number, ListenerCallback> | null = new Map();\n  let nextListeners = currentListeners;\n  let listenerIdCounter = 0;\n  let isDispatching = false;\n\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = new Map();\n      currentListeners.forEach((listener, key) => {\n        nextListeners.set(key, listener);\n      });\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns The current state tree of your application.\n   */\n  function getState(): S {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n    return (currentState as S);\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param listener A callback to be invoked on every dispatch.\n   * @returns A function to remove this change listener.\n   */\n  function subscribe(listener: () => void) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(4) : `Expected the listener to be a function. Instead, received: '${kindOf(listener)}'`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n    let isSubscribed = true;\n    ensureCanMutateNextListeners();\n    const listenerId = listenerIdCounter++;\n    nextListeners.set(listenerId, listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      nextListeners.delete(listenerId);\n      currentListeners = null;\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action: A) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(7) : `Actions must be plain objects. Instead, the actual type was: '${kindOf(action)}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`);\n    }\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage9(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n    if (typeof action.type !== 'string') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage10(17) : `Action \"type\" property must be a string. Instead, the actual type was: '${kindOf(action.type)}'. Value was: '${action.type}' (stringified)`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage11(9) : 'Reducers may not dispatch actions.');\n    }\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n    const listeners = currentListeners = nextListeners;\n    listeners.forEach(listener => {\n      listener();\n    });\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param nextReducer The reducer for the store to use instead.\n   */\n  function replaceReducer(nextReducer: Reducer<S, A>): void {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage12(10) : `Expected the nextReducer to be a function. Instead, received: '${kindOf(nextReducer)}`);\n    }\n    currentReducer = ((nextReducer as unknown) as Reducer<S, A, PreloadedState>);\n\n    // This action has a similar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n    dispatch(({\n      type: ActionTypes.REPLACE\n    } as A));\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    const outerSubscribe = subscribe;\n    return {\n      /**\n       * The minimal observable subscription method.\n       * @param observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe(observer: unknown) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage13(11) : `Expected the observer to be an object. Instead, received: '${kindOf(observer)}'`);\n        }\n        function observeState() {\n          const observerAsObserver = (observer as Observer<S>);\n          if (observerAsObserver.next) {\n            observerAsObserver.next(getState());\n          }\n        }\n        observeState();\n        const unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe\n        };\n      },\n      [$$observable]() {\n        return this;\n      }\n    };\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch(({\n    type: ActionTypes.INIT\n  } as A));\n  const store = (({\n    dispatch: (dispatch as Dispatch<A>),\n    subscribe,\n    getState,\n    replaceReducer,\n    [$$observable]: observable\n  } as unknown) as Store<S, A, StateExt> & Ext);\n  return store;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  return createStore(reducer, (preloadedState as any), enhancer);\n}","import { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport { Action } from './types/actions';\nimport { ActionFromReducersMapObject, PreloadedStateShapeFromReducersMapObject, Reducer, StateFromReducersMapObject } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport warning from './utils/warning';\nimport { kindOf } from './utils/kindOf';\nfunction getUnexpectedStateShapeWarningMessage(inputState: object, reducers: {\n  [key: string]: Reducer<any, any, any>;\n}, action: Action, unexpectedKeyCache: {\n  [key: string]: true;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n  if (!isPlainObject(inputState)) {\n    return `The ${argumentName} has unexpected type of \"${kindOf(inputState)}\". Expected argument to be an object with the following ` + `keys: \"${reducerKeys.join('\", \"')}\"`;\n  }\n  const unexpectedKeys = Object.keys(inputState).filter(key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]);\n  unexpectedKeys.forEach(key => {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n  if (unexpectedKeys.length > 0) {\n    return `Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` + `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` + `Expected to find one of the known reducer keys instead: ` + `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`;\n  }\n}\nfunction assertReducerShape(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  Object.keys(reducers).forEach(key => {\n    const reducer = reducers[key];\n    const initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(12) : `The slice reducer for key \"${key}\" returned undefined during initialization. ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n    }\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(13) : `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` + `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` + `namespace. They are considered private. Instead, you must return the ` + `current state for any unknown actions, unless it is undefined, ` + `in which case you must return the initial state, regardless of the ` + `action type. The initial state may not be undefined, but can be null.`);\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @template S Combined state object type.\n *\n * @param reducers An object whose values correspond to different reducer\n *   functions that need to be combined into one. One handy way to obtain it\n *   is to use `import * as reducers` syntax. The reducers may never\n *   return undefined for any action. Instead, they should return their\n *   initial state if the state passed to them was undefined, and the current\n *   state for any unrecognized action.\n *\n * @returns A reducer function that invokes every reducer inside the passed\n *   object, and builds a state object with the same shape.\n */\nexport default function combineReducers<M>(reducers: M): M[keyof M] extends Reducer<any, any, any> | undefined ? Reducer<StateFromReducersMapObject<M>, ActionFromReducersMapObject<M>, Partial<PreloadedStateShapeFromReducersMapObject<M>>> : never;\nexport default function combineReducers(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: {\n    [key: string]: Reducer<any, any, any>;\n  } = {};\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(`No reducer provided for key \"${key}\"`);\n      }\n    }\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  // This is used to make sure we don't warn about the same\n  // keys multiple times.\n  let unexpectedKeyCache: {\n    [key: string]: true;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n  let shapeAssertionError: unknown;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n  return function combination(state: StateFromReducersMapObject<typeof reducers> = {}, action: Action) {\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n    let hasChanged = false;\n    const nextState: StateFromReducersMapObject<typeof reducers> = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        const actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(14) : `When called with an action of type ${actionType ? `\"${String(actionType)}\"` : '(unknown type)'}, the slice reducer for key \"${key}\" returned undefined. ` + `To ignore an action, you must explicitly return the previous state. ` + `If you want this reducer to hold no value, you can return null instead of undefined.`);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}","type Func<T extends any[], R> = (...a: T) => R;\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for the\n * resulting composite function.\n *\n * @param funcs The functions to compose.\n * @returns A function obtained by composing the argument functions from right\n *   to left. For example, `compose(f, g, h)` is identical to doing\n *   `(...args) => f(g(h(...args)))`.\n */\nexport default function compose(): <R>(a: R) => R;\nexport default function compose<F extends Function>(f: F): F;\n\n/* two functions */\nexport default function compose<A, T extends any[], R>(f1: (a: A) => R, f2: Func<T, A>): Func<T, R>;\n\n/* three functions */\nexport default function compose<A, B, T extends any[], R>(f1: (b: B) => R, f2: (a: A) => B, f3: Func<T, A>): Func<T, R>;\n\n/* four functions */\nexport default function compose<A, B, C, T extends any[], R>(f1: (c: C) => R, f2: (b: B) => C, f3: (a: A) => B, f4: Func<T, A>): Func<T, R>;\n\n/* rest */\nexport default function compose<R>(f1: (a: any) => R, ...funcs: Function[]): (...args: any[]) => R;\nexport default function compose<R>(...funcs: Function[]): (...args: any[]) => R;\nexport default function compose(...funcs: Function[]) {\n  if (funcs.length === 0) {\n    // infer the argument type so it is usable in inference down the line\n    return <T,>(arg: T) => arg;\n  }\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n  return funcs.reduce((a, b) => (...args: any) => a(b(...args)));\n}","// src/index.ts\nfunction createThunkMiddleware(extraArgument) {\n  const middleware = ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === \"function\") {\n      return action(dispatch, getState, extraArgument);\n    }\n    return next(action);\n  };\n  return middleware;\n}\nvar thunk = createThunkMiddleware();\nvar withExtraArgument = createThunkMiddleware;\nexport {\n  thunk,\n  withExtraArgument\n};\n","// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n","export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie,\n\tStrictMode\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/**\n * Each iterates a map, set or array.\n * Or, if any other kind of object, all of its own properties.\n * Regardless whether they are enumerable or symbols\n */\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tReflect.ownKeys(obj).forEach(key => {\n\t\t\titer(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: StrictMode) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tconst isPlain = isPlainObject(base)\n\n\tif (strict === true || (strict === \"class_only\" && !isPlain)) {\n\t\t// Perform a strict copy\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tlet keys = Reflect.ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tconst desc = descriptors[key]\n\t\t\tif (desc.writable === false) {\n\t\t\t\tdesc.writable = true\n\t\t\t\tdesc.configurable = true\n\t\t\t}\n\t\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t\t// with libraries that trap values, like mobx or vue\n\t\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\t\tif (desc.get || desc.set)\n\t\t\t\tdescriptors[key] = {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\t\tvalue: base[key]\n\t\t\t\t}\n\t\t}\n\t\treturn Object.create(getPrototypeOf(base), descriptors)\n\t} else {\n\t\t// perform a sloppy copy\n\t\tconst proto = getPrototypeOf(base)\n\t\tif (proto !== null && isPlain) {\n\t\t\treturn {...base} // assumption: better inner class optimization than the assign below\n\t\t}\n\t\tconst obj = Object.create(proto)\n\t\treturn Object.assign(obj, base)\n\t}\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep)\n\t\t// See #590, don't recurse into non-enumerable / Symbol properties when freezing\n\t\t// So use Object.entries (only string-like, enumerables) instead of each()\n\t\tObject.entries(obj).forEach(([key, value]) => freeze(value, true))\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: readonly Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// Immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\t// Per #590, we never freeze symbolic properties. Just to make sure don't accidentally interfere\n\t\t// with other frameworks.\n\t\tif (\n\t\t\t(!parentState || !parentState.scope_.parent_) &&\n\t\t\ttypeof prop !== \"symbol\" &&\n\t\t\tObject.prototype.propertyIsEnumerable.call(targetObject, prop)\n\t\t)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport type StrictMode = boolean | \"class_only\";\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: StrictMode = false\n\n\tconstructor(config?: {\n\t\tautoFreeze?: boolean\n\t\tuseStrictShallowCopy?: StrictMode\n\t}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: StrictMode) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: readonly Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tWritableDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\tProducer,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish,\n\tStrictMode\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n","import { current, isDraft } from 'immer';\nimport { createSelectorCreator, weakMapMemoize } from 'reselect';\nexport const createDraftSafeSelectorCreator: typeof createSelectorCreator = (...args: unknown[]) => {\n  const createSelector = (createSelectorCreator as any)(...args);\n  const createDraftSafeSelector = Object.assign((...args: unknown[]) => {\n    const selector = createSelector(...args);\n    const wrappedSelector = (value: unknown, ...rest: unknown[]) => selector(isDraft(value) ? current(value) : value, ...rest);\n    Object.assign(wrappedSelector, selector);\n    return wrappedSelector as any;\n  }, {\n    withTypes: () => createDraftSafeSelector\n  });\n  return createDraftSafeSelector;\n};\n\n/**\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\n * the selector will act on the current draft value, instead of returning a cached value\n * that might be possibly outdated if the draft has been modified since.\n * @public\n */\nexport const createDraftSafeSelector = /* @__PURE__ */\ncreateDraftSafeSelectorCreator(weakMapMemoize);","import type { Action, ActionCreator, StoreEnhancer } from 'redux';\nimport { compose } from 'redux';\n\n/**\n * @public\n */\nexport interface DevToolsEnhancerOptions {\n  /**\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\n   */\n  name?: string;\n  /**\n   * action creators functions to be available in the Dispatcher.\n   */\n  actionCreators?: ActionCreator<any>[] | {\n    [key: string]: ActionCreator<any>;\n  };\n  /**\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\n   *\n   * @default 500 ms.\n   */\n  latency?: number;\n  /**\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\n   *\n   * @default 50\n   */\n  maxAge?: number;\n  /**\n   * Customizes how actions and state are serialized and deserialized. Can be a boolean or object. If given a boolean, the behavior is the same as if you\n   * were to pass an object and specify `options` as a boolean. Giving an object allows fine-grained customization using the `replacer` and `reviver`\n   * functions.\n   */\n  serialize?: boolean | {\n    /**\n     * - `undefined` - will use regular `JSON.stringify` to send data (it's the fast mode).\n     * - `false` - will handle also circular references.\n     * - `true` - will handle also date, regex, undefined, error objects, symbols, maps, sets and functions.\n     * - object, which contains `date`, `regex`, `undefined`, `error`, `symbol`, `map`, `set` and `function` keys.\n     *   For each of them you can indicate if to include (by setting as `true`).\n     *   For `function` key you can also specify a custom function which handles serialization.\n     *   See [`jsan`](https://github.com/kolodny/jsan) for more details.\n     */\n    options?: undefined | boolean | {\n      date?: true;\n      regex?: true;\n      undefined?: true;\n      error?: true;\n      symbol?: true;\n      map?: true;\n      set?: true;\n      function?: true | ((fn: (...args: any[]) => any) => string);\n    };\n    /**\n     * [JSON replacer function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter) used for both actions and states stringify.\n     * In addition, you can specify a data type by adding a [`__serializedType__`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/helpers/index.js#L4)\n     * key. So you can deserialize it back while importing or persisting data.\n     * Moreover, it will also [show a nice preview showing the provided custom type](https://cloud.githubusercontent.com/assets/7957859/21814330/a17d556a-d761-11e6-85ef-159dd12f36c5.png):\n     */\n    replacer?: (key: string, value: unknown) => any;\n    /**\n     * [JSON `reviver` function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter)\n     * used for parsing the imported actions and states. See [`remotedev-serialize`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/immutable/serialize.js#L8-L41)\n     * as an example on how to serialize special data types and get them back.\n     */\n    reviver?: (key: string, value: unknown) => any;\n    /**\n     * Automatically serialize/deserialize immutablejs via [remotedev-serialize](https://github.com/zalmoxisus/remotedev-serialize).\n     * Just pass the Immutable library. It will support all ImmutableJS structures. You can even export them into a file and get them back.\n     * The only exception is `Record` class, for which you should pass this in addition the references to your classes in `refs`.\n     */\n    immutable?: any;\n    /**\n     * ImmutableJS `Record` classes used to make possible restore its instances back when importing, persisting...\n     */\n    refs?: any;\n  };\n  /**\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\n   */\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A;\n  /**\n   * function which takes `state` object and index as arguments, and should return `state` object back.\n   */\n  stateSanitizer?: <S>(state: S, index: number) => S;\n  /**\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\n   */\n  actionsDenylist?: string | string[];\n  /**\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\n   */\n  actionsAllowlist?: string | string[];\n  /**\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\n   * Use it as a more advanced version of `actionsDenylist`/`actionsAllowlist` parameters.\n   */\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean;\n  /**\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\n   * Available only for Redux enhancer, for others use `autoPause`.\n   *\n   * @default true\n   */\n  shouldRecordChanges?: boolean;\n  /**\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\n   * If not specified, will commit when paused. Available only for Redux enhancer.\n   *\n   * @default \"@@PAUSED\"\"\n   */\n  pauseActionType?: string;\n  /**\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\n   *\n   * @default false\n   */\n  autoPause?: boolean;\n  /**\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\n   * Available only for Redux enhancer.\n   *\n   * @default false\n   */\n  shouldStartLocked?: boolean;\n  /**\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\n   *\n   * @default true\n   */\n  shouldHotReload?: boolean;\n  /**\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\n   *\n   * @default false\n   */\n  shouldCatchErrors?: boolean;\n  /**\n   * If you want to restrict the extension, specify the features you allow.\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\n   * Otherwise, you'll get/set the data right from the monitor part.\n   */\n  features?: {\n    /**\n     * start/pause recording of dispatched actions\n     */\n    pause?: boolean;\n    /**\n     * lock/unlock dispatching actions and side effects\n     */\n    lock?: boolean;\n    /**\n     * persist states on page reloading\n     */\n    persist?: boolean;\n    /**\n     * export history of actions in a file\n     */\n    export?: boolean | 'custom';\n    /**\n     * import history of actions from a file\n     */\n    import?: boolean | 'custom';\n    /**\n     * jump back and forth (time travelling)\n     */\n    jump?: boolean;\n    /**\n     * skip (cancel) actions\n     */\n    skip?: boolean;\n    /**\n     * drag and drop actions in the history list\n     */\n    reorder?: boolean;\n    /**\n     * dispatch custom actions or action creators\n     */\n    dispatch?: boolean;\n    /**\n     * generate tests for the selected actions\n     */\n    test?: boolean;\n  };\n  /**\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\n   * Defaults to false.\n   */\n  trace?: boolean | (<A extends Action>(action: A) => string);\n  /**\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\n   */\n  traceLimit?: number;\n}\ntype Compose = typeof compose;\ninterface ComposeWithDevTools {\n  (options: DevToolsEnhancerOptions): Compose;\n  <StoreExt extends {}>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>;\n}\n\n/**\n * @public\n */\nexport const composeWithDevTools: ComposeWithDevTools = typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {\n  if (arguments.length === 0) return undefined;\n  if (typeof arguments[0] === 'object') return compose;\n  return compose.apply(null, arguments as any as Function[]);\n};\n\n/**\n * @public\n */\nexport const devToolsEnhancer: {\n  (options: DevToolsEnhancerOptions): StoreEnhancer<any>;\n} = typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION__ : function () {\n  return function (noop) {\n    return noop;\n  };\n};","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport { isAction } from 'redux';\nimport type { IsUnknownOrNonInferrable, IfMaybeUndefined, IfVoid, IsAny } from './tsHelpers';\nimport { hasMatchFunction } from './tsHelpers';\n\n/**\n * An action with a string type and an associated payload. This is the\n * type of action returned by `createAction()` action creators.\n *\n * @template P The type of the action's payload.\n * @template T the type used for the action type.\n * @template M The type of the action's meta (optional)\n * @template E The type of the action's error (optional)\n *\n * @public\n */\nexport type PayloadAction<P = void, T extends string = string, M = never, E = never> = {\n  payload: P;\n  type: T;\n} & ([M] extends [never] ? {} : {\n  meta: M;\n}) & ([E] extends [never] ? {} : {\n  error: E;\n});\n\n/**\n * A \"prepare\" method to be used as the second parameter of `createAction`.\n * Takes any number of arguments and returns a Flux Standard Action without\n * type (will be added later) that *must* contain a payload (might be undefined).\n *\n * @public\n */\nexport type PrepareAction<P> = ((...args: any[]) => {\n  payload: P;\n}) | ((...args: any[]) => {\n  payload: P;\n  meta: any;\n}) | ((...args: any[]) => {\n  payload: P;\n  error: any;\n}) | ((...args: any[]) => {\n  payload: P;\n  meta: any;\n  error: any;\n});\n\n/**\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\n *\n * @internal\n */\nexport type _ActionCreatorWithPreparedPayload<PA extends PrepareAction<any> | void, T extends string = string> = PA extends PrepareAction<infer P> ? ActionCreatorWithPreparedPayload<Parameters<PA>, P, T, ReturnType<PA> extends {\n  error: infer E;\n} ? E : never, ReturnType<PA> extends {\n  meta: infer M;\n} ? M : never> : void;\n\n/**\n * Basic type for all action creators.\n *\n * @inheritdoc {redux#ActionCreator}\n */\nexport type BaseActionCreator<P, T extends string, M = never, E = never> = {\n  type: T;\n  match: (action: unknown) => action is PayloadAction<P, T, M, E>;\n};\n\n/**\n * An action creator that takes multiple arguments that are passed\n * to a `PrepareAction` method to create the final Action.\n * @typeParam Args arguments for the action creator function\n * @typeParam P `payload` type\n * @typeParam T `type` name\n * @typeParam E optional `error` type\n * @typeParam M optional `meta` type\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithPreparedPayload<Args extends unknown[], P, T extends string = string, E = never, M = never> extends BaseActionCreator<P, T, M, E> {\n  /**\n   * Calling this {@link redux#ActionCreator} with `Args` will return\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\n   */\n  (...args: Args): PayloadAction<P, T, M, E>;\n}\n\n/**\n * An action creator of type `T` that takes an optional payload of type `P`.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string> extends BaseActionCreator<P, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\n   */\n  (payload?: P): PayloadAction<P, T>;\n}\n\n/**\n * An action creator of type `T` that takes no payload.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithoutPayload<T extends string = string> extends BaseActionCreator<undefined, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} will\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\n   */\n  (noArgument: void): PayloadAction<undefined, T>;\n}\n\n/**\n * An action creator of type `T` that requires a payload of type P.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithPayload<P, T extends string = string> extends BaseActionCreator<P, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\n   */\n  (payload: P): PayloadAction<P, T>;\n}\n\n/**\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithNonInferrablePayload<T extends string = string> extends BaseActionCreator<unknown, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload\n   * of exactly the type of the argument.\n   */\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>;\n}\n\n/**\n * An action creator that produces actions with a `payload` attribute.\n *\n * @typeParam P the `payload` type\n * @typeParam T the `type` of the resulting action\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\n *\n * @public\n */\nexport type PayloadActionCreator<P = void, T extends string = string, PA extends PrepareAction<P> | void = void> = IfPrepareActionMethodProvided<PA, _ActionCreatorWithPreparedPayload<PA, T>,\n// else\nIsAny<P, ActionCreatorWithPayload<any, T>, IsUnknownOrNonInferrable<P, ActionCreatorWithNonInferrablePayload<T>,\n// else\nIfVoid<P, ActionCreatorWithoutPayload<T>,\n// else\nIfMaybeUndefined<P, ActionCreatorWithOptionalPayload<P, T>,\n// else\nActionCreatorWithPayload<P, T>>>>>>;\n\n/**\n * A utility function to create an action creator for the given action type\n * string. The action creator accepts a single argument, which will be included\n * in the action object as a field called payload. The action creator function\n * will also have its toString() overridden so that it returns the action type.\n *\n * @param type The action type to use for created actions.\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\n *\n * @public\n */\nexport function createAction<P = void, T extends string = string>(type: T): PayloadActionCreator<P, T>;\n\n/**\n * A utility function to create an action creator for the given action type\n * string. The action creator accepts a single argument, which will be included\n * in the action object as a field called payload. The action creator function\n * will also have its toString() overridden so that it returns the action type.\n *\n * @param type The action type to use for created actions.\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\n *\n * @public\n */\nexport function createAction<PA extends PrepareAction<any>, T extends string = string>(type: T, prepareAction: PA): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>;\nexport function createAction(type: string, prepareAction?: Function): any {\n  function actionCreator(...args: any[]) {\n    if (prepareAction) {\n      let prepared = prepareAction(...args);\n      if (!prepared) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(0) : 'prepareAction did not return an object');\n      }\n      return {\n        type,\n        payload: prepared.payload,\n        ...('meta' in prepared && {\n          meta: prepared.meta\n        }),\n        ...('error' in prepared && {\n          error: prepared.error\n        })\n      };\n    }\n    return {\n      type,\n      payload: args[0]\n    };\n  }\n  actionCreator.toString = () => `${type}`;\n  actionCreator.type = type;\n  actionCreator.match = (action: unknown): action is PayloadAction => isAction(action) && action.type === type;\n  return actionCreator;\n}\n\n/**\n * Returns true if value is an RTK-like action creator, with a static type property and match method.\n */\nexport function isActionCreator(action: unknown): action is BaseActionCreator<unknown, string> & Function {\n  return typeof action === 'function' && 'type' in action &&\n  // hasMatchFunction only wants Matchers but I don't see the point in rewriting it\n  hasMatchFunction(action as any);\n}\n\n/**\n * Returns true if value is an action with a string type and valid Flux Standard Action keys.\n */\nexport function isFSA(action: unknown): action is {\n  type: string;\n  payload?: unknown;\n  error?: unknown;\n  meta?: unknown;\n} {\n  return isAction(action) && Object.keys(action).every(isValidKey);\n}\nfunction isValidKey(key: string) {\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1;\n}\n\n// helper types for more readable typings\n\ntype IfPrepareActionMethodProvided<PA extends PrepareAction<any> | void, True, False> = PA extends (...args: any[]) => any ? True : False;","import { Action } from '../types/actions';\nimport isPlainObject from './isPlainObject';\nexport default function isAction(action: unknown): action is Action<string> {\n  return isPlainObject(action) && 'type' in action && typeof (action as Record<'type', unknown>).type === 'string';\n}","import { produce as createNextState, isDraftable } from 'immer';\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\n  let elapsed = 0;\n  return {\n    measureTime<T>(fn: () => T): T {\n      const started = Date.now();\n      try {\n        return fn();\n      } finally {\n        const finished = Date.now();\n        elapsed += finished - started;\n      }\n    },\n    warnIfExceeded() {\n      if (elapsed > maxDelay) {\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.`);\n      }\n    }\n  };\n}\nexport function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport class Tuple<Items extends ReadonlyArray<unknown> = []> extends Array<Items[number]> {\n  constructor(length: number);\n  constructor(...items: Items);\n  constructor(...items: any[]) {\n    super(...items);\n    Object.setPrototypeOf(this, Tuple.prototype);\n  }\n  static override get [Symbol.species]() {\n    return Tuple as any;\n  }\n  override concat<AdditionalItems extends ReadonlyArray<unknown>>(items: Tuple<AdditionalItems>): Tuple<[...Items, ...AdditionalItems]>;\n  override concat<AdditionalItems extends ReadonlyArray<unknown>>(items: AdditionalItems): Tuple<[...Items, ...AdditionalItems]>;\n  override concat<AdditionalItems extends ReadonlyArray<unknown>>(...items: AdditionalItems): Tuple<[...Items, ...AdditionalItems]>;\n  override concat(...arr: any[]) {\n    return super.concat.apply(this, arr);\n  }\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(items: Tuple<AdditionalItems>): Tuple<[...AdditionalItems, ...Items]>;\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(items: AdditionalItems): Tuple<[...AdditionalItems, ...Items]>;\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(...items: AdditionalItems): Tuple<[...AdditionalItems, ...Items]>;\n  prepend(...arr: any[]) {\n    if (arr.length === 1 && Array.isArray(arr[0])) {\n      return new Tuple(...arr[0].concat(this));\n    }\n    return new Tuple(...arr.concat(this));\n  }\n}\nexport function freezeDraftable<T>(val: T) {\n  return isDraftable(val) ? createNextState(val, () => {}) : val;\n}\nexport function getOrInsert<K extends object, V>(map: WeakMap<K, V>, key: K, value: V): V;\nexport function getOrInsert<K, V>(map: Map<K, V>, key: K, value: V): V;\nexport function getOrInsert<K extends object, V>(map: Map<K, V> | WeakMap<K, V>, key: K, value: V): V {\n  if (map.has(key)) return map.get(key) as V;\n  return map.set(key, value).get(key) as V;\n}\nexport function getOrInsertComputed<K extends object, V>(map: WeakMap<K, V>, key: K, compute: (key: K) => V): V;\nexport function getOrInsertComputed<K, V>(map: Map<K, V>, key: K, compute: (key: K) => V): V;\nexport function getOrInsertComputed<K extends object, V>(map: Map<K, V> | WeakMap<K, V>, key: K, compute: (key: K) => V): V {\n  if (map.has(key)) return map.get(key) as V;\n  return map.set(key, compute(key)).get(key) as V;\n}","import type { Middleware, UnknownAction } from 'redux';\nimport type { ThunkMiddleware } from 'redux-thunk';\nimport { thunk as thunkMiddleware, withExtraArgument } from 'redux-thunk';\nimport type { ActionCreatorInvariantMiddlewareOptions } from './actionCreatorInvariantMiddleware';\nimport { createActionCreatorInvariantMiddleware } from './actionCreatorInvariantMiddleware';\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware';\n/* PROD_START_REMOVE_UMD */\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware';\n/* PROD_STOP_REMOVE_UMD */\n\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware';\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware';\nimport type { ExcludeFromTuple } from './tsHelpers';\nimport { Tuple } from './utils';\nfunction isBoolean(x: any): x is boolean {\n  return typeof x === 'boolean';\n}\ninterface ThunkOptions<E = any> {\n  extraArgument: E;\n}\ninterface GetDefaultMiddlewareOptions {\n  thunk?: boolean | ThunkOptions;\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions;\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions;\n  actionCreatorCheck?: boolean | ActionCreatorInvariantMiddlewareOptions;\n}\nexport type ThunkMiddlewareFor<S, O extends GetDefaultMiddlewareOptions = {}> = O extends {\n  thunk: false;\n} ? never : O extends {\n  thunk: {\n    extraArgument: infer E;\n  };\n} ? ThunkMiddleware<S, UnknownAction, E> : ThunkMiddleware<S, UnknownAction>;\nexport type GetDefaultMiddleware<S = any> = <O extends GetDefaultMiddlewareOptions = {\n  thunk: true;\n  immutableCheck: true;\n  serializableCheck: true;\n  actionCreatorCheck: true;\n}>(options?: O) => Tuple<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>;\nexport const buildGetDefaultMiddleware = <S = any,>(): GetDefaultMiddleware<S> => function getDefaultMiddleware(options) {\n  const {\n    thunk = true,\n    immutableCheck = true,\n    serializableCheck = true,\n    actionCreatorCheck = true\n  } = options ?? {};\n  let middlewareArray = new Tuple<Middleware[]>();\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(thunkMiddleware);\n    } else {\n      middlewareArray.push(withExtraArgument(thunk.extraArgument));\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (immutableCheck) {\n      /* PROD_START_REMOVE_UMD */\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {};\n      if (!isBoolean(immutableCheck)) {\n        immutableOptions = immutableCheck;\n      }\n      middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\n      /* PROD_STOP_REMOVE_UMD */\n    }\n    if (serializableCheck) {\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {};\n      if (!isBoolean(serializableCheck)) {\n        serializableOptions = serializableCheck;\n      }\n      middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\n    }\n    if (actionCreatorCheck) {\n      let actionCreatorOptions: ActionCreatorInvariantMiddlewareOptions = {};\n      if (!isBoolean(actionCreatorCheck)) {\n        actionCreatorOptions = actionCreatorCheck;\n      }\n      middlewareArray.unshift(createActionCreatorInvariantMiddleware(actionCreatorOptions));\n    }\n  }\n  return middlewareArray as any;\n};","import type { StoreEnhancer } from 'redux';\nexport const SHOULD_AUTOBATCH = 'RTK_autoBatch';\nexport const prepareAutoBatched = <T,>() => (payload: T): {\n  payload: T;\n  meta: unknown;\n} => ({\n  payload,\n  meta: {\n    [SHOULD_AUTOBATCH]: true\n  }\n});\nconst createQueueWithTimer = (timeout: number) => {\n  return (notify: () => void) => {\n    setTimeout(notify, timeout);\n  };\n};\nexport type AutoBatchOptions = {\n  type: 'tick';\n} | {\n  type: 'timer';\n  timeout: number;\n} | {\n  type: 'raf';\n} | {\n  type: 'callback';\n  queueNotification: (notify: () => void) => void;\n};\n\n/**\n * A Redux store enhancer that watches for \"low-priority\" actions, and delays\n * notifying subscribers until either the queued callback executes or the\n * next \"standard-priority\" action is dispatched.\n *\n * This allows dispatching multiple \"low-priority\" actions in a row with only\n * a single subscriber notification to the UI after the sequence of actions\n * is finished, thus improving UI re-render performance.\n *\n * Watches for actions with the `action.meta[SHOULD_AUTOBATCH]` attribute.\n * This can be added to `action.meta` manually, or by using the\n * `prepareAutoBatched` helper.\n *\n * By default, it will queue a notification for the end of the event loop tick.\n * However, you can pass several other options to configure the behavior:\n * - `{type: 'tick'}`: queues using `queueMicrotask`\n * - `{type: 'timer', timeout: number}`: queues using `setTimeout`\n * - `{type: 'raf'}`: queues using `requestAnimationFrame` (default)\n * - `{type: 'callback', queueNotification: (notify: () => void) => void}`: lets you provide your own callback\n *\n *\n */\nexport const autoBatchEnhancer = (options: AutoBatchOptions = {\n  type: 'raf'\n}): StoreEnhancer => next => (...args) => {\n  const store = next(...args);\n  let notifying = true;\n  let shouldNotifyAtEndOfTick = false;\n  let notificationQueued = false;\n  const listeners = new Set<() => void>();\n  const queueCallback = options.type === 'tick' ? queueMicrotask : options.type === 'raf' ?\n  // requestAnimationFrame won't exist in SSR environments. Fall back to a vague approximation just to keep from erroring.\n  typeof window !== 'undefined' && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10) : options.type === 'callback' ? options.queueNotification : createQueueWithTimer(options.timeout);\n  const notifyListeners = () => {\n    // We're running at the end of the event loop tick.\n    // Run the real listener callbacks to actually update the UI.\n    notificationQueued = false;\n    if (shouldNotifyAtEndOfTick) {\n      shouldNotifyAtEndOfTick = false;\n      listeners.forEach(l => l());\n    }\n  };\n  return Object.assign({}, store, {\n    // Override the base `store.subscribe` method to keep original listeners\n    // from running if we're delaying notifications\n    subscribe(listener: () => void) {\n      // Each wrapped listener will only call the real listener if\n      // the `notifying` flag is currently active when it's called.\n      // This lets the base store work as normal, while the actual UI\n      // update becomes controlled by this enhancer.\n      const wrappedListener: typeof listener = () => notifying && listener();\n      const unsubscribe = store.subscribe(wrappedListener);\n      listeners.add(listener);\n      return () => {\n        unsubscribe();\n        listeners.delete(listener);\n      };\n    },\n    // Override the base `store.dispatch` method so that we can check actions\n    // for the `shouldAutoBatch` flag and determine if batching is active\n    dispatch(action: any) {\n      try {\n        // If the action does _not_ have the `shouldAutoBatch` flag,\n        // we resume/continue normal notify-after-each-dispatch behavior\n        notifying = !action?.meta?.[SHOULD_AUTOBATCH];\n        // If a `notifyListeners` microtask was queued, you can't cancel it.\n        // Instead, we set a flag so that it's a no-op when it does run\n        shouldNotifyAtEndOfTick = !notifying;\n        if (shouldNotifyAtEndOfTick) {\n          // We've seen at least 1 action with `SHOULD_AUTOBATCH`. Try to queue\n          // a microtask to notify listeners at the end of the event loop tick.\n          // Make sure we only enqueue this _once_ per tick.\n          if (!notificationQueued) {\n            notificationQueued = true;\n            queueCallback(notifyListeners);\n          }\n        }\n        // Go ahead and process the action as usual, including reducers.\n        // If normal notification behavior is enabled, the store will notify\n        // all of its own listeners, and the wrapper callbacks above will\n        // see `notifying` is true and pass on to the real listener callbacks.\n        // If we're \"batching\" behavior, then the wrapped callbacks will\n        // bail out, causing the base store notification behavior to be no-ops.\n        return store.dispatch(action);\n      } finally {\n        // Assume we're back to normal behavior after each action\n        notifying = true;\n      }\n    }\n  });\n};","import type { StoreEnhancer } from 'redux';\nimport type { AutoBatchOptions } from './autoBatchEnhancer';\nimport { autoBatchEnhancer } from './autoBatchEnhancer';\nimport { Tuple } from './utils';\nimport type { Middlewares } from './configureStore';\nimport type { ExtractDispatchExtensions } from './tsHelpers';\ntype GetDefaultEnhancersOptions = {\n  autoBatch?: boolean | AutoBatchOptions;\n};\nexport type GetDefaultEnhancers<M extends Middlewares<any>> = (options?: GetDefaultEnhancersOptions) => Tuple<[StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>]>;\nexport const buildGetDefaultEnhancers = <M extends Middlewares<any>,>(middlewareEnhancer: StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>): GetDefaultEnhancers<M> => function getDefaultEnhancers(options) {\n  const {\n    autoBatch = true\n  } = options ?? {};\n  let enhancerArray = new Tuple<StoreEnhancer[]>(middlewareEnhancer);\n  if (autoBatch) {\n    enhancerArray.push(autoBatchEnhancer(typeof autoBatch === 'object' ? autoBatch : undefined));\n  }\n  return enhancerArray as any;\n};","import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3, formatProdErrorMessage as _formatProdErrorMessage4, formatProdErrorMessage as _formatProdErrorMessage5, formatProdErrorMessage as _formatProdErrorMessage6 } from \"@reduxjs/toolkit\";\nimport type { Action } from 'redux';\nimport type { CaseReducer, CaseReducers, ActionMatcherDescriptionCollection } from './createReducer';\nimport type { TypeGuard } from './tsHelpers';\nexport type TypedActionCreator<Type extends string> = {\n  (...args: any[]): Action<Type>;\n  type: Type;\n};\n\n/**\n * A builder for an action <-> reducer map.\n *\n * @public\n */\nexport interface ActionReducerMapBuilder<State> {\n  /**\n   * Adds a case reducer to handle a single exact action type.\n   * @remarks\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<ActionCreator extends TypedActionCreator<string>>(actionCreator: ActionCreator, reducer: CaseReducer<State, ReturnType<ActionCreator>>): ActionReducerMapBuilder<State>;\n  /**\n   * Adds a case reducer to handle a single exact action type.\n   * @remarks\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<Type extends string, A extends Action<Type>>(type: Type, reducer: CaseReducer<State, A>): ActionReducerMapBuilder<State>;\n\n  /**\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\n   * @remarks\n   * If multiple matcher reducers match, all of them will be executed in the order\n   * they were defined in - even if a case reducer already matched.\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\n   *   function\n   * @param reducer - The actual case reducer function.\n   *\n   * @example\n  ```ts\n  import {\n  createAction,\n  createReducer,\n  AsyncThunk,\n  UnknownAction,\n  } from \"@reduxjs/toolkit\";\n  type GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\n  type PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\n  type RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\n  type FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\n  const initialState: Record<string, string> = {};\n  const resetAction = createAction(\"reset-tracked-loading-state\");\n  function isPendingAction(action: UnknownAction): action is PendingAction {\n  return typeof action.type === \"string\" && action.type.endsWith(\"/pending\");\n  }\n  const reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(resetAction, () => initialState)\n    // matcher can be defined outside as a type predicate function\n    .addMatcher(isPendingAction, (state, action) => {\n      state[action.meta.requestId] = \"pending\";\n    })\n    .addMatcher(\n      // matcher can be defined inline as a type predicate function\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\n      (state, action) => {\n        state[action.meta.requestId] = \"rejected\";\n      }\n    )\n    // matcher can just return boolean and the matcher can receive a generic argument\n    .addMatcher<FulfilledAction>(\n      (action) => action.type.endsWith(\"/fulfilled\"),\n      (state, action) => {\n        state[action.meta.requestId] = \"fulfilled\";\n      }\n    );\n  });\n  ```\n   */\n  addMatcher<A>(matcher: TypeGuard<A> | ((action: any) => boolean), reducer: CaseReducer<State, A extends Action ? A : A & Action>): Omit<ActionReducerMapBuilder<State>, 'addCase'>;\n\n  /**\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\n   * reducer was executed for this action.\n   * @param reducer - The fallback \"default case\" reducer function.\n   *\n   * @example\n  ```ts\n  import { createReducer } from '@reduxjs/toolkit'\n  const initialState = { otherActions: 0 }\n  const reducer = createReducer(initialState, builder => {\n  builder\n    // .addCase(...)\n    // .addMatcher(...)\n    .addDefaultCase((state, action) => {\n      state.otherActions++\n    })\n  })\n  ```\n   */\n  addDefaultCase(reducer: CaseReducer<State, Action>): {};\n}\nexport function executeReducerBuilderCallback<S>(builderCallback: (builder: ActionReducerMapBuilder<S>) => void): [CaseReducers<S, any>, ActionMatcherDescriptionCollection<S>, CaseReducer<S, Action> | undefined] {\n  const actionsMap: CaseReducers<S, any> = {};\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = [];\n  let defaultCaseReducer: CaseReducer<S, Action> | undefined;\n  const builder = {\n    addCase(typeOrActionCreator: string | TypedActionCreator<any>, reducer: CaseReducer<S>) {\n      if (process.env.NODE_ENV !== 'production') {\n        /*\n         to keep the definition by the user in line with actual behavior,\n         we enforce `addCase` to always be called before calling `addMatcher`\n         as matching cases take precedence over matchers\n         */\n        if (actionMatchers.length > 0) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(26) : '`builder.addCase` should only be called before calling `builder.addMatcher`');\n        }\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(27) : '`builder.addCase` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n      const type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n      if (!type) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(28) : '`builder.addCase` cannot be called with an empty action type');\n      }\n      if (type in actionsMap) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(29) : '`builder.addCase` cannot be called with two reducers for the same action type ' + `'${type}'`);\n      }\n      actionsMap[type] = reducer;\n      return builder;\n    },\n    addMatcher<A>(matcher: TypeGuard<A>, reducer: CaseReducer<S, A extends Action ? A : A & Action>) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(30) : '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n      actionMatchers.push({\n        matcher,\n        reducer\n      });\n      return builder;\n    },\n    addDefaultCase(reducer: CaseReducer<S, Action>) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(31) : '`builder.addDefaultCase` can only be called once');\n        }\n      }\n      defaultCaseReducer = reducer;\n      return builder;\n    }\n  };\n  builderCallback(builder);\n  return [actionsMap, actionMatchers, defaultCaseReducer];\n}","import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3, formatProdErrorMessage as _formatProdErrorMessage4, formatProdErrorMessage as _formatProdErrorMessage5, formatProdErrorMessage as _formatProdErrorMessage6, formatProdErrorMessage as _formatProdErrorMessage7, formatProdErrorMessage as _formatProdErrorMessage8 } from \"@reduxjs/toolkit\";\nimport type { Action, Reducer, UnknownAction } from 'redux';\nimport type { Selector } from 'reselect';\nimport type { InjectConfig } from './combineSlices';\nimport type { ActionCreatorWithoutPayload, PayloadAction, PayloadActionCreator, PrepareAction, _ActionCreatorWithPreparedPayload } from './createAction';\nimport { createAction } from './createAction';\nimport type { AsyncThunk, AsyncThunkConfig, AsyncThunkOptions, AsyncThunkPayloadCreator, OverrideThunkApiConfigs } from './createAsyncThunk';\nimport { createAsyncThunk as _createAsyncThunk } from './createAsyncThunk';\nimport type { ActionMatcherDescriptionCollection, CaseReducer, ReducerWithInitialState } from './createReducer';\nimport { createReducer } from './createReducer';\nimport type { ActionReducerMapBuilder, TypedActionCreator } from './mapBuilders';\nimport { executeReducerBuilderCallback } from './mapBuilders';\nimport type { Id, TypeGuard } from './tsHelpers';\nimport { getOrInsertComputed } from './utils';\nconst asyncThunkSymbol = /* @__PURE__ */Symbol.for('rtk-slice-createasyncthunk');\n// type is annotated because it's too long to infer\nexport const asyncThunkCreator: {\n  [asyncThunkSymbol]: typeof _createAsyncThunk;\n} = {\n  [asyncThunkSymbol]: _createAsyncThunk\n};\ntype InjectIntoConfig<NewReducerPath extends string> = InjectConfig & {\n  reducerPath?: NewReducerPath;\n};\n\n/**\n * The return value of `createSlice`\n *\n * @public\n */\nexport interface Slice<State = any, CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> {\n  /**\n   * The slice name.\n   */\n  name: Name;\n\n  /**\n   *  The slice reducer path.\n   */\n  reducerPath: ReducerPath;\n\n  /**\n   * The slice's reducer.\n   */\n  reducer: Reducer<State>;\n\n  /**\n   * Action creators for the types of actions that are handled by the slice\n   * reducer.\n   */\n  actions: CaseReducerActions<CaseReducers, Name>;\n\n  /**\n   * The individual case reducer functions that were passed in the `reducers` parameter.\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\n   */\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>;\n\n  /**\n   * Provides access to the initial state value given to the slice.\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\n   */\n  getInitialState: () => State;\n\n  /**\n   * Get localised slice selectors (expects to be called with *just* the slice's state as the first parameter)\n   */\n  getSelectors(): Id<SliceDefinedSelectors<State, Selectors, State>>;\n\n  /**\n   * Get globalised slice selectors (`selectState` callback is expected to receive first parameter and return slice state)\n   */\n  getSelectors<RootState>(selectState: (rootState: RootState) => State): Id<SliceDefinedSelectors<State, Selectors, RootState>>;\n\n  /**\n   * Selectors that assume the slice's state is `rootState[slice.reducerPath]` (which is usually the case)\n   *\n   * Equivalent to `slice.getSelectors((state: RootState) => state[slice.reducerPath])`.\n   */\n  get selectors(): Id<SliceDefinedSelectors<State, Selectors, { [K in ReducerPath]: State }>>;\n\n  /**\n   * Inject slice into provided reducer (return value from `combineSlices`), and return injected slice.\n   */\n  injectInto<NewReducerPath extends string = ReducerPath>(this: this, injectable: {\n    inject: (slice: {\n      reducerPath: string;\n      reducer: Reducer;\n    }, config?: InjectConfig) => void;\n  }, config?: InjectIntoConfig<NewReducerPath>): InjectedSlice<State, CaseReducers, Name, NewReducerPath, Selectors>;\n\n  /**\n   * Select the slice state, using the slice's current reducerPath.\n   *\n   * Will throw an error if slice is not found.\n   */\n  selectSlice(state: { [K in ReducerPath]: State }): State;\n}\n\n/**\n * A slice after being called with `injectInto(reducer)`.\n *\n * Selectors can now be called with an `undefined` value, in which case they use the slice's initial state.\n */\ntype InjectedSlice<State = any, CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> = Omit<Slice<State, CaseReducers, Name, ReducerPath, Selectors>, 'getSelectors' | 'selectors'> & {\n  /**\n   * Get localised slice selectors (expects to be called with *just* the slice's state as the first parameter)\n   */\n  getSelectors(): Id<SliceDefinedSelectors<State, Selectors, State | undefined>>;\n\n  /**\n   * Get globalised slice selectors (`selectState` callback is expected to receive first parameter and return slice state)\n   */\n  getSelectors<RootState>(selectState: (rootState: RootState) => State | undefined): Id<SliceDefinedSelectors<State, Selectors, RootState>>;\n\n  /**\n   * Selectors that assume the slice's state is `rootState[slice.name]` (which is usually the case)\n   *\n   * Equivalent to `slice.getSelectors((state: RootState) => state[slice.name])`.\n   */\n  get selectors(): Id<SliceDefinedSelectors<State, Selectors, { [K in ReducerPath]?: State | undefined }>>;\n\n  /**\n   * Select the slice state, using the slice's current reducerPath.\n   *\n   * Returns initial state if slice is not found.\n   */\n  selectSlice(state: { [K in ReducerPath]?: State | undefined }): State;\n};\n\n/**\n * Options for `createSlice()`.\n *\n * @public\n */\nexport interface CreateSliceOptions<State = any, CR extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> {\n  /**\n   * The slice's name. Used to namespace the generated action types.\n   */\n  name: Name;\n\n  /**\n   * The slice's reducer path. Used when injecting into a combined slice reducer.\n   */\n  reducerPath?: ReducerPath;\n\n  /**\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\n   */\n  initialState: State | (() => State);\n\n  /**\n   * A mapping from action types to action-type-specific *case reducer*\n   * functions. For every action type, a matching action creator will be\n   * generated using `createAction()`.\n   */\n  reducers: ValidateSliceCaseReducers<State, CR> | ((creators: ReducerCreators<State>) => CR);\n\n  /**\n   * A callback that receives a *builder* object to define\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\n   *\n   *\n   * @example\n  ```ts\n  import { createAction, createSlice, Action } from '@reduxjs/toolkit'\n  const incrementBy = createAction<number>('incrementBy')\n  const decrement = createAction('decrement')\n  interface RejectedAction extends Action {\n  error: Error\n  }\n  function isRejectedAction(action: Action): action is RejectedAction {\n  return action.type.endsWith('rejected')\n  }\n  createSlice({\n  name: 'counter',\n  initialState: 0,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(incrementBy, (state, action) => {\n        // action is inferred correctly here if using TS\n      })\n      // You can chain calls, or have separate `builder.addCase()` lines each time\n      .addCase(decrement, (state, action) => {})\n      // You can match a range of action types\n      .addMatcher(\n        isRejectedAction,\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\n        (state, action) => {}\n      )\n      // and provide a default case if no other handlers matched\n      .addDefaultCase((state, action) => {})\n    }\n  })\n  ```\n   */\n  extraReducers?: (builder: ActionReducerMapBuilder<State>) => void;\n\n  /**\n   * A map of selectors that receive the slice's state and any additional arguments, and return a result.\n   */\n  selectors?: Selectors;\n}\nexport enum ReducerType {\n  reducer = 'reducer',\n  reducerWithPrepare = 'reducerWithPrepare',\n  asyncThunk = 'asyncThunk',\n}\ntype ReducerDefinition<T extends ReducerType = ReducerType> = {\n  _reducerDefinitionType: T;\n};\nexport type CaseReducerDefinition<S = any, A extends Action = UnknownAction> = CaseReducer<S, A> & ReducerDefinition<ReducerType.reducer>;\n\n/**\n * A CaseReducer with a `prepare` method.\n *\n * @public\n */\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\n  reducer: CaseReducer<State, Action>;\n  prepare: PrepareAction<Action['payload']>;\n};\nexport interface CaseReducerWithPrepareDefinition<State, Action extends PayloadAction> extends CaseReducerWithPrepare<State, Action>, ReducerDefinition<ReducerType.reducerWithPrepare> {}\ntype AsyncThunkSliceReducerConfig<State, ThunkArg extends any, Returned = unknown, ThunkApiConfig extends AsyncThunkConfig = {}> = {\n  pending?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['pending']>>;\n  rejected?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['rejected']>>;\n  fulfilled?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['fulfilled']>>;\n  settled?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['rejected' | 'fulfilled']>>;\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>;\n};\ntype AsyncThunkSliceReducerDefinition<State, ThunkArg extends any, Returned = unknown, ThunkApiConfig extends AsyncThunkConfig = {}> = AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, ThunkApiConfig> & ReducerDefinition<ReducerType.asyncThunk> & {\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>;\n};\n\n/**\n * Providing these as part of the config would cause circular types, so we disallow passing them\n */\ntype PreventCircular<ThunkApiConfig> = { [K in keyof ThunkApiConfig]: K extends 'state' | 'dispatch' ? never : ThunkApiConfig[K] };\ninterface AsyncThunkCreator<State, CurriedThunkApiConfig extends PreventCircular<AsyncThunkConfig> = PreventCircular<AsyncThunkConfig>> {\n  <Returned, ThunkArg = void>(payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, CurriedThunkApiConfig>, config?: AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, CurriedThunkApiConfig>): AsyncThunkSliceReducerDefinition<State, ThunkArg, Returned, CurriedThunkApiConfig>;\n  <Returned, ThunkArg, ThunkApiConfig extends PreventCircular<AsyncThunkConfig> = {}>(payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>, config?: AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, ThunkApiConfig>): AsyncThunkSliceReducerDefinition<State, ThunkArg, Returned, ThunkApiConfig>;\n  withTypes<ThunkApiConfig extends PreventCircular<AsyncThunkConfig>>(): AsyncThunkCreator<State, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n}\nexport interface ReducerCreators<State> {\n  reducer(caseReducer: CaseReducer<State, PayloadAction>): CaseReducerDefinition<State, PayloadAction>;\n  reducer<Payload>(caseReducer: CaseReducer<State, PayloadAction<Payload>>): CaseReducerDefinition<State, PayloadAction<Payload>>;\n  asyncThunk: AsyncThunkCreator<State>;\n  preparedReducer<Prepare extends PrepareAction<any>>(prepare: Prepare, reducer: CaseReducer<State, ReturnType<_ActionCreatorWithPreparedPayload<Prepare>>>): {\n    _reducerDefinitionType: ReducerType.reducerWithPrepare;\n    prepare: Prepare;\n    reducer: CaseReducer<State, ReturnType<_ActionCreatorWithPreparedPayload<Prepare>>>;\n  };\n}\n\n/**\n * The type describing a slice's `reducers` option.\n *\n * @public\n */\nexport type SliceCaseReducers<State> = Record<string, ReducerDefinition> | Record<string, CaseReducer<State, PayloadAction<any>> | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>>;\n\n/**\n * The type describing a slice's `selectors` option.\n */\nexport type SliceSelectors<State> = {\n  [K: string]: (sliceState: State, ...args: any[]) => any;\n};\ntype SliceActionType<SliceName extends string, ActionName extends keyof any> = ActionName extends string | number ? `${SliceName}/${ActionName}` : string;\n\n/**\n * Derives the slice's `actions` property from the `reducers` options\n *\n * @public\n */\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>, SliceName extends string> = { [Type in keyof CaseReducers]: CaseReducers[Type] extends infer Definition ? Definition extends {\n  prepare: any;\n} ? ActionCreatorForCaseReducerWithPrepare<Definition, SliceActionType<SliceName, Type>> : Definition extends AsyncThunkSliceReducerDefinition<any, infer ThunkArg, infer Returned, infer ThunkApiConfig> ? AsyncThunk<Returned, ThunkArg, ThunkApiConfig> : Definition extends {\n  reducer: any;\n} ? ActionCreatorForCaseReducer<Definition['reducer'], SliceActionType<SliceName, Type>> : ActionCreatorForCaseReducer<Definition, SliceActionType<SliceName, Type>> : never };\n\n/**\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\n *\n * @internal\n */\ntype ActionCreatorForCaseReducerWithPrepare<CR extends {\n  prepare: any;\n}, Type extends string> = _ActionCreatorWithPreparedPayload<CR['prepare'], Type>;\n\n/**\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\n *\n * @internal\n */\ntype ActionCreatorForCaseReducer<CR, Type extends string> = CR extends (state: any, action: infer Action) => any ? Action extends {\n  payload: infer P;\n} ? PayloadActionCreator<P, Type> : ActionCreatorWithoutPayload<Type> : ActionCreatorWithoutPayload<Type>;\n\n/**\n * Extracts the CaseReducers out of a `reducers` object, even if they are\n * tested into a `CaseReducerWithPrepare`.\n *\n * @internal\n */\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = { [Type in keyof CaseReducers]: CaseReducers[Type] extends infer Definition ? Definition extends AsyncThunkSliceReducerDefinition<any, any, any> ? Id<Pick<Required<Definition>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>> : Definition extends {\n  reducer: infer Reducer;\n} ? Reducer : Definition : never };\ntype RemappedSelector<S extends Selector, NewState> = S extends Selector<any, infer R, infer P> ? Selector<NewState, R, P> & {\n  unwrapped: S;\n} : never;\n\n/**\n * Extracts the final selector type from the `selectors` object.\n *\n * Removes the `string` index signature from the default value.\n */\ntype SliceDefinedSelectors<State, Selectors extends SliceSelectors<State>, RootState> = { [K in keyof Selectors as string extends K ? never : K]: RemappedSelector<Selectors[K], RootState> };\n\n/**\n * Used on a SliceCaseReducers object.\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\n * the `reducer` and the `prepare` function use the same type of `payload`.\n *\n * Might do additional such checks in the future.\n *\n * This type is only ever useful if you want to write your own wrapper around\n * `createSlice`. Please don't use it otherwise!\n *\n * @public\n */\nexport type ValidateSliceCaseReducers<S, ACR extends SliceCaseReducers<S>> = ACR & { [T in keyof ACR]: ACR[T] extends {\n  reducer(s: S, action?: infer A): any;\n} ? {\n  prepare(...a: never[]): Omit<A, 'type'>;\n} : {} };\nfunction getType(slice: string, actionKey: string): string {\n  return `${slice}/${actionKey}`;\n}\ninterface BuildCreateSliceConfig {\n  creators?: {\n    asyncThunk?: typeof asyncThunkCreator;\n  };\n}\nexport function buildCreateSlice({\n  creators\n}: BuildCreateSliceConfig = {}) {\n  const cAT = creators?.asyncThunk?.[asyncThunkSymbol];\n  return function createSlice<State, CaseReducers extends SliceCaseReducers<State>, Name extends string, Selectors extends SliceSelectors<State>, ReducerPath extends string = Name>(options: CreateSliceOptions<State, CaseReducers, Name, ReducerPath, Selectors>): Slice<State, CaseReducers, Name, ReducerPath, Selectors> {\n    const {\n      name,\n      reducerPath = name as unknown as ReducerPath\n    } = options;\n    if (!name) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(11) : '`name` is a required option for createSlice');\n    }\n    if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n      if (options.initialState === undefined) {\n        console.error('You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`');\n      }\n    }\n    const reducers = (typeof options.reducers === 'function' ? options.reducers(buildReducerCreators<State>()) : options.reducers) || {};\n    const reducerNames = Object.keys(reducers);\n    const context: ReducerHandlingContext<State> = {\n      sliceCaseReducersByName: {},\n      sliceCaseReducersByType: {},\n      actionCreators: {},\n      sliceMatchers: []\n    };\n    const contextMethods: ReducerHandlingContextMethods<State> = {\n      addCase(typeOrActionCreator: string | TypedActionCreator<any>, reducer: CaseReducer<State>) {\n        const type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n        if (!type) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(12) : '`context.addCase` cannot be called with an empty action type');\n        }\n        if (type in context.sliceCaseReducersByType) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(13) : '`context.addCase` cannot be called with two reducers for the same action type: ' + type);\n        }\n        context.sliceCaseReducersByType[type] = reducer;\n        return contextMethods;\n      },\n      addMatcher(matcher, reducer) {\n        context.sliceMatchers.push({\n          matcher,\n          reducer\n        });\n        return contextMethods;\n      },\n      exposeAction(name, actionCreator) {\n        context.actionCreators[name] = actionCreator;\n        return contextMethods;\n      },\n      exposeCaseReducer(name, reducer) {\n        context.sliceCaseReducersByName[name] = reducer;\n        return contextMethods;\n      }\n    };\n    reducerNames.forEach(reducerName => {\n      const reducerDefinition = reducers[reducerName];\n      const reducerDetails: ReducerDetails = {\n        reducerName,\n        type: getType(name, reducerName),\n        createNotation: typeof options.reducers === 'function'\n      };\n      if (isAsyncThunkSliceReducerDefinition<State>(reducerDefinition)) {\n        handleThunkCaseReducerDefinition(reducerDetails, reducerDefinition, contextMethods, cAT);\n      } else {\n        handleNormalReducerDefinition<State>(reducerDetails, reducerDefinition as any, contextMethods);\n      }\n    });\n    function buildReducer() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof options.extraReducers === 'object') {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(14) : \"The object notation for `createSlice.extraReducers` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice\");\n        }\n      }\n      const [extraReducers = {}, actionMatchers = [], defaultCaseReducer = undefined] = typeof options.extraReducers === 'function' ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers];\n      const finalCaseReducers = {\n        ...extraReducers,\n        ...context.sliceCaseReducersByType\n      };\n      return createReducer(options.initialState, builder => {\n        for (let key in finalCaseReducers) {\n          builder.addCase(key, finalCaseReducers[key] as CaseReducer<any>);\n        }\n        for (let sM of context.sliceMatchers) {\n          builder.addMatcher(sM.matcher, sM.reducer);\n        }\n        for (let m of actionMatchers) {\n          builder.addMatcher(m.matcher, m.reducer);\n        }\n        if (defaultCaseReducer) {\n          builder.addDefaultCase(defaultCaseReducer);\n        }\n      });\n    }\n    const selectSelf = (state: State) => state;\n    const injectedSelectorCache = new Map<boolean, WeakMap<(rootState: any) => State | undefined, Record<string, (rootState: any) => any>>>();\n    let _reducer: ReducerWithInitialState<State>;\n    function reducer(state: State | undefined, action: UnknownAction) {\n      if (!_reducer) _reducer = buildReducer();\n      return _reducer(state, action);\n    }\n    function getInitialState() {\n      if (!_reducer) _reducer = buildReducer();\n      return _reducer.getInitialState();\n    }\n    function makeSelectorProps<CurrentReducerPath extends string = ReducerPath>(reducerPath: CurrentReducerPath, injected = false): Pick<Slice<State, CaseReducers, Name, CurrentReducerPath, Selectors>, 'getSelectors' | 'selectors' | 'selectSlice' | 'reducerPath'> {\n      function selectSlice(state: { [K in CurrentReducerPath]: State }) {\n        let sliceState = state[reducerPath];\n        if (typeof sliceState === 'undefined') {\n          if (injected) {\n            sliceState = getInitialState();\n          } else if (process.env.NODE_ENV !== 'production') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(15) : 'selectSlice returned undefined for an uninjected slice reducer');\n          }\n        }\n        return sliceState;\n      }\n      function getSelectors(selectState: (rootState: any) => State = selectSelf) {\n        const selectorCache = getOrInsertComputed(injectedSelectorCache, injected, () => new WeakMap());\n        return getOrInsertComputed(selectorCache, selectState, () => {\n          const map: Record<string, Selector<any, any>> = {};\n          for (const [name, selector] of Object.entries(options.selectors ?? {})) {\n            map[name] = wrapSelector(selector, selectState, getInitialState, injected);\n          }\n          return map;\n        }) as any;\n      }\n      return {\n        reducerPath,\n        getSelectors,\n        get selectors() {\n          return getSelectors(selectSlice);\n        },\n        selectSlice\n      };\n    }\n    const slice: Slice<State, CaseReducers, Name, ReducerPath, Selectors> = {\n      name,\n      reducer,\n      actions: context.actionCreators as any,\n      caseReducers: context.sliceCaseReducersByName as any,\n      getInitialState,\n      ...makeSelectorProps(reducerPath),\n      injectInto(injectable, {\n        reducerPath: pathOpt,\n        ...config\n      } = {}) {\n        const newReducerPath = pathOpt ?? reducerPath;\n        injectable.inject({\n          reducerPath: newReducerPath,\n          reducer\n        }, config);\n        return {\n          ...slice,\n          ...makeSelectorProps(newReducerPath, true)\n        } as any;\n      }\n    };\n    return slice;\n  };\n}\nfunction wrapSelector<State, NewState, S extends Selector<State>>(selector: S, selectState: Selector<NewState, State>, getInitialState: () => State, injected?: boolean) {\n  function wrapper(rootState: NewState, ...args: any[]) {\n    let sliceState = selectState(rootState);\n    if (typeof sliceState === 'undefined') {\n      if (injected) {\n        sliceState = getInitialState();\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(16) : 'selectState returned undefined for an uninjected slice reducer');\n      }\n    }\n    return selector(sliceState, ...args);\n  }\n  wrapper.unwrapped = selector;\n  return wrapper as RemappedSelector<S, NewState>;\n}\n\n/**\n * A function that accepts an initial state, an object full of reducer\n * functions, and a \"slice name\", and automatically generates\n * action creators and action types that correspond to the\n * reducers and state.\n *\n * @public\n */\nexport const createSlice = /* @__PURE__ */buildCreateSlice();\ninterface ReducerHandlingContext<State> {\n  sliceCaseReducersByName: Record<string, CaseReducer<State, any> | Pick<AsyncThunkSliceReducerDefinition<State, any, any, any>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>>;\n  sliceCaseReducersByType: Record<string, CaseReducer<State, any>>;\n  sliceMatchers: ActionMatcherDescriptionCollection<State>;\n  actionCreators: Record<string, Function>;\n}\ninterface ReducerHandlingContextMethods<State> {\n  /**\n   * Adds a case reducer to handle a single action type.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<ActionCreator extends TypedActionCreator<string>>(actionCreator: ActionCreator, reducer: CaseReducer<State, ReturnType<ActionCreator>>): ReducerHandlingContextMethods<State>;\n  /**\n   * Adds a case reducer to handle a single action type.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<Type extends string, A extends Action<Type>>(type: Type, reducer: CaseReducer<State, A>): ReducerHandlingContextMethods<State>;\n\n  /**\n   * Allows you to match incoming actions against your own filter function instead of only the `action.type` property.\n   * @remarks\n   * If multiple matcher reducers match, all of them will be executed in the order\n   * they were defined in - even if a case reducer already matched.\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\n   *   function\n   * @param reducer - The actual case reducer function.\n   *\n   */\n  addMatcher<A>(matcher: TypeGuard<A>, reducer: CaseReducer<State, A extends Action ? A : A & Action>): ReducerHandlingContextMethods<State>;\n  /**\n   * Add an action to be exposed under the final `slice.actions` key.\n   * @param name The key to be exposed as.\n   * @param actionCreator The action to expose.\n   * @example\n   * context.exposeAction(\"addPost\", createAction<Post>(\"addPost\"));\n   *\n   * export const { addPost } = slice.actions\n   *\n   * dispatch(addPost(post))\n   */\n  exposeAction(name: string, actionCreator: Function): ReducerHandlingContextMethods<State>;\n  /**\n   * Add a case reducer to be exposed under the final `slice.caseReducers` key.\n   * @param name The key to be exposed as.\n   * @param reducer The reducer to expose.\n   * @example\n   * context.exposeCaseReducer(\"addPost\", (state, action: PayloadAction<Post>) => {\n   *   state.push(action.payload)\n   * })\n   *\n   * slice.caseReducers.addPost([], addPost(post))\n   */\n  exposeCaseReducer(name: string, reducer: CaseReducer<State, any> | Pick<AsyncThunkSliceReducerDefinition<State, any, any, any>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>): ReducerHandlingContextMethods<State>;\n}\ninterface ReducerDetails {\n  /** The key the reducer was defined under */\n  reducerName: string;\n  /** The predefined action type, i.e. `${slice.name}/${reducerName}` */\n  type: string;\n  /** Whether create. notation was used when defining reducers */\n  createNotation: boolean;\n}\nfunction buildReducerCreators<State>(): ReducerCreators<State> {\n  function asyncThunk(payloadCreator: AsyncThunkPayloadCreator<any, any>, config: AsyncThunkSliceReducerConfig<State, any>): AsyncThunkSliceReducerDefinition<State, any> {\n    return {\n      _reducerDefinitionType: ReducerType.asyncThunk,\n      payloadCreator,\n      ...config\n    };\n  }\n  asyncThunk.withTypes = () => asyncThunk;\n  return {\n    reducer(caseReducer: CaseReducer<State, any>) {\n      return Object.assign({\n        // hack so the wrapping function has the same name as the original\n        // we need to create a wrapper so the `reducerDefinitionType` is not assigned to the original\n        [caseReducer.name](...args: Parameters<typeof caseReducer>) {\n          return caseReducer(...args);\n        }\n      }[caseReducer.name], {\n        _reducerDefinitionType: ReducerType.reducer\n      } as const);\n    },\n    preparedReducer(prepare, reducer) {\n      return {\n        _reducerDefinitionType: ReducerType.reducerWithPrepare,\n        prepare,\n        reducer\n      };\n    },\n    asyncThunk: asyncThunk as any\n  };\n}\nfunction handleNormalReducerDefinition<State>({\n  type,\n  reducerName,\n  createNotation\n}: ReducerDetails, maybeReducerWithPrepare: CaseReducer<State, {\n  payload: any;\n  type: string;\n}> | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>, context: ReducerHandlingContextMethods<State>) {\n  let caseReducer: CaseReducer<State, any>;\n  let prepareCallback: PrepareAction<any> | undefined;\n  if ('reducer' in maybeReducerWithPrepare) {\n    if (createNotation && !isCaseReducerWithPrepareDefinition(maybeReducerWithPrepare)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(17) : 'Please use the `create.preparedReducer` notation for prepared action creators with the `create` notation.');\n    }\n    caseReducer = maybeReducerWithPrepare.reducer;\n    prepareCallback = maybeReducerWithPrepare.prepare;\n  } else {\n    caseReducer = maybeReducerWithPrepare;\n  }\n  context.addCase(type, caseReducer).exposeCaseReducer(reducerName, caseReducer).exposeAction(reducerName, prepareCallback ? createAction(type, prepareCallback) : createAction(type));\n}\nfunction isAsyncThunkSliceReducerDefinition<State>(reducerDefinition: any): reducerDefinition is AsyncThunkSliceReducerDefinition<State, any, any, any> {\n  return reducerDefinition._reducerDefinitionType === ReducerType.asyncThunk;\n}\nfunction isCaseReducerWithPrepareDefinition<State>(reducerDefinition: any): reducerDefinition is CaseReducerWithPrepareDefinition<State, any> {\n  return reducerDefinition._reducerDefinitionType === ReducerType.reducerWithPrepare;\n}\nfunction handleThunkCaseReducerDefinition<State>({\n  type,\n  reducerName\n}: ReducerDetails, reducerDefinition: AsyncThunkSliceReducerDefinition<State, any, any, any>, context: ReducerHandlingContextMethods<State>, cAT: typeof _createAsyncThunk | undefined) {\n  if (!cAT) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(18) : 'Cannot use `create.asyncThunk` in the built-in `createSlice`. ' + 'Use `buildCreateSlice({ creators: { asyncThunk: asyncThunkCreator } })` to create a customised version of `createSlice`.');\n  }\n  const {\n    payloadCreator,\n    fulfilled,\n    pending,\n    rejected,\n    settled,\n    options\n  } = reducerDefinition;\n  const thunk = cAT(type, payloadCreator, options as any);\n  context.exposeAction(reducerName, thunk);\n  if (fulfilled) {\n    context.addCase(thunk.fulfilled, fulfilled);\n  }\n  if (pending) {\n    context.addCase(thunk.pending, pending);\n  }\n  if (rejected) {\n    context.addCase(thunk.rejected, rejected);\n  }\n  if (settled) {\n    context.addMatcher(thunk.settled, settled);\n  }\n  context.exposeCaseReducer(reducerName, {\n    fulfilled: fulfilled || noop,\n    pending: pending || noop,\n    rejected: rejected || noop,\n    settled: settled || noop\n  });\n}\nfunction noop() {}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Draft } from 'immer';\nimport { produce as createNextState, isDraft, isDraftable } from 'immer';\nimport type { Action, Reducer, UnknownAction } from 'redux';\nimport type { ActionReducerMapBuilder } from './mapBuilders';\nimport { executeReducerBuilderCallback } from './mapBuilders';\nimport type { NoInfer, TypeGuard } from './tsHelpers';\nimport { freezeDraftable } from './utils';\n\n/**\n * Defines a mapping from action types to corresponding action object shapes.\n *\n * @deprecated This should not be used manually - it is only used for internal\n *             inference purposes and should not have any further value.\n *             It might be removed in the future.\n * @public\n */\nexport type Actions<T extends keyof any = string> = Record<T, Action>;\nexport type ActionMatcherDescription<S, A extends Action> = {\n  matcher: TypeGuard<A>;\n  reducer: CaseReducer<S, NoInfer<A>>;\n};\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<ActionMatcherDescription<S, any>>;\nexport type ActionMatcherDescriptionCollection<S> = Array<ActionMatcherDescription<S, any>>;\n\n/**\n * A *case reducer* is a reducer function for a specific action type. Case\n * reducers can be composed to full reducers using `createReducer()`.\n *\n * Unlike a normal Redux reducer, a case reducer is never called with an\n * `undefined` state to determine the initial state. Instead, the initial\n * state is explicitly specified as an argument to `createReducer()`.\n *\n * In addition, a case reducer can choose to mutate the passed-in `state`\n * value directly instead of returning a new state. This does not actually\n * cause the store state to be mutated directly; instead, thanks to\n * [immer](https://github.com/mweststrate/immer), the mutations are\n * translated to copy operations that result in a new state.\n *\n * @public\n */\nexport type CaseReducer<S = any, A extends Action = UnknownAction> = (state: Draft<S>, action: A) => NoInfer<S> | void | Draft<NoInfer<S>>;\n\n/**\n * A mapping from action types to case reducers for `createReducer()`.\n *\n * @deprecated This should not be used manually - it is only used\n *             for internal inference purposes and using it manually\n *             would lead to type erasure.\n *             It might be removed in the future.\n * @public\n */\nexport type CaseReducers<S, AS extends Actions> = { [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void };\nexport type NotFunction<T> = T extends Function ? never : T;\nfunction isStateFunction<S>(x: unknown): x is () => S {\n  return typeof x === 'function';\n}\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\n  getInitialState: () => S;\n};\n\n/**\n * A utility function that allows defining a reducer as a mapping from action\n * type to *case reducer* functions that handle these action types. The\n * reducer's initial state is passed as the first argument.\n *\n * @remarks\n * The body of every case reducer is implicitly wrapped with a call to\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\n * This means that rather than returning a new state object, you can also\n * mutate the passed-in state object directly; these mutations will then be\n * automatically and efficiently translated into copies, giving you both\n * convenience and immutability.\n *\n * @overloadSummary\n * This function accepts a callback that receives a `builder` object as its argument.\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\n * called to define what actions this reducer will handle.\n *\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\n * @example\n```ts\nimport {\n  createAction,\n  createReducer,\n  UnknownAction,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\n\nconst increment = createAction<number>(\"increment\");\nconst decrement = createAction<number>(\"decrement\");\n\nfunction isActionWithNumberPayload(\n  action: UnknownAction\n): action is PayloadAction<number> {\n  return typeof action.payload === \"number\";\n}\n\nconst reducer = createReducer(\n  {\n    counter: 0,\n    sumOfNumberPayloads: 0,\n    unhandledActions: 0,\n  },\n  (builder) => {\n    builder\n      .addCase(increment, (state, action) => {\n        // action is inferred correctly here\n        state.counter += action.payload;\n      })\n      // You can chain calls, or have separate `builder.addCase()` lines each time\n      .addCase(decrement, (state, action) => {\n        state.counter -= action.payload;\n      })\n      // You can apply a \"matcher function\" to incoming actions\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\n      // and provide a default case if no other handlers matched\n      .addDefaultCase((state, action) => {});\n  }\n);\n```\n * @public\n */\nexport function createReducer<S extends NotFunction<any>>(initialState: S | (() => S), mapOrBuilderCallback: (builder: ActionReducerMapBuilder<S>) => void): ReducerWithInitialState<S> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof mapOrBuilderCallback === 'object') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(8) : \"The object notation for `createReducer` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer\");\n    }\n  }\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] = executeReducerBuilderCallback(mapOrBuilderCallback);\n\n  // Ensure the initial state gets frozen either way (if draftable)\n  let getInitialState: () => S;\n  if (isStateFunction(initialState)) {\n    getInitialState = () => freezeDraftable(initialState());\n  } else {\n    const frozenInitialState = freezeDraftable(initialState);\n    getInitialState = () => frozenInitialState;\n  }\n  function reducer(state = getInitialState(), action: any): S {\n    let caseReducers = [actionsMap[action.type], ...finalActionMatchers.filter(({\n      matcher\n    }) => matcher(action)).map(({\n      reducer\n    }) => reducer)];\n    if (caseReducers.filter(cr => !!cr).length === 0) {\n      caseReducers = [finalDefaultCaseReducer];\n    }\n    return caseReducers.reduce((previousState, caseReducer): S => {\n      if (caseReducer) {\n        if (isDraft(previousState)) {\n          // If it's already a draft, we must already be inside a `createNextState` call,\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\n          const draft = previousState as Draft<S>; // We can assume this is already a draft\n          const result = caseReducer(draft, action);\n          if (result === undefined) {\n            return previousState;\n          }\n          return result as S;\n        } else if (!isDraftable(previousState)) {\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\n          // return the caseReducer func and not wrap it with produce.\n          const result = caseReducer(previousState as any, action);\n          if (result === undefined) {\n            if (previousState === null) {\n              return previousState;\n            }\n            throw Error('A case reducer on a non-draftable value must not return undefined');\n          }\n          return result as S;\n        } else {\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n          // these two types.\n          return createNextState(previousState, (draft: Draft<S>) => {\n            return caseReducer(draft, action);\n          });\n        }\n      }\n      return previousState;\n    }, state);\n  }\n  reducer.getInitialState = getInitialState;\n  return reducer as ReducerWithInitialState<S>;\n}","import type { SerializedError } from '@reduxjs/toolkit';\nconst task = 'task';\nconst listener = 'listener';\nconst completed = 'completed';\nconst cancelled = 'cancelled';\n\n/* TaskAbortError error codes  */\nexport const taskCancelled = `task-${cancelled}` as const;\nexport const taskCompleted = `task-${completed}` as const;\nexport const listenerCancelled = `${listener}-${cancelled}` as const;\nexport const listenerCompleted = `${listener}-${completed}` as const;\nexport class TaskAbortError implements SerializedError {\n  name = 'TaskAbortError';\n  message: string;\n  constructor(public code: string | undefined) {\n    this.message = `${task} ${cancelled} (reason: ${code})`;\n  }\n}","import { TaskAbortError } from './exceptions';\nimport type { AbortSignalWithReason, TaskResult } from './types';\nimport { addAbortSignalListener, catchRejection, noop } from './utils';\n\n/**\n * Synchronously raises {@link TaskAbortError} if the task tied to the input `signal` has been cancelled.\n * @param signal\n * @param reason\n * @see {TaskAbortError}\n */\nexport const validateActive = (signal: AbortSignal): void => {\n  if (signal.aborted) {\n    const {\n      reason\n    } = signal as AbortSignalWithReason<string>;\n    throw new TaskAbortError(reason);\n  }\n};\n\n/**\n * Generates a race between the promise(s) and the AbortSignal\n * This avoids `Promise.race()`-related memory leaks:\n * https://github.com/nodejs/node/issues/17469#issuecomment-349794909\n */\nexport function raceWithSignal<T>(signal: AbortSignalWithReason<string>, promise: Promise<T>): Promise<T> {\n  let cleanup = noop;\n  return new Promise<T>((resolve, reject) => {\n    const notifyRejection = () => reject(new TaskAbortError(signal.reason));\n    if (signal.aborted) {\n      notifyRejection();\n      return;\n    }\n    cleanup = addAbortSignalListener(signal, notifyRejection);\n    promise.finally(() => cleanup()).then(resolve, reject);\n  }).finally(() => {\n    // after this point, replace `cleanup` with a noop, so there is no reference to `signal` any more\n    cleanup = noop;\n  });\n}\n\n/**\n * Runs a task and returns promise that resolves to {@link TaskResult}.\n * Second argument is an optional `cleanUp` function that always runs after task.\n *\n * **Note:** `runTask` runs the executor in the next microtask.\n * @returns\n */\nexport const runTask = async <T,>(task: () => Promise<T>, cleanUp?: () => void): Promise<TaskResult<T>> => {\n  try {\n    await Promise.resolve();\n    const value = await task();\n    return {\n      status: 'ok',\n      value\n    };\n  } catch (error: any) {\n    return {\n      status: error instanceof TaskAbortError ? 'cancelled' : 'rejected',\n      error\n    };\n  } finally {\n    cleanUp?.();\n  }\n};\n\n/**\n * Given an input `AbortSignal` and a promise returns another promise that resolves\n * as soon the input promise is provided or rejects as soon as\n * `AbortSignal.abort` is `true`.\n * @param signal\n * @returns\n */\nexport const createPause = <T,>(signal: AbortSignal) => {\n  return (promise: Promise<T>): Promise<T> => {\n    return catchRejection(raceWithSignal(signal, promise).then(output => {\n      validateActive(signal);\n      return output;\n    }));\n  };\n};\n\n/**\n * Given an input `AbortSignal` and `timeoutMs` returns a promise that resolves\n * after `timeoutMs` or rejects as soon as `AbortSignal.abort` is `true`.\n * @param signal\n * @returns\n */\nexport const createDelay = (signal: AbortSignal) => {\n  const pause = createPause<void>(signal);\n  return (timeoutMs: number): Promise<void> => {\n    return pause(new Promise<void>(resolve => setTimeout(resolve, timeoutMs)));\n  };\n};","import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport type { Action, Dispatch, MiddlewareAPI, UnknownAction } from 'redux';\nimport { isAction } from 'redux';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport { createAction } from '../createAction';\nimport { nanoid } from '../nanoid';\nimport { TaskAbortError, listenerCancelled, listenerCompleted, taskCancelled, taskCompleted } from './exceptions';\nimport { createDelay, createPause, raceWithSignal, runTask, validateActive } from './task';\nimport type { AbortSignalWithReason, AddListenerOverloads, AnyListenerPredicate, CreateListenerMiddlewareOptions, FallbackAddListenerOptions, ForkOptions, ForkedTask, ForkedTaskExecutor, ListenerEntry, ListenerErrorHandler, ListenerErrorInfo, ListenerMiddleware, ListenerMiddlewareInstance, TakePattern, TaskResult, TypedAddListener, TypedCreateListenerEntry, TypedRemoveListener, UnsubscribeListener, UnsubscribeListenerOptions } from './types';\nimport { abortControllerWithReason, addAbortSignalListener, assertFunction, catchRejection, noop } from './utils';\nexport { TaskAbortError } from './exceptions';\nexport type { AsyncTaskExecutor, CreateListenerMiddlewareOptions, ForkedTask, ForkedTaskAPI, ForkedTaskExecutor, ListenerEffect, ListenerEffectAPI, ListenerErrorHandler, ListenerMiddleware, ListenerMiddlewareInstance, SyncTaskExecutor, TaskCancelled, TaskRejected, TaskResolved, TaskResult, TypedAddListener, TypedRemoveListener, TypedStartListening, TypedStopListening, UnsubscribeListener, UnsubscribeListenerOptions } from './types';\n\n//Overly-aggressive byte-shaving\nconst {\n  assign\n} = Object;\n/**\n * @internal\n */\nconst INTERNAL_NIL_TOKEN = {} as const;\nconst alm = 'listenerMiddleware' as const;\nconst createFork = (parentAbortSignal: AbortSignalWithReason<unknown>, parentBlockingPromises: Promise<any>[]) => {\n  const linkControllers = (controller: AbortController) => addAbortSignalListener(parentAbortSignal, () => abortControllerWithReason(controller, parentAbortSignal.reason));\n  return <T,>(taskExecutor: ForkedTaskExecutor<T>, opts?: ForkOptions): ForkedTask<T> => {\n    assertFunction(taskExecutor, 'taskExecutor');\n    const childAbortController = new AbortController();\n    linkControllers(childAbortController);\n    const result = runTask<T>(async (): Promise<T> => {\n      validateActive(parentAbortSignal);\n      validateActive(childAbortController.signal);\n      const result = (await taskExecutor({\n        pause: createPause(childAbortController.signal),\n        delay: createDelay(childAbortController.signal),\n        signal: childAbortController.signal\n      })) as T;\n      validateActive(childAbortController.signal);\n      return result;\n    }, () => abortControllerWithReason(childAbortController, taskCompleted));\n    if (opts?.autoJoin) {\n      parentBlockingPromises.push(result.catch(noop));\n    }\n    return {\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\n      cancel() {\n        abortControllerWithReason(childAbortController, taskCancelled);\n      }\n    };\n  };\n};\nconst createTakePattern = <S,>(startListening: AddListenerOverloads<UnsubscribeListener, S, Dispatch>, signal: AbortSignal): TakePattern<S> => {\n  /**\n   * A function that takes a ListenerPredicate and an optional timeout,\n   * and resolves when either the predicate returns `true` based on an action\n   * state combination or when the timeout expires.\n   * If the parent listener is canceled while waiting, this will throw a\n   * TaskAbortError.\n   */\n  const take = async <P extends AnyListenerPredicate<S>,>(predicate: P, timeout: number | undefined) => {\n    validateActive(signal);\n\n    // Placeholder unsubscribe function until the listener is added\n    let unsubscribe: UnsubscribeListener = () => {};\n    const tuplePromise = new Promise<[Action, S, S]>((resolve, reject) => {\n      // Inside the Promise, we synchronously add the listener.\n      let stopListening = startListening({\n        predicate: predicate as any,\n        effect: (action, listenerApi): void => {\n          // One-shot listener that cleans up as soon as the predicate passes\n          listenerApi.unsubscribe();\n          // Resolve the promise with the same arguments the predicate saw\n          resolve([action, listenerApi.getState(), listenerApi.getOriginalState()]);\n        }\n      });\n      unsubscribe = () => {\n        stopListening();\n        reject();\n      };\n    });\n    const promises: (Promise<null> | Promise<[Action, S, S]>)[] = [tuplePromise];\n    if (timeout != null) {\n      promises.push(new Promise<null>(resolve => setTimeout(resolve, timeout, null)));\n    }\n    try {\n      const output = await raceWithSignal(signal, Promise.race(promises));\n      validateActive(signal);\n      return output;\n    } finally {\n      // Always clean up the listener\n      unsubscribe();\n    }\n  };\n  return ((predicate: AnyListenerPredicate<S>, timeout: number | undefined) => catchRejection(take(predicate, timeout))) as TakePattern<S>;\n};\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\n  let {\n    type,\n    actionCreator,\n    matcher,\n    predicate,\n    effect\n  } = options;\n  if (type) {\n    predicate = createAction(type).match;\n  } else if (actionCreator) {\n    type = actionCreator!.type;\n    predicate = actionCreator.match;\n  } else if (matcher) {\n    predicate = matcher;\n  } else if (predicate) {\n    // pass\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(21) : 'Creating or removing a listener requires one of the known fields for matching an action');\n  }\n  assertFunction(effect, 'options.listener');\n  return {\n    predicate,\n    type,\n    effect\n  };\n};\n\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = /* @__PURE__ */assign((options: FallbackAddListenerOptions) => {\n  const {\n    type,\n    predicate,\n    effect\n  } = getListenerEntryPropsFrom(options);\n  const entry: ListenerEntry<unknown> = {\n    id: nanoid(),\n    effect,\n    type,\n    predicate,\n    pending: new Set<AbortController>(),\n    unsubscribe: () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(22) : 'Unsubscribe not initialized');\n    }\n  };\n  return entry;\n}, {\n  withTypes: () => createListenerEntry\n}) as unknown as TypedCreateListenerEntry<unknown>;\nconst findListenerEntry = (listenerMap: Map<string, ListenerEntry>, options: FallbackAddListenerOptions) => {\n  const {\n    type,\n    effect,\n    predicate\n  } = getListenerEntryPropsFrom(options);\n  return Array.from(listenerMap.values()).find(entry => {\n    const matchPredicateOrType = typeof type === 'string' ? entry.type === type : entry.predicate === predicate;\n    return matchPredicateOrType && entry.effect === effect;\n  });\n};\nconst cancelActiveListeners = (entry: ListenerEntry<unknown, Dispatch<UnknownAction>>) => {\n  entry.pending.forEach(controller => {\n    abortControllerWithReason(controller, listenerCancelled);\n  });\n};\nconst createClearListenerMiddleware = (listenerMap: Map<string, ListenerEntry>) => {\n  return () => {\n    listenerMap.forEach(cancelActiveListeners);\n    listenerMap.clear();\n  };\n};\n\n/**\n * Safely reports errors to the `errorHandler` provided.\n * Errors that occur inside `errorHandler` are notified in a new task.\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\n * @param errorHandler\n * @param errorToNotify\n */\nconst safelyNotifyError = (errorHandler: ListenerErrorHandler, errorToNotify: unknown, errorInfo: ListenerErrorInfo): void => {\n  try {\n    errorHandler(errorToNotify, errorInfo);\n  } catch (errorHandlerError) {\n    // We cannot let an error raised here block the listener queue.\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\n    setTimeout(() => {\n      throw errorHandlerError;\n    }, 0);\n  }\n};\n\n/**\n * @public\n */\nexport const addListener = /* @__PURE__ */assign(/* @__PURE__ */createAction(`${alm}/add`), {\n  withTypes: () => addListener\n}) as unknown as TypedAddListener<unknown>;\n\n/**\n * @public\n */\nexport const clearAllListeners = /* @__PURE__ */createAction(`${alm}/removeAll`);\n\n/**\n * @public\n */\nexport const removeListener = /* @__PURE__ */assign(/* @__PURE__ */createAction(`${alm}/remove`), {\n  withTypes: () => removeListener\n}) as unknown as TypedRemoveListener<unknown>;\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\n  console.error(`${alm}/error`, ...args);\n};\n\n/**\n * @public\n */\nexport const createListenerMiddleware = <StateType = unknown, DispatchType extends Dispatch<Action> = ThunkDispatch<StateType, unknown, UnknownAction>, ExtraArgument = unknown>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) => {\n  const listenerMap = new Map<string, ListenerEntry>();\n  const {\n    extra,\n    onError = defaultErrorHandler\n  } = middlewareOptions;\n  assertFunction(onError, 'onError');\n  const insertEntry = (entry: ListenerEntry) => {\n    entry.unsubscribe = () => listenerMap.delete(entry.id);\n    listenerMap.set(entry.id, entry);\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\n      entry.unsubscribe();\n      if (cancelOptions?.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    };\n  };\n  const startListening = ((options: FallbackAddListenerOptions) => {\n    const entry = findListenerEntry(listenerMap, options) ?? createListenerEntry(options as any);\n    return insertEntry(entry);\n  }) as AddListenerOverloads<any>;\n  assign(startListening, {\n    withTypes: () => startListening\n  });\n  const stopListening = (options: FallbackAddListenerOptions & UnsubscribeListenerOptions): boolean => {\n    const entry = findListenerEntry(listenerMap, options);\n    if (entry) {\n      entry.unsubscribe();\n      if (options.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    }\n    return !!entry;\n  };\n  assign(stopListening, {\n    withTypes: () => stopListening\n  });\n  const notifyListener = async (entry: ListenerEntry<unknown, Dispatch<UnknownAction>>, action: unknown, api: MiddlewareAPI, getOriginalState: () => StateType) => {\n    const internalTaskController = new AbortController();\n    const take = createTakePattern(startListening as AddListenerOverloads<any>, internalTaskController.signal);\n    const autoJoinPromises: Promise<any>[] = [];\n    try {\n      entry.pending.add(internalTaskController);\n      await Promise.resolve(entry.effect(action,\n      // Use assign() rather than ... to avoid extra helper functions added to bundle\n      assign({}, api, {\n        getOriginalState,\n        condition: (predicate: AnyListenerPredicate<any>, timeout?: number) => take(predicate, timeout).then(Boolean),\n        take,\n        delay: createDelay(internalTaskController.signal),\n        pause: createPause<any>(internalTaskController.signal),\n        extra,\n        signal: internalTaskController.signal,\n        fork: createFork(internalTaskController.signal, autoJoinPromises),\n        unsubscribe: entry.unsubscribe,\n        subscribe: () => {\n          listenerMap.set(entry.id, entry);\n        },\n        cancelActiveListeners: () => {\n          entry.pending.forEach((controller, _, set) => {\n            if (controller !== internalTaskController) {\n              abortControllerWithReason(controller, listenerCancelled);\n              set.delete(controller);\n            }\n          });\n        },\n        cancel: () => {\n          abortControllerWithReason(internalTaskController, listenerCancelled);\n          entry.pending.delete(internalTaskController);\n        },\n        throwIfCancelled: () => {\n          validateActive(internalTaskController.signal);\n        }\n      })));\n    } catch (listenerError) {\n      if (!(listenerError instanceof TaskAbortError)) {\n        safelyNotifyError(onError, listenerError, {\n          raisedBy: 'effect'\n        });\n      }\n    } finally {\n      await Promise.all(autoJoinPromises);\n      abortControllerWithReason(internalTaskController, listenerCompleted); // Notify that the task has completed\n      entry.pending.delete(internalTaskController);\n    }\n  };\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap);\n  const middleware: ListenerMiddleware<StateType, DispatchType, ExtraArgument> = api => next => action => {\n    if (!isAction(action)) {\n      // we only want to notify listeners for action objects\n      return next(action);\n    }\n    if (addListener.match(action)) {\n      return startListening(action.payload as any);\n    }\n    if (clearAllListeners.match(action)) {\n      clearListenerMiddleware();\n      return;\n    }\n    if (removeListener.match(action)) {\n      return stopListening(action.payload);\n    }\n\n    // Need to get this state _before_ the reducer processes the action\n    let originalState: StateType | typeof INTERNAL_NIL_TOKEN = api.getState();\n\n    // `getOriginalState` can only be called synchronously.\n    // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\n    const getOriginalState = (): StateType => {\n      if (originalState === INTERNAL_NIL_TOKEN) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(23) : `${alm}: getOriginalState can only be called synchronously`);\n      }\n      return originalState as StateType;\n    };\n    let result: unknown;\n    try {\n      // Actually forward the action to the reducer before we handle listeners\n      result = next(action);\n      if (listenerMap.size > 0) {\n        const currentState = api.getState();\n        // Work around ESBuild+TS transpilation issue\n        const listenerEntries = Array.from(listenerMap.values());\n        for (const entry of listenerEntries) {\n          let runListener = false;\n          try {\n            runListener = entry.predicate(action, currentState, originalState);\n          } catch (predicateError) {\n            runListener = false;\n            safelyNotifyError(onError, predicateError, {\n              raisedBy: 'predicate'\n            });\n          }\n          if (!runListener) {\n            continue;\n          }\n          notifyListener(entry, action, api, getOriginalState);\n        }\n      }\n    } finally {\n      // Remove `originalState` store from this scope.\n      originalState = INTERNAL_NIL_TOKEN;\n    }\n    return result;\n  };\n  return {\n    middleware,\n    startListening,\n    stopListening,\n    clearListeners: clearListenerMiddleware\n  } as ListenerMiddlewareInstance<StateType, DispatchType, ExtraArgument>;\n};","import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport type { Reducer, StateFromReducersMapObject, UnknownAction } from 'redux';\nimport { combineReducers } from 'redux';\nimport { nanoid } from './nanoid';\nimport type { Id, NonUndefined, Tail, UnionToIntersection, WithOptionalProp } from './tsHelpers';\nimport { getOrInsertComputed } from './utils';\ntype SliceLike<ReducerPath extends string, State> = {\n  reducerPath: ReducerPath;\n  reducer: Reducer<State>;\n};\ntype AnySliceLike = SliceLike<string, any>;\ntype SliceLikeReducerPath<A extends AnySliceLike> = A extends SliceLike<infer ReducerPath, any> ? ReducerPath : never;\ntype SliceLikeState<A extends AnySliceLike> = A extends SliceLike<any, infer State> ? State : never;\nexport type WithSlice<A extends AnySliceLike> = { [Path in SliceLikeReducerPath<A>]: SliceLikeState<A> };\ntype ReducerMap = Record<string, Reducer>;\ntype ExistingSliceLike<DeclaredState> = { [ReducerPath in keyof DeclaredState]: SliceLike<ReducerPath & string, NonUndefined<DeclaredState[ReducerPath]>> }[keyof DeclaredState];\nexport type InjectConfig = {\n  /**\n   * Allow replacing reducer with a different reference. Normally, an error will be thrown if a different reducer instance to the one already injected is used.\n   */\n  overrideExisting?: boolean;\n};\n\n/**\n * A reducer that allows for slices/reducers to be injected after initialisation.\n */\nexport interface CombinedSliceReducer<InitialState, DeclaredState = InitialState> extends Reducer<DeclaredState, UnknownAction, Partial<DeclaredState>> {\n  /**\n   * Provide a type for slices that will be injected lazily.\n   *\n   * One way to do this would be with interface merging:\n   * ```ts\n   *\n   * export interface LazyLoadedSlices {}\n   *\n   * export const rootReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n   *\n   * // elsewhere\n   *\n   * declare module './reducer' {\n   *   export interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n   * }\n   *\n   * const withBoolean = rootReducer.inject(booleanSlice);\n   *\n   * // elsewhere again\n   *\n   * declare module './reducer' {\n   *   export interface LazyLoadedSlices {\n   *     customName: CustomState\n   *   }\n   * }\n   *\n   * const withCustom = rootReducer.inject({ reducerPath: \"customName\", reducer: customSlice.reducer })\n   * ```\n   */\n  withLazyLoadedSlices<Lazy = {}>(): CombinedSliceReducer<InitialState, Id<DeclaredState & Partial<Lazy>>>;\n\n  /**\n   * Inject a slice.\n   *\n   * Accepts an individual slice, RTKQ API instance, or a \"slice-like\" { reducerPath, reducer } object.\n   *\n   * ```ts\n   * rootReducer.inject(booleanSlice)\n   * rootReducer.inject(baseApi)\n   * rootReducer.inject({ reducerPath: 'boolean' as const, reducer: newReducer }, { overrideExisting: true })\n   * ```\n   *\n   */\n  inject<Sl extends Id<ExistingSliceLike<DeclaredState>>>(slice: Sl, config?: InjectConfig): CombinedSliceReducer<InitialState, Id<DeclaredState & WithSlice<Sl>>>;\n\n  /**\n   * Inject a slice.\n   *\n   * Accepts an individual slice, RTKQ API instance, or a \"slice-like\" { reducerPath, reducer } object.\n   *\n   * ```ts\n   * rootReducer.inject(booleanSlice)\n   * rootReducer.inject(baseApi)\n   * rootReducer.inject({ reducerPath: 'boolean' as const, reducer: newReducer }, { overrideExisting: true })\n   * ```\n   *\n   */\n  inject<ReducerPath extends string, State>(slice: SliceLike<ReducerPath, State & (ReducerPath extends keyof DeclaredState ? never : State)>, config?: InjectConfig): CombinedSliceReducer<InitialState, Id<DeclaredState & WithSlice<SliceLike<ReducerPath, State>>>>;\n\n  /**\n   * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n   *\n   * ```ts\n   * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n   * //                                                                ^? boolean | undefined\n   *\n   * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n   *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n   *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n   *   return state.boolean;\n   *   //           ^? boolean\n   * })\n   * ```\n   *\n   * If the reducer is nested inside the root state, a selectState callback can be passed to retrieve the reducer's state.\n   *\n   * ```ts\n   *\n   * export interface LazyLoadedSlices {};\n   *\n   * export const innerReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n   *\n   * export const rootReducer = combineSlices({ inner: innerReducer });\n   *\n   * export type RootState = ReturnType<typeof rootReducer>;\n   *\n   * // elsewhere\n   *\n   * declare module \"./reducer.ts\" {\n   *  export interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n   * }\n   *\n   * const withBool = innerReducer.inject(booleanSlice);\n   *\n   * const selectBoolean = withBool.selector(\n   *   (state) => state.boolean,\n   *   (rootState: RootState) => state.inner\n   * );\n   * //    now expects to be passed RootState instead of innerReducer state\n   *\n   * ```\n   *\n   * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n   *\n   * ```ts\n   * const injectedReducer = rootReducer.inject(booleanSlice);\n   * const selectBoolean = injectedReducer.selector((state) => {\n   *   console.log(injectedReducer.selector.original(state).boolean) // possibly undefined\n   *   return state.boolean\n   * })\n   * ```\n   */\n  selector: {\n    /**\n     * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n     *\n     * ```ts\n     * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n     * //                                                                ^? boolean | undefined\n     *\n     * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n     *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n     *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n     *   return state.boolean;\n     *   //           ^? boolean\n     * })\n     * ```\n     *\n     * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n     *\n     * ```ts\n     * const injectedReducer = rootReducer.inject(booleanSlice);\n     * const selectBoolean = injectedReducer.selector((state) => {\n     *   console.log(injectedReducer.selector.original(state).boolean) // undefined\n     *   return state.boolean\n     * })\n     * ```\n     */\n    <Selector extends (state: DeclaredState, ...args: any[]) => unknown>(selectorFn: Selector): (state: WithOptionalProp<Parameters<Selector>[0], Exclude<keyof DeclaredState, keyof InitialState>>, ...args: Tail<Parameters<Selector>>) => ReturnType<Selector>;\n\n    /**\n     * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n     *\n     * ```ts\n     * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n     * //                                                                ^? boolean | undefined\n     *\n     * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n     *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n     *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n     *   return state.boolean;\n     *   //           ^? boolean\n     * })\n     * ```\n     *\n     * If the reducer is nested inside the root state, a selectState callback can be passed to retrieve the reducer's state.\n     *\n     * ```ts\n     *\n     * interface LazyLoadedSlices {};\n     *\n     * const innerReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n     *\n     * const rootReducer = combineSlices({ inner: innerReducer });\n     *\n     * type RootState = ReturnType<typeof rootReducer>;\n     *\n     * // elsewhere\n     *\n     * declare module \"./reducer.ts\" {\n     *  interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n     * }\n     *\n     * const withBool = innerReducer.inject(booleanSlice);\n     *\n     * const selectBoolean = withBool.selector(\n     *   (state) => state.boolean,\n     *   (rootState: RootState) => state.inner\n     * );\n     * //    now expects to be passed RootState instead of innerReducer state\n     *\n     * ```\n     *\n     * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n     *\n     * ```ts\n     * const injectedReducer = rootReducer.inject(booleanSlice);\n     * const selectBoolean = injectedReducer.selector((state) => {\n     *   console.log(injectedReducer.selector.original(state).boolean) // possibly undefined\n     *   return state.boolean\n     * })\n     * ```\n     */\n    <Selector extends (state: DeclaredState, ...args: any[]) => unknown, RootState>(selectorFn: Selector, selectState: (rootState: RootState, ...args: Tail<Parameters<Selector>>) => WithOptionalProp<Parameters<Selector>[0], Exclude<keyof DeclaredState, keyof InitialState>>): (state: RootState, ...args: Tail<Parameters<Selector>>) => ReturnType<Selector>;\n    /**\n     * Returns the unproxied state. Useful for debugging.\n     * @param state state Proxy, that ensures injected reducers have value\n     * @returns original, unproxied state\n     * @throws if value passed is not a state Proxy\n     */\n    original: (state: DeclaredState) => InitialState & Partial<DeclaredState>;\n  };\n}\ntype InitialState<Slices extends Array<AnySliceLike | ReducerMap>> = UnionToIntersection<Slices[number] extends infer Slice ? Slice extends AnySliceLike ? WithSlice<Slice> : StateFromReducersMapObject<Slice> : never>;\nconst isSliceLike = (maybeSliceLike: AnySliceLike | ReducerMap): maybeSliceLike is AnySliceLike => 'reducerPath' in maybeSliceLike && typeof maybeSliceLike.reducerPath === 'string';\nconst getReducers = (slices: Array<AnySliceLike | ReducerMap>) => slices.flatMap(sliceOrMap => isSliceLike(sliceOrMap) ? [[sliceOrMap.reducerPath, sliceOrMap.reducer] as const] : Object.entries(sliceOrMap));\nconst ORIGINAL_STATE = Symbol.for('rtk-state-proxy-original');\nconst isStateProxy = (value: any) => !!value && !!value[ORIGINAL_STATE];\nconst stateProxyMap = new WeakMap<object, object>();\nconst createStateProxy = <State extends object,>(state: State, reducerMap: Partial<Record<string, Reducer>>) => getOrInsertComputed(stateProxyMap, state, () => new Proxy(state, {\n  get: (target, prop, receiver) => {\n    if (prop === ORIGINAL_STATE) return target;\n    const result = Reflect.get(target, prop, receiver);\n    if (typeof result === 'undefined') {\n      const reducer = reducerMap[prop.toString()];\n      if (reducer) {\n        // ensure action type is random, to prevent reducer treating it differently\n        const reducerResult = reducer(undefined, {\n          type: nanoid()\n        });\n        if (typeof reducerResult === 'undefined') {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(24) : `The slice reducer for key \"${prop.toString()}\" returned undefined when called for selector(). ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n        }\n        return reducerResult;\n      }\n    }\n    return result;\n  }\n})) as State;\nconst original = (state: any) => {\n  if (!isStateProxy(state)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(25) : 'original must be used on state Proxy');\n  }\n  return state[ORIGINAL_STATE];\n};\nconst noopReducer: Reducer<Record<string, any>> = (state = {}) => state;\nexport function combineSlices<Slices extends Array<AnySliceLike | ReducerMap>>(...slices: Slices): CombinedSliceReducer<Id<InitialState<Slices>>> {\n  const reducerMap = Object.fromEntries<Reducer>(getReducers(slices));\n  const getReducer = () => Object.keys(reducerMap).length ? combineReducers(reducerMap) : noopReducer;\n  let reducer = getReducer();\n  function combinedReducer(state: Record<string, unknown>, action: UnknownAction) {\n    return reducer(state, action);\n  }\n  combinedReducer.withLazyLoadedSlices = () => combinedReducer;\n  const inject = (slice: AnySliceLike, config: InjectConfig = {}): typeof combinedReducer => {\n    const {\n      reducerPath,\n      reducer: reducerToInject\n    } = slice;\n    const currentReducer = reducerMap[reducerPath];\n    if (!config.overrideExisting && currentReducer && currentReducer !== reducerToInject) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        console.error(`called \\`inject\\` to override already-existing reducer ${reducerPath} without specifying \\`overrideExisting: true\\``);\n      }\n      return combinedReducer;\n    }\n    reducerMap[reducerPath] = reducerToInject;\n    reducer = getReducer();\n    return combinedReducer;\n  };\n  const selector = Object.assign(function makeSelector<State extends object, RootState, Args extends any[]>(selectorFn: (state: State, ...args: Args) => any, selectState?: (rootState: RootState, ...args: Args) => State) {\n    return function selector(state: State, ...args: Args) {\n      return selectorFn(createStateProxy(selectState ? selectState(state as any, ...args) : state, reducerMap), ...args);\n    };\n  }, {\n    original\n  });\n  return Object.assign(combinedReducer, {\n    inject,\n    selector\n  }) as any;\n}","/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux Toolkit error #${code}; visit https://redux-toolkit.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  description: string;\n  image: string;\n}\n\ninterface CartState {\n  items: CartItem[];\n  totalAmount: number;\n}\n\nconst initialState: CartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // eslint-disable-next-line no-param-reassign\n    addItemToCart: (state, action: PayloadAction<CartItem>) => {\n      const existingItem = state.items.find(\n        (item) => item.id === action.payload.id,\n      );\n      if (existingItem) {\n        existingItem.quantity += action.payload.quantity;\n      } else {\n        state.items = [...state.items, action.payload];\n      }\n      state.totalAmount += action.payload.price * action.payload.quantity;\n    },\n    // eslint-disable-next-line no-param-reassign\n    removeItemFromCart: (state, action: PayloadAction<string>) => {\n      const itemIndex = state.items.findIndex(\n        (item) => item.id === action.payload,\n      );\n      if (itemIndex !== -1) {\n        const item = state.items[itemIndex];\n        state.items = state.items.filter((_, index) => index !== itemIndex);\n        state.totalAmount -= item.price * item.quantity;\n      }\n    },\n    // eslint-disable-next-line no-param-reassign\n    clearCart: (state) => {\n      state.items = [];\n      state.totalAmount = 0;\n    },\n  },\n});\n\nexport const { addItemToCart, removeItemFromCart, clearCart } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartSlice\";\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3, formatProdErrorMessage as _formatProdErrorMessage4, formatProdErrorMessage as _formatProdErrorMessage5, formatProdErrorMessage as _formatProdErrorMessage6, formatProdErrorMessage as _formatProdErrorMessage7 } from \"@reduxjs/toolkit\";\nimport type { Reducer, ReducersMapObject, Middleware, Action, StoreEnhancer, Store, UnknownAction } from 'redux';\nimport { applyMiddleware, createStore, compose, combineReducers, isPlainObject } from 'redux';\nimport type { DevToolsEnhancerOptions as DevToolsOptions } from './devtoolsExtension';\nimport { composeWithDevTools } from './devtoolsExtension';\nimport type { ThunkMiddlewareFor, GetDefaultMiddleware } from './getDefaultMiddleware';\nimport { buildGetDefaultMiddleware } from './getDefaultMiddleware';\nimport type { ExtractDispatchExtensions, ExtractStoreExtensions, ExtractStateExtensions, UnknownIfNonSpecific } from './tsHelpers';\nimport type { Tuple } from './utils';\nimport type { GetDefaultEnhancers } from './getDefaultEnhancers';\nimport { buildGetDefaultEnhancers } from './getDefaultEnhancers';\n\n/**\n * Options for `configureStore()`.\n *\n * @public\n */\nexport interface ConfigureStoreOptions<S = any, A extends Action = UnknownAction, M extends Tuple<Middlewares<S>> = Tuple<Middlewares<S>>, E extends Tuple<Enhancers> = Tuple<Enhancers>, P = S> {\n  /**\n   * A single reducer function that will be used as the root reducer, or an\n   * object of slice reducers that will be passed to `combineReducers()`.\n   */\n  reducer: Reducer<S, A, P> | ReducersMapObject<S, A, P>;\n\n  /**\n   * An array of Redux middleware to install, or a callback receiving `getDefaultMiddleware` and returning a Tuple of middleware.\n   * If not supplied, defaults to the set of middleware returned by `getDefaultMiddleware()`.\n   *\n   * @example `middleware: (gDM) => gDM().concat(logger, apiMiddleware, yourCustomMiddleware)`\n   * @see https://redux-toolkit.js.org/api/getDefaultMiddleware#intended-usage\n   */\n  middleware?: (getDefaultMiddleware: GetDefaultMiddleware<S>) => M;\n\n  /**\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\n   *\n   * Additional configuration can be done by passing Redux DevTools options\n   */\n  devTools?: boolean | DevToolsOptions;\n\n  /**\n   * The initial state, same as Redux's createStore.\n   * You may optionally specify it to hydrate the state\n   * from the server in universal apps, or to restore a previously serialized\n   * user session. If you use `combineReducers()` to produce the root reducer\n   * function (either directly or indirectly by passing an object as `reducer`),\n   * this must be an object with the same shape as the reducer map keys.\n   */\n  // we infer here, and instead complain if the reducer doesn't match\n  preloadedState?: P;\n\n  /**\n   * The store enhancers to apply. See Redux's `createStore()`.\n   * All enhancers will be included before the DevTools Extension enhancer.\n   * If you need to customize the order of enhancers, supply a callback\n   * function that will receive a `getDefaultEnhancers` function that returns a Tuple,\n   * and should return a Tuple of enhancers (such as `getDefaultEnhancers().concat(offline)`).\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\n   */\n  enhancers?: (getDefaultEnhancers: GetDefaultEnhancers<M>) => E;\n}\nexport type Middlewares<S> = ReadonlyArray<Middleware<{}, S>>;\ntype Enhancers = ReadonlyArray<StoreEnhancer>;\n\n/**\n * A Redux store returned by `configureStore()`. Supports dispatching\n * side-effectful _thunks_ in addition to plain actions.\n *\n * @public\n */\nexport type EnhancedStore<S = any, A extends Action = UnknownAction, E extends Enhancers = Enhancers> = ExtractStoreExtensions<E> & Store<S, A, UnknownIfNonSpecific<ExtractStateExtensions<E>>>;\n\n/**\n * A friendly abstraction over the standard Redux `createStore()` function.\n *\n * @param options The store configuration.\n * @returns A configured Redux store.\n *\n * @public\n */\nexport function configureStore<S = any, A extends Action = UnknownAction, M extends Tuple<Middlewares<S>> = Tuple<[ThunkMiddlewareFor<S>]>, E extends Tuple<Enhancers> = Tuple<[StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>, StoreEnhancer]>, P = S>(options: ConfigureStoreOptions<S, A, M, E, P>): EnhancedStore<S, A, E> {\n  const getDefaultMiddleware = buildGetDefaultMiddleware<S>();\n  const {\n    reducer = undefined,\n    middleware,\n    devTools = true,\n    preloadedState = undefined,\n    enhancers = undefined\n  } = options || {};\n  let rootReducer: Reducer<S, A, P>;\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = combineReducers(reducer) as unknown as Reducer<S, A, P>;\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(1) : '`reducer` is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\n  }\n  if (process.env.NODE_ENV !== 'production' && middleware && typeof middleware !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(2) : '`middleware` field must be a callback');\n  }\n  let finalMiddleware: Tuple<Middlewares<S>>;\n  if (typeof middleware === 'function') {\n    finalMiddleware = middleware(getDefaultMiddleware);\n    if (process.env.NODE_ENV !== 'production' && !Array.isArray(finalMiddleware)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(3) : 'when using a middleware builder function, an array of middleware must be returned');\n    }\n  } else {\n    finalMiddleware = getDefaultMiddleware();\n  }\n  if (process.env.NODE_ENV !== 'production' && finalMiddleware.some((item: any) => typeof item !== 'function')) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(4) : 'each middleware provided to configureStore must be a function');\n  }\n  let finalCompose = compose;\n  if (devTools) {\n    finalCompose = composeWithDevTools({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: process.env.NODE_ENV !== 'production',\n      ...(typeof devTools === 'object' && devTools)\n    });\n  }\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware);\n  const getDefaultEnhancers = buildGetDefaultEnhancers<M>(middlewareEnhancer);\n  if (process.env.NODE_ENV !== 'production' && enhancers && typeof enhancers !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(5) : '`enhancers` field must be a callback');\n  }\n  let storeEnhancers = typeof enhancers === 'function' ? enhancers(getDefaultEnhancers) : getDefaultEnhancers();\n  if (process.env.NODE_ENV !== 'production' && !Array.isArray(storeEnhancers)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(6) : '`enhancers` callback must return an array');\n  }\n  if (process.env.NODE_ENV !== 'production' && storeEnhancers.some((item: any) => typeof item !== 'function')) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(7) : 'each enhancer provided to configureStore must be a function');\n  }\n  if (process.env.NODE_ENV !== 'production' && finalMiddleware.length && !storeEnhancers.includes(middlewareEnhancer)) {\n    console.error('middlewares were provided, but middleware enhancer was not included in final enhancers - make sure to call `getDefaultEnhancers`');\n  }\n  const composedEnhancer: StoreEnhancer<any> = finalCompose(...storeEnhancers);\n  return createStore(rootReducer, preloadedState as P, composedEnhancer);\n}","import { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport compose from './compose';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\nimport { StoreEnhancer, Dispatch } from './types/store';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns A store enhancer applying the middleware.\n *\n * @template Ext Dispatch signature added by a middleware.\n * @template S The type of the state supported by a middleware.\n */\nexport default function applyMiddleware(): StoreEnhancer;\nexport default function applyMiddleware<Ext1, S>(middleware1: Middleware<Ext1, S, any>): StoreEnhancer<{\n  dispatch: Ext1;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, Ext5, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>, middleware5: Middleware<Ext5, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4 & Ext5;\n}>;\nexport default function applyMiddleware<Ext, S = any>(...middlewares: Middleware<any, S, any>[]): StoreEnhancer<{\n  dispatch: Ext;\n}>;\nexport default function applyMiddleware(...middlewares: Middleware[]): StoreEnhancer<any> {\n  return createStore => (reducer, preloadedState) => {\n    const store = createStore(reducer, preloadedState);\n    let dispatch: Dispatch = () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n    };\n    const middlewareAPI: MiddlewareAPI = {\n      getState: store.getState,\n      dispatch: (action, ...args) => dispatch(action, ...args)\n    };\n    const chain = middlewares.map(middleware => middleware(middlewareAPI));\n    dispatch = compose<typeof dispatch>(...chain)(store.dispatch);\n    return {\n      ...store,\n      dispatch\n    };\n  };\n}","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","export type validObjectValue = Record<string, any> | null | undefined;\n\nexport default function shallowEqualObjects<T>(\n  objA: validObjectValue,\n  objB: validObjectValue\n): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n\n    if (\n      objA[key] !== objB[key] ||\n      !Object.prototype.hasOwnProperty.call(objB, key)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import PropTypes from 'prop-types'\n\nconst stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\n// media types\nconst types = {\n  all: PropTypes.bool,\n  grid: PropTypes.bool,\n  aural: PropTypes.bool,\n  braille: PropTypes.bool,\n  handheld: PropTypes.bool,\n  print: PropTypes.bool,\n  projection: PropTypes.bool,\n  screen: PropTypes.bool,\n  tty: PropTypes.bool,\n  tv: PropTypes.bool,\n  embossed: PropTypes.bool\n}\n\n// properties that match media queries\nconst matchers = {\n  orientation: PropTypes.oneOf(['portrait', 'landscape']),\n\n  scan: PropTypes.oneOf(['progressive', 'interlace']),\n\n  aspectRatio: PropTypes.string,\n  deviceAspectRatio: PropTypes.string,\n\n  height: stringOrNumber,\n  deviceHeight: stringOrNumber,\n\n  width: stringOrNumber,\n  deviceWidth: stringOrNumber,\n\n  color: PropTypes.bool,\n\n  colorIndex: PropTypes.bool,\n\n  monochrome: PropTypes.bool,\n  resolution: stringOrNumber,\n  type: Object.keys(types)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { type, ...featureMatchers } = matchers\n\n// media features\nconst features = {\n  minAspectRatio: PropTypes.string,\n  maxAspectRatio: PropTypes.string,\n  minDeviceAspectRatio: PropTypes.string,\n  maxDeviceAspectRatio: PropTypes.string,\n\n  minHeight: stringOrNumber,\n  maxHeight: stringOrNumber,\n  minDeviceHeight: stringOrNumber,\n  maxDeviceHeight: stringOrNumber,\n\n  minWidth: stringOrNumber,\n  maxWidth: stringOrNumber,\n  minDeviceWidth: stringOrNumber,\n  maxDeviceWidth: stringOrNumber,\n\n  minColor: PropTypes.number,\n  maxColor: PropTypes.number,\n\n  minColorIndex: PropTypes.number,\n  maxColorIndex: PropTypes.number,\n\n  minMonochrome: PropTypes.number,\n  maxMonochrome: PropTypes.number,\n\n  minResolution: stringOrNumber,\n  maxResolution: stringOrNumber,\n\n  ...featureMatchers\n}\n\nconst all = { ...types, ...features }\n\nexport default {\n  all: all,\n  types: types,\n  matchers: matchers,\n  features: features\n}\n","import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\nimport { MediaQueryAllQueryable } from './types'\n\nconst negate = (cond: string) => `not ${cond}`\n\nconst keyVal = (k: string, v: unknown): string => {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return realKey\n  }\n  if (v === false) {\n    return negate(realKey)\n  }\n  return `(${realKey}: ${v})`\n}\n\nconst join = (conds: string[]): string => conds.join(' and ')\n\nconst toQuery = (obj: Partial<MediaQueryAllQueryable>): string => {\n  const rules: string[] = []\n  Object.keys(mq.all).forEach((k) => {\n    const v = obj[k as keyof MediaQueryAllQueryable]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n\nexport default toQuery\n","import { createContext } from 'react'\nimport { MediaQueryAllQueryable } from './types'\n\nconst Context = createContext<Partial<MediaQueryAllQueryable> | undefined>(\n  undefined\n)\n\nexport default Context\n","import { useRef, useEffect, useContext, useState } from 'react'\nimport matchMedia from 'matchmediaquery'\nimport hyphenate from 'hyphenate-style-name'\nimport { shallowEqualObjects } from 'shallow-equal'\nimport toQuery from './toQuery'\nimport Context from './Context'\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types'\n\ntype MediaQuerySettings = Partial<MediaQueryAllQueryable & { query?: string }>\ntype HyphenateKeyTypes = MediaQueryMatchers | MediaQueryAllQueryable\n\nconst makeQuery = (settings: MediaQuerySettings) =>\n  settings.query || toQuery(settings)\n\nconst hyphenateKeys = (obj?: HyphenateKeyTypes) => {\n  type K = keyof HyphenateKeyTypes\n\n  if (!obj) return undefined\n  const keys = Object.keys(obj) as K[]\n\n  return keys.reduce(\n    (result, key) => {\n      result[hyphenate(key)] = obj[key]\n      return result\n    },\n    {} as Record<string, (typeof obj)[K]>\n  )\n}\n\nconst useIsUpdate = () => {\n  const ref = useRef(false)\n\n  useEffect(() => {\n    ref.current = true\n  }, [])\n\n  return ref.current\n}\n\nconst useDevice = (\n  deviceFromProps?: MediaQueryMatchers\n): Partial<MediaQueryAllQueryable> | undefined => {\n  const deviceFromContext = useContext(Context)\n  const getDevice = () =>\n    hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext)\n  const [device, setDevice] = useState(getDevice)\n\n  useEffect(() => {\n    const newDevice = getDevice()\n    if (!shallowEqualObjects(device, newDevice)) {\n      setDevice(newDevice)\n    }\n  }, [deviceFromProps, deviceFromContext])\n\n  return device\n}\n\nconst useQuery = (settings: MediaQuerySettings) => {\n  const getQuery = () => makeQuery(settings)\n  const [query, setQuery] = useState(getQuery)\n\n  useEffect(() => {\n    const newQuery = getQuery()\n    if (query !== newQuery) {\n      setQuery(newQuery)\n    }\n  }, [settings])\n\n  return query\n}\n\nconst useMatchMedia = (query: string, device?: MediaQueryMatchers) => {\n  const getMatchMedia = () => matchMedia(query, device || {}, !!device)\n  const [mq, setMq] = useState(getMatchMedia)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate) {\n      // skip on mounting, it has already been set\n      const newMq = getMatchMedia()\n      setMq(newMq)\n\n      return () => {\n        if (newMq) {\n          newMq.dispose()\n        }\n      }\n    }\n  }, [query, device])\n\n  return mq\n}\n\nconst useMatches = (mediaQuery: MediaQueryList): boolean => {\n  const [matches, setMatches] = useState<boolean>(mediaQuery.matches)\n\n  useEffect(() => {\n    const updateMatches = (ev: MediaQueryListEvent) => {\n      setMatches(ev.matches)\n    }\n    mediaQuery.addListener(updateMatches)\n    setMatches(mediaQuery.matches)\n\n    return () => {\n      mediaQuery.removeListener(updateMatches)\n    }\n  }, [mediaQuery])\n\n  return matches\n}\n\nconst useMediaQuery = (\n  settings: MediaQuerySettings,\n  device?: MediaQueryMatchers,\n  onChange?: (_: boolean) => void\n) => {\n  const deviceSettings = useDevice(device)\n  const query = useQuery(settings)\n  if (!query) throw new Error('Invalid or missing MediaQuery!')\n  const mq = useMatchMedia(query, deviceSettings)\n  const matches = useMatches(mq as unknown as MediaQueryList)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate && onChange) {\n      onChange(matches)\n    }\n  }, [matches])\n\n  useEffect(\n    () => () => {\n      if (mq) {\n        mq.dispose()\n      }\n    },\n    []\n  )\n\n  return matches\n}\n\nexport default useMediaQuery\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport useAuthUser from \"react-auth-kit/hooks/useAuthUser\";\nimport useAuthHeader from \"react-auth-kit/hooks/useAuthHeader\";\nimport \"./header.css\";\n\nconst Header = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(min-width: 380px)\" });\n  let className;\n  if (isBigScreen) {\n    className =\n      \" header d-flex flex-row flex-wrap mx-auto justify-content-around \";\n  } else if (isTabletOrMobile) {\n    className = \"headerMobile d-flex flex-column mx-auto  align-items-center\";\n  }\n  const auth = useAuthUser();\n  const token = useAuthHeader();\n  const [isconnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    if (auth && token) {\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }, [auth, token]);\n  return (\n    <header>\n      <nav className={className}>\n        <NavLink className=\"nav \" to=\"/\">\n          Accueil\n        </NavLink>\n        <NavLink className=\"nav \" to=\"/produits/liste\">\n          Store\n        </NavLink>\n        <NavLink className=\"nav \" to=\"/panier/detail\">\n          Panier\n        </NavLink>\n        {!isconnected && (\n          <NavLink className=\"nav \" to=\"/se-connecter\">\n            Connexion\n          </NavLink>\n        )}\n        {isconnected && (\n          <NavLink className=\"nav \" to=\"/client/mon-compte\">\n            Mon compte\n          </NavLink>\n        )}\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport \"./footer.css\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(min-width: 280px)\" });\n  let className;\n  if (isBigScreen) {\n    className = \" d-flex pt-5 justify-content-evenly\";\n  } else if (isTabletOrMobile) {\n    className = \"d-flex flex-column\";\n  }\n  return (\n    <footer className={className}>\n      <article className=\"d-flex flex-column align-items-center\">\n        <h1>DOMAINES ACTIVITES</h1>\n        <p>categories 1</p>\n        <p>categories 2</p>\n      </article>\n      <article className=\"d-flex flex-column align-items-center\">\n        <h1>NOUS CONTACTER</h1>\n      </article>\n      <article className=\"d-flex flex-column align-items-center\">\n        <h1>NOS PARTENAIRES</h1>\n        <div>\n          <img src=\"\" alt=\"\" />\n          <img src=\"\" alt=\"\" />\n          <img src=\"\" alt=\"\" />\n        </div>\n      </article>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./assets/redux/store\";\n// components\nimport Header from \"./components/client/header/Header\";\nimport Footer from \"./components/client/footer/Footer\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <main>\n        <Outlet />\n      </main>\n\n      <Footer />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\n\n// Utilisez une déclaration de fonction classique\nconst Admin = () => {\n  return (\n    <>\n      qscsdc\n      <Outlet />\n    </>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport Header from \"./components/client/header/Header\";\nimport Footer from \"./components/client/footer/Footer\";\n\n// Utilisez une déclaration de fonction classique\nconst Consumer = () => {\n  return (\n    <>\n      <Header />\n      <main>\n        <Outlet />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Consumer;\n","import React from \"react\";\n\nconst Accueil = () => {\n  return <div>COMING SOON</div>;\n};\n\nexport default Accueil;\n","import React, { useRef } from \"react\";\nimport \"./oneproduct.css\";\nimport \"../../App.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addItemToCart } from \"../../assets/redux/cartSlice\";\n\ninterface Product {\n  id: string;\n  title: string;\n  price: string;\n  discount: boolean;\n  priceDiscount: string;\n  description: string;\n  image: string;\n}\n\nconst OneProduct: React.FC<Product> = ({\n  id,\n  title,\n  price,\n  discount,\n  priceDiscount,\n  description,\n  image,\n}) => {\n  const amountRef = useRef<HTMLDivElement>(null);\n  const buttonRefs = useRef<Record<string, HTMLDivElement | null>>({});\n  const dispatch = useDispatch();\n\n  function ajouterTexteAvantDeuxDerniers(chaine: string) {\n    if (chaine.length < 2) {\n      return `0,${chaine}€`;\n    }\n    return `${chaine.slice(0, -2)}€${chaine.slice(-2)}`;\n  }\n\n  const p = ajouterTexteAvantDeuxDerniers(price);\n  const pdis = ajouterTexteAvantDeuxDerniers(priceDiscount);\n\n  function handleAddProduct(productId: string) {\n    const btnAddElement = buttonRefs.current[productId];\n\n    if (btnAddElement) {\n      // Ajouter une classe d'animation\n      btnAddElement.classList.add(\"animate\");\n\n      // Retirer la classe après l'animation\n      setTimeout(() => {\n        btnAddElement.classList.remove(\"animate\");\n      }, 300); // La durée doit correspondre au CSS\n    }\n\n    const amount = amountRef.current\n      ? parseInt(amountRef.current.innerHTML, 10)\n      : 1;\n\n    dispatch(\n      addItemToCart({\n        id,\n        name: title,\n        price: parseFloat(price),\n        quantity: amount,\n        description,\n        image,\n      }),\n    );\n  }\n\n  function handleMore() {\n    if (amountRef.current) {\n      const currentAmount = parseInt(amountRef.current.innerHTML, 10);\n      amountRef.current.innerHTML = (currentAmount + 1).toString();\n    }\n  }\n\n  function handleLess() {\n    if (amountRef.current) {\n      const currentAmount = parseInt(amountRef.current.innerHTML, 10);\n      if (currentAmount > 1) {\n        amountRef.current.innerHTML = (currentAmount - 1).toString();\n      }\n    }\n  }\n\n  return (\n    <div className=\"containerOneProduct d-flex mb-3 shadow\" key={id}>\n      {image ? (\n        <img\n          className=\"imageOneProduct\"\n          src={`${process.env.REACT_APP_SERVER_URL}/media/${image}`}\n          alt={title}\n          width=\"200\"\n        />\n      ) : (\n        <div className=\"imageOneProduct\">No image available</div>\n      )}\n      <div className=\"blockInfoOneProduct\">\n        <div className=\"d-flex justify-content-between\">\n          <h3 className=\"titleOneProduct w-100\">{title}</h3>\n          <div className=\"containerAmountOneProduct d-flex justify-content-between align-items-center\">\n            <div\n              id=\"less\"\n              onClick={handleLess}\n              onKeyDown={(e) => e.key === \"Enter\" && handleLess()}\n              role=\"button\"\n              tabIndex={0}\n            >\n              -\n            </div>\n            <div id=\"amount\" className=\"amountOneProduct\" ref={amountRef}>\n              1\n            </div>\n            <div\n              id=\"more\"\n              onClick={handleMore}\n              onKeyDown={(e) => e.key === \"Enter\" && handleMore()}\n              role=\"button\"\n              tabIndex={0}\n            >\n              +\n            </div>\n          </div>\n        </div>\n        <p className=\"descriptionOneProduct\">{description}</p>\n        <div className=\"containerPriceAdd d-flex justify-content-end align-items-center w-100\">\n          <div className=\"price\">\n            <strong>\n              {p} {discount && `(Discounted: ${pdis})`}\n            </strong>\n          </div>\n          <div\n            onClick={() => handleAddProduct(id)}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={(e) => e.key === \"Enter\" && handleAddProduct(id)}\n            ref={(el) => {\n              buttonRefs.current[id] = el;\n            }}\n            className=\"btnAdd d-flex justify-content-center align-items-center rounded-5\"\n          >\n            +\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OneProduct;\n","import React from \"react\";\nimport \"./h1visiteur.css\";\n\ninterface H1Props {\n  title: string;\n}\n\nconst H1visiteur: React.FC<H1Props> = ({ title }) => {\n  return <h1>{title}</h1>;\n};\n\nexport default H1visiteur;\n","import React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n// components\nimport OneProduct from \"../../components/oneproduct/OneProduct\";\nimport H1visiteur from \"../../components/h1visiteur/H1visiteur\";\n\ninterface Product {\n  id: string;\n  title: string;\n  price: string;\n  discount: boolean;\n  priceDiscount: string;\n  description: string;\n  image: string;\n}\n\nconst ListingProducts = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const [products, setProducts] = useState<Product[]>([]);\n\n  const [error, setError] = useState<string | null>(null);\n\n  const listing = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/products/listing`,\n      );\n      if (!response.ok) {\n        setError(\"Failed to fetch products.\");\n        setProducts([]);\n        return;\n      }\n      const responseData = await response.json();\n      const data: Product[] = responseData.result;\n      setProducts(data);\n      setError(null);\n    } catch (err) {\n      setError(\"Something went wrong. Please try again later.\");\n      setProducts([]);\n    }\n  };\n  useEffect(() => {\n    listing();\n  }, []);\n  let className;\n  if (isBigScreen) {\n    className = \"d-flex flex-row flex-wrap mx-auto justify-content-evenly\";\n  } else if (isTabletOrMobile) {\n    className = \"d-flex flex-column mx-auto\";\n  }\n  return (\n    <>\n      <H1visiteur title=\"LES PRODUITS\" />\n      <div className={className}>\n        {error && <p className=\"text-danger\">{error}</p>}\n        {products.length === 0 && !error ? (\n          <p>No products found</p>\n        ) : (\n          products.map((p) => (\n            <OneProduct\n              key={p.id}\n              id={p.id}\n              title={p.title}\n              description={p.description}\n              price={p.price}\n              priceDiscount={p.priceDiscount}\n              discount={p.discount}\n              image={p.image}\n            />\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ListingProducts;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown): value is object =>\n  typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n  const isFileListInstance =\n    typeof FileList !== 'undefined' ? data instanceof FileList : false;\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || isFileListInstance)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!isArray && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          copy[key] = cloneObject(data[key]);\n        }\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(\n  object: T,\n  path?: string | null,\n  defaultValue?: unknown,\n): any => {\n  if (!path || !isObject(object)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    object,\n  );\n\n  return isUndefined(result) || result === object\n    ? isUndefined(object[path as keyof T])\n      ? defaultValue\n      : object[path as keyof T]\n    : result;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldPath, FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default (\n  object: FieldValues,\n  path: FieldPath<FieldValues>,\n  value?: unknown,\n) => {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return;\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n};\n","export const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n} as const;\n\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n} as const;\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n} as const;\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TransformedValues extends FieldValues | undefined = undefined,\n>(): UseFormReturn<TFieldValues, TContext, TransformedValues> =>\n  React.useContext(HookFormContext) as UseFormReturn<\n    TFieldValues,\n    TContext,\n    TransformedValues\n  >;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues extends FieldValues | undefined = undefined,\n>(\n  props: FormProviderProps<TFieldValues, TContext, TTransformedValues>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  Control,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & { name?: InternalFieldName },\n  _proxyFormState: K,\n  updateFormState: Control<T>['_updateFormState'],\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode, ValidationModeFlags } from '../types';\n\nexport default (mode?: Mode): ValidationModeFlags => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import { FieldRefs, InternalFieldName, Ref } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst iterateFieldsByAction = (\n  fields: FieldRefs,\n  action: (ref: Ref, name: string) => 1 | undefined | void,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[] | 0,\n  abortEarly?: boolean,\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f) {\n        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n          return true;\n        } else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n          return true;\n        } else {\n          if (iterateFieldsByAction(currentField, action)) {\n            break;\n          }\n        }\n      } else if (isObject(currentField)) {\n        if (iterateFieldsByAction(currentField as FieldRefs, action)) {\n          break;\n        }\n      }\n    }\n  }\n  return;\n};\nexport default iterateFieldsByAction;\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  MaxType,\n  Message,\n  MinType,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType: MaxType = INPUT_VALIDATION_RULES.maxLength,\n    minType: MinType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n            ? inputValue > maxOutput.value\n            : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n            ? inputValue < minOutput.value\n            : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > +maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < +minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n      ? [path]\n      : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default <T>(): Subject<T> => {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n};\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<T>(data: T, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: Record<\n    Extract<keyof T, string>,\n    ReturnType<typeof markFieldsDirty> | boolean\n  >,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n      ? value === ''\n        ? NaN\n        : value\n          ? +value\n          : value\n      : valueAsDate && isString(value)\n        ? new Date(value)\n        : setValueAs\n          ? setValueAs(value)\n          : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n      ? rule.source\n      : isObject(rule)\n        ? isRegex(rule.value)\n          ? rule.value.source\n          : rule.value\n        : rule;\n","import { Field, Validate } from '../types';\nimport isFunction from '../utils/isFunction';\nimport isObject from '../utils/isObject';\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\n\nexport default (fieldReference: Field['_f']) =>\n  !!fieldReference &&\n  !!fieldReference.validate &&\n  !!(\n    (isFunction(fieldReference.validate) &&\n      fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n    (isObject(fieldReference.validate) &&\n      Object.values(fieldReference.validate).find(\n        (validateFunction: Validate<unknown, unknown>) =>\n          validateFunction.constructor.name === ASYNC_FUNCTION,\n      ))\n  );\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  Control,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  ReadFormState,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasPromiseValidation from './hasPromiseValidation';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport iterateFieldsByAction from './iterateFieldsByAction';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: isFunction(_options.defaultValues),\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    validatingFields: {},\n    errors: _options.errors || {},\n    disabled: _options.disabled || false,\n  };\n  let _fields: FieldRefs = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState: ReadFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    validatingFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldUpdateValid?: boolean) => {\n    if (!_options.disabled && (_proxyFormState.isValid || shouldUpdateValid)) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (names?: string[], isValidating?: boolean) => {\n    if (\n      !_options.disabled &&\n      (_proxyFormState.isValidating || _proxyFormState.validatingFields)\n    ) {\n      (names || Array.from(_names.mount)).forEach((name) => {\n        if (name) {\n          isValidating\n            ? set(_formState.validatingFields, name, isValidating)\n            : unset(_formState.validatingFields, name);\n        }\n      });\n\n      _subjects.state.next({\n        validatingFields: _formState.validatingFields,\n        isValidating: !isEmptyObject(_formState.validatingFields),\n      });\n    }\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method && !_options.disabled) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const _setErrors = (errors: FieldErrors<TFieldValues>) => {\n    _formState.errors = errors;\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: false,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!_options.disabled) {\n      const disabledField = !!(\n        get(_fields, name) &&\n        get(_fields, name)._f &&\n        get(_fields, name)._f.disabled\n      );\n      if (!isBlurEvent || shouldDirty) {\n        if (_proxyFormState.isDirty) {\n          isPreviousDirty = _formState.isDirty;\n          _formState.isDirty = output.isDirty = _getDirty();\n          shouldUpdateField = isPreviousDirty !== output.isDirty;\n        }\n\n        const isCurrentFieldPristine =\n          disabledField || deepEqual(get(_defaultValues, name), fieldValue);\n\n        isPreviousDirty = !!(\n          !disabledField && get(_formState.dirtyFields, name)\n        );\n        isCurrentFieldPristine || disabledField\n          ? unset(_formState.dirtyFields, name)\n          : set(_formState.dirtyFields, name, true);\n        output.dirtyFields = _formState.dirtyFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.dirtyFields &&\n            isPreviousDirty !== !isCurrentFieldPristine);\n      }\n\n      if (isBlurEvent) {\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n        if (!isPreviousFieldTouched) {\n          set(_formState.touchedFields, name, isBlurEvent);\n          output.touchedFields = _formState.touchedFields;\n          shouldUpdateField =\n            shouldUpdateField ||\n            (_proxyFormState.touchedFields &&\n              isPreviousFieldTouched !== isBlurEvent);\n        }\n      }\n\n      shouldUpdateField && shouldRender && _subjects.state.next(output);\n    }\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (_options.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(_options.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) => {\n    _updateIsValidating(name, true);\n    const result = await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n    _updateIsValidating(name);\n    return result;\n  };\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema(names);\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field as Field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const isPromiseFunction =\n            field._f && hasPromiseValidation((field as Field)._f);\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name], true);\n          }\n\n          const fieldError = await validateField(\n            field as Field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation && !shouldOnlyCheckValid,\n            isFieldArrayRoot,\n          );\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name]);\n          }\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        !isEmptyObject(fieldValue) &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) =>\n    !_options.disabled &&\n    (name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n            ? _defaultValues\n            : isString(names)\n              ? { [names]: defaultValue }\n              : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        _options.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues },\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        isObject(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues },\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.values.next({\n      name: _state.mount ? name : undefined,\n      values: { ..._formValues },\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    _state.mount = true;\n    const target = event.target;\n    let name = target.name as string;\n    let isFieldValueUpdated = true;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n    const _updateIsFieldValueUpdated = (fieldValue: any): void => {\n      isFieldValueUpdated =\n        Number.isNaN(fieldValue) ||\n        (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n        deepEqual(fieldValue, get(_formValues, name, fieldValue));\n    };\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.values.next({\n          name,\n          type: event.type,\n          values: { ..._formValues },\n        });\n\n      if (shouldSkipValidation) {\n        if (_proxyFormState.isValid) {\n          if (_options.mode === 'onBlur') {\n            if (isBlurEvent) {\n              _updateValid();\n            }\n          } else {\n            _updateValid();\n          }\n        }\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          const previousErrorLookupResult = schemaErrorLookup(\n            _formState.errors,\n            _fields,\n            name,\n          );\n          const errorLookupResult = schemaErrorLookup(\n            errors,\n            _fields,\n            previousErrorLookupResult.name || name,\n          );\n\n          error = errorLookupResult.error;\n          name = errorLookupResult.name;\n\n          isValid = isEmptyObject(errors);\n        }\n      } else {\n        _updateIsValidating([name], true);\n        error = (\n          await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n        _updateIsValidating([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          if (error) {\n            isValid = false;\n          } else if (_proxyFormState.isValid) {\n            isValid = await executeBuiltInValidation(_fields, true);\n          }\n        }\n      }\n\n      if (isFieldValueUpdated) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      }\n    }\n  };\n\n  const _focusInput = (ref: Ref, key: string) => {\n    if (get(_formState.errors, key) && ref.focus) {\n      ref.focus();\n      return 1;\n    }\n    return;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      iterateFieldsByAction(\n        _fields,\n        _focusInput,\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ...(_state.mount ? _formValues : _defaultValues),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n        ? get(values, fieldNames)\n        : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    error: get((formState || _formState).errors, name),\n    isValidating: !!get(_formState.validatingFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n    const currentError = get(_formState.errors, name) || {};\n\n    // Don't override existing error messages elsewhere in the object tree.\n    const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n\n    set(_formState.errors, name, {\n      ...restOfErrorTree,\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.values.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (!options.keepValue) {\n        unset(_fields, fieldName);\n        unset(_formValues, fieldName);\n      }\n\n      !options.keepError && unset(_formState.errors, fieldName);\n      !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n      !options.keepTouched && unset(_formState.touchedFields, fieldName);\n      !options.keepIsValidating &&\n        unset(_formState.validatingFields, fieldName);\n      !_options.shouldUnregister &&\n        !options.keepDefaultValue &&\n        unset(_defaultValues, fieldName);\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues },\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const _updateDisabledField: Control<TFieldValues>['_updateDisabledField'] = ({\n    disabled,\n    name,\n    field,\n    fields,\n    value,\n  }) => {\n    if ((isBoolean(disabled) && _state.mount) || !!disabled) {\n      const inputValue = disabled\n        ? undefined\n        : isUndefined(value)\n          ? getFieldValue(field ? field._f : get(fields, name)._f)\n          : value;\n      if (disabled || (!disabled && !isUndefined(inputValue))) {\n        set(_formValues, name, inputValue);\n      }\n      updateTouchAndDirty(name, inputValue, false, false, true);\n    }\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined =\n      isBoolean(options.disabled) || isBoolean(_options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    if (field) {\n      _updateDisabledField({\n        field,\n        disabled: isBoolean(options.disabled)\n          ? options.disabled\n          : _options.disabled,\n        name,\n        value: options.value,\n      });\n    } else {\n      updateValidAndValue(name, true, options.value);\n    }\n\n    return {\n      ...(disabledIsDefined\n        ? { disabled: options.disabled || _options.disabled }\n        : {}),\n      ...(_options.progressive\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    iterateFieldsByAction(_fields, _focusInput, _names.mount);\n\n  const _disableForm = (disabled?: boolean) => {\n    if (isBoolean(disabled)) {\n      _subjects.state.next({ disabled });\n      iterateFieldsByAction(\n        _fields,\n        (ref, name) => {\n          const currentField: Field = get(_fields, name);\n          if (currentField) {\n            ref.disabled = currentField._f.disabled || disabled;\n\n            if (Array.isArray(currentField._f.refs)) {\n              currentField._f.refs.forEach((inputRef) => {\n                inputRef.disabled = currentField._f.disabled || disabled;\n              });\n            }\n          }\n        },\n        0,\n        false,\n      );\n    }\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      let onValidError = undefined;\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n\n      if (_options.disabled) {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        return;\n      }\n\n      let fieldValues = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        try {\n          await onValid(fieldValues as TFieldValues, e);\n        } catch (error) {\n          onValidError = error;\n        }\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n      if (onValidError) {\n        throw onValidError;\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, cloneObject(get(_defaultValues, name)));\n      } else {\n        setValue(\n          name,\n          options.defaultValue as PathValue<\n            TFieldValues,\n            FieldPath<TFieldValues>\n          >,\n        );\n        set(_defaultValues, name, cloneObject(options.defaultValue));\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const isEmptyResetValues = isEmptyObject(formValues);\n    const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        const fieldsToCheck = new Set([\n          ..._names.mount,\n          ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n        ]);\n        for (const fieldName of Array.from(fieldsToCheck)) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = _options.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneObject(values);\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.values.next({\n        values: { ...values },\n      });\n    }\n\n    _names = {\n      mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _state.mount =\n      !_proxyFormState.isValid ||\n      !!keepStateOptions.keepIsValid ||\n      !!keepStateOptions.keepDirtyValues;\n\n    _state.watch = !!_options.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: isEmptyResetValues\n        ? false\n        : keepStateOptions.keepDirty\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: isEmptyResetValues\n        ? {}\n        : keepStateOptions.keepDirtyValues\n          ? keepStateOptions.keepDefaultValues && _formValues\n            ? getDirtyFields(_defaultValues, _formValues)\n            : _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n            ? getDirtyFields(_defaultValues, formValues)\n            : keepStateOptions.keepDirty\n              ? _formState.dirtyFields\n              : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n        ? _formState.isSubmitSuccessful\n        : false,\n      isSubmitting: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? (formValues as Function)(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect &&\n          isFunction(fieldRef.select) &&\n          fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  const _resetDefaultValues = () =>\n    isFunction(_options.defaultValues) &&\n    (_options.defaultValues as Function)().then((values: TFieldValues) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      handleSubmit,\n      setError,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _updateDisabledField,\n      _getFieldArray,\n      _reset,\n      _resetDefaultValues,\n      _updateFormState,\n      _disableForm,\n      _subjects,\n      _proxyFormState,\n      _setErrors,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { ValidationModeFlags } from '../types';\n\nexport default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<ValidationModeFlags>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues extends FieldValues | undefined = undefined,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext, TTransformedValues> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues> | undefined\n  >();\n  const _values = React.useRef<typeof props.values>();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: isFunction(props.defaultValues),\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    validatingFields: {},\n    errors: props.errors || {},\n    disabled: props.disabled || false,\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) => {\n      if (\n        shouldRenderFormState(\n          value,\n          control._proxyFormState,\n          control._updateFormState,\n          true,\n        )\n      ) {\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(\n    () => control._disableForm(props.disabled),\n    [control, props.disabled],\n  );\n\n  React.useEffect(() => {\n    if (control._proxyFormState.isDirty) {\n      const isDirty = control._getDirty();\n      if (isDirty !== formState.isDirty) {\n        control._subjects.state.next({\n          isDirty,\n        });\n      }\n    }\n  }, [control, formState.isDirty]);\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, _values.current)) {\n      control._reset(props.values, control._options.resetOptions);\n      _values.current = props.values;\n      updateFormState((state) => ({ ...state }));\n    } else {\n      control._resetDefaultValues();\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (props.errors) {\n      control._setErrors(props.errors);\n    }\n  }, [props.errors, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    props.shouldUnregister &&\n      control._subjects.values.next({\n        values: control._getWatch(),\n      });\n  }, [props.shouldUnregister, control]);\n\n  return React.useMemo(\n    () =>\n      ({\n        ..._formControl.current,\n        formState: getProxyFormState(formState, control),\n      }) as UseFormReturn<TFieldValues, TContext, TTransformedValues>,\n    [formState, control],\n  );\n}\n","import React from \"react\";\nimport {\n  UseFormRegister,\n  FieldErrors,\n  RegisterOptions,\n  Path,\n  FieldValues,\n} from \"react-hook-form\";\nimport \"./input.css\";\n\ntype InputProps<TFieldValues extends FieldValues> = {\n  id: string;\n  name: Path<TFieldValues>; // Utilisation de Path pour garantir une compatibilité stricte\n  label: string;\n  register: UseFormRegister<TFieldValues>;\n  errors: FieldErrors<TFieldValues>;\n  required?: boolean;\n  type: string;\n  validationSchema?: RegisterOptions<TFieldValues>;\n  container_input?: string;\n  classe?: string;\n  value?: string;\n  messRequired?: string;\n  messMinLength?: string;\n  messMaxLength?: string;\n  messPattern?: string;\n  messMax?: string;\n  messMin?: string;\n  messValidate?: string;\n  onchange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  labelcss?: string;\n};\n\nconst Input = <TFieldValues extends FieldValues>({\n  id,\n  name,\n  label,\n  register,\n  errors,\n  required = false,\n  type,\n  validationSchema = {},\n  container_input = \"\",\n  classe = \"\",\n  value = \"\",\n  messRequired = \"This field is required\",\n  messMinLength,\n  messMaxLength,\n  messPattern,\n  messMax,\n  messMin,\n  messValidate,\n  onchange,\n  labelcss = \"\",\n}: InputProps<TFieldValues>) => {\n  const errorType = errors?.[name]?.type;\n\n  return (\n    <div className={container_input}>\n      <label className={labelcss} htmlFor={id}>\n        {label}\n        {required && \" *\"}\n      </label>\n\n      <input\n        id={id}\n        type={type}\n        className={classe}\n        defaultValue={value}\n        {...register(name, validationSchema)}\n        onChange={onchange}\n      />\n      <div className=\"error\">\n        {errorType === \"required\" && (\n          <div className=\"text-danger h\">{messRequired}</div>\n        )}\n        {errorType === \"minLength\" && (\n          <div className=\"text-danger\">{messMinLength}</div>\n        )}\n        {errorType === \"maxLength\" && (\n          <div className=\"text-danger\">{messMaxLength}</div>\n        )}\n        {errorType === \"pattern\" && (\n          <div className=\"text-danger\">{messPattern}</div>\n        )}\n        {errorType === \"max\" && <div className=\"text-danger\">{messMax}</div>}\n        {errorType === \"min\" && <div className=\"text-danger\">{messMin}</div>}\n        {errorType === \"validate\" && (\n          <div className=\"text-red-500\">{messValidate}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { MouseEventHandler } from \"react\";\n\ninterface BtnSubmitProps {\n  container_submit: string;\n  click: MouseEventHandler<HTMLInputElement> | undefined;\n  classe: string;\n  id: string;\n  value: string;\n}\n\nconst BtnSubmit: React.FC<BtnSubmitProps> = ({\n  container_submit,\n  click,\n  classe,\n  id,\n  value,\n}) => {\n  return (\n    <div className={container_submit}>\n      <input\n        onClick={click}\n        className={classe}\n        type=\"submit\"\n        id={id}\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default BtnSubmit;\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\nimport useSignIn from \"react-auth-kit/hooks/useSignIn\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Input from \"../../components/input/Input\";\nimport BtnSubmit from \"../../components/btnsubmit/BtnSubmit\";\nimport H1visiteur from \"../../components/h1visiteur/H1visiteur\";\n\ninterface LoginForm {\n  email: string;\n  password: string;\n}\n\nconst LoginClient = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(min-width: 380px)\" });\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<LoginForm>();\n  const signIn = useSignIn();\n  const navigate = useNavigate();\n  const [error, setError] = useState<string | null>(null);\n  const handleLogin: SubmitHandler<LoginForm> = async (data) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}auth`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData);\n        return;\n      }\n\n      const responseData = await response.json();\n      const parts = responseData.token.split(\".\");\n\n      const encodedPayload = parts[1]; // Le payload encodé\n      const decodedPayload = JSON.parse(atob(encodedPayload));\n      // Passer les données utilisateur à signIn\n      signIn({\n        auth: {\n          token: responseData.token,\n          type: \"Bearer\",\n        },\n        userState: {\n          firstName: decodedPayload.firstName,\n          lastName: decodedPayload.lastName,\n          email: decodedPayload.email,\n          id: decodedPayload.id,\n          roles: decodedPayload.roles,\n          phone: decodedPayload.phone,\n          cities: decodedPayload.cities,\n          adress: decodedPayload.adress,\n        },\n      });\n      navigate(\"/client/tableau-de-bord\");\n    } catch (e) {\n      setError(\"erreur interne\");\n    }\n  };\n  let containerForm;\n  if (isBigScreen) {\n    containerForm = \"d-flex   w-75 mx-auto\";\n  } else if (isTabletOrMobile) {\n    containerForm = \"d-flex flex-column align-items-center\";\n  }\n\n  let bloc;\n  if (isBigScreen) {\n    bloc = \"d-flex flex-column w-100 \";\n  } else if (isTabletOrMobile) {\n    bloc = \"d-flex justify-content-end w380  mb-3\";\n  }\n  return (\n    <div>\n      <H1visiteur title=\"Connecter vous\" />\n      {error && <div>{error}</div>}\n      <form id=\"form\" onSubmit={handleSubmit(handleLogin)}>\n        <div className={containerForm}>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 50,\n                pattern: {\n                  value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,\n                  message: \"Le format de l'email est invalide.\",\n                },\n              }}\n              id=\"email\"\n              value=\"\"\n              messRequired=\"L'email est obligatoire.\"\n              messMinLength=\"Le minimum est 2 caractères.\"\n              messMaxLength=\"Le maximum est 50 caractères.\"\n              messPattern=\"Erreur dans l'email\"\n              container_input=\"h-20\"\n              required\n              classe=\"border rounded px-3 py-2  border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              label=\"Mot de passe\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 8,\n                maxLength: 50,\n                pattern: {\n                  value:\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=[\\]{};:\"|,.<>/?~`])[A-Za-z\\d!@#$%^&*()_\\-+=$begin:math:display$$end:math:display${};:\"\\\\|,.<>/?~`]{8,}$/,\n                  message: \"Le format du mot de passe est invalide.\",\n                },\n              }}\n              id=\"password\"\n              value=\"\"\n              messRequired=\"Le mot de passe est obligatoire.\"\n              messMinLength=\"Le minimum est 8 caractères.\"\n              messMaxLength=\"Le maximum est 50 caractères.\"\n              container_input=\"h-20\"\n              required\n              classe=\"border rounded px-3 py-2  border border-primary\"\n            />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <BtnSubmit\n            click={() => {}}\n            container_submit=\"mt-5 \"\n            classe=\"btn btn-success shadow\"\n            id=\"submit\"\n            value=\"Se connecter\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <NavLink className=\"d-block\" to=\"/inscription\">\n            Inscription\n          </NavLink>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginClient;\n","import React from \"react\";\nimport \"../../../App.css\";\nimport \"./one.css\";\nimport { useDispatch } from \"react-redux\";\nimport { removeItemFromCart } from \"../../../assets/redux/cartSlice\";\n\ninterface Product {\n  id: string;\n  title: string;\n  price: string;\n  quantity: number;\n  description: string;\n  image: string;\n}\nconst One: React.FC<Product> = ({\n  id,\n  title,\n  price,\n  quantity,\n  description,\n  image,\n}) => {\n  const dispatch = useDispatch();\n  function ajouterTexteAvantDeuxDerniers(chaine: string) {\n    if (chaine.length < 2) {\n      return `0,${chaine}€`;\n    }\n\n    return `${chaine.slice(0, -2)},${chaine.slice(-2)}€`;\n  }\n  const p = ajouterTexteAvantDeuxDerniers(price);\n  const handleDeleteProduct = () => {\n    dispatch(removeItemFromCart(id));\n  };\n  return (\n    <div className=\"containerOneProduct d-flex mb-3 shadow\">\n      <img\n        className=\"imageOneProduct\"\n        src={`${process.env.REACT_APP_SERVER_URL}/media/${image}`}\n        alt={title}\n        width=\"200\"\n      />\n      <div className=\"blockInfoOneProduct\">\n        <div className=\"d-flex justify-content-between\">\n          <h3 className=\"titleOneProduct w-100\">{title}</h3>\n          <div className=\"containerAmountOneProduct d-flex justify-content-between align-items-center\">\n            <div id=\"amount\" className=\"amountOneProduct\">\n              QTE{quantity}\n            </div>\n          </div>\n        </div>\n        <p className=\"descriptionOneProduct\">{description}</p>\n        <div className=\"containerPriceAdd d-flex justify-content-end align-items-center w-100\">\n          <div className=\"price\">\n            <strong>{p}</strong>\n          </div>\n          <div\n            onClick={handleDeleteProduct}\n            onKeyDown={(e) => e.key === \"Enter\" && handleDeleteProduct()}\n            role=\"button\"\n            tabIndex={0}\n            className=\"btn btn-danger d-flex justify-content-center align-items-center rounded-5\"\n          >\n            X\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default One;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { NavLink } from \"react-router-dom\";\n// components\nimport H1visiteur from \"../../../components/h1visiteur/H1visiteur\";\nimport One from \"../one/One\";\nimport \"./cart.css\";\n\n// Définir l'interface pour les items du panier\ninterface CartItem {\n  id: string;\n  name: string;\n  price: string;\n  quantity: number;\n  description: string;\n  image: string;\n}\n\nconst Cart: React.FC = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  // Accéder au contenu du panier avec des types stricts\n  const items = useSelector(\n    (state: { cart: { items: CartItem[] } }) => state.cart.items,\n  );\n  const totalAmount = useSelector(\n    (state: { cart: { totalAmount: number } }) => state.cart.totalAmount,\n  );\n  function ajouterTexteAvantDeuxDerniers(chaine: string) {\n    if (chaine.length < 2) {\n      return `0,${chaine}€`;\n    }\n\n    return `${chaine.slice(0, -2)},${chaine.slice(-2)}€`;\n  }\n  const total = ajouterTexteAvantDeuxDerniers(String(totalAmount));\n  let className;\n  if (isBigScreen) {\n    className = \"d-flex flex-row flex-wrap mx-auto justify-content-evenly\";\n  } else if (isTabletOrMobile) {\n    className = \"d-flex flex-column mx-auto\";\n  }\n  let classNameTotal;\n  if (isBigScreen) {\n    classNameTotal = \"total shadow d-flex justify-content-between rounded-2 \";\n  } else if (isTabletOrMobile) {\n    classNameTotal = \"total shadow d-flex justify-content-between rounded-2\";\n  }\n  return (\n    <div>\n      <H1visiteur title=\"VOTRE PANIER\" />\n\n      {items.length > 0 ? (\n        <>\n          <div className={className}>\n            {items.map((item) => (\n              <One\n                id={item.id}\n                key={item.id}\n                title={item.name}\n                price={String(item.price)}\n                quantity={item.quantity}\n                description={item.description}\n                image={item.image}\n              />\n            ))}\n          </div>\n          <div className=\"d-flex justify-content-end\">\n            <h3 className={classNameTotal}>\n              <div>Montant Total :</div> <div>{total}</div>\n            </h3>\n          </div>\n\n          <div className=\"d-flex justify-content-center w-100\">\n            <NavLink to=\"/panier/recapitulatif\" className=\"btn btn-success \">\n              RECAPITULATIF\n            </NavLink>\n          </div>\n        </>\n      ) : (\n        <p>Le panier est vide.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\n\nconst AppError = () => {\n  return <div>ERROR</div>;\n};\n\nexport default AppError;\n","import React from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\nimport useSignIn from \"react-auth-kit/hooks/useSignIn\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Input from \"../input/Input\";\nimport BtnSubmit from \"../btnsubmit/BtnSubmit\";\nimport H1visiteur from \"../h1visiteur/H1visiteur\";\n\ninterface LoginForm {\n  email: string;\n  password: string;\n}\n\nconst LoginCart = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<LoginForm>(); // Ajout du type générique LoginForm\n  const signIn = useSignIn();\n  const navigate = useNavigate();\n\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const handleLogin: SubmitHandler<LoginForm> = async (data) => {\n    const { email, password } = data;\n    const response = await fetch(`${process.env.REACT_APP_SERVER_URL}auth`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (response.ok) {\n      const responseData = await response.json();\n      const parts = responseData.token.split(\".\");\n      const encodedPayload = parts[1];\n      const decodedPayload = JSON.parse(atob(encodedPayload));\n      signIn({\n        auth: {\n          token: responseData.token,\n          type: \"Bearer\",\n        },\n        userState: {\n          firstName: decodedPayload.firstName,\n          lastName: decodedPayload.lastName,\n          email: decodedPayload.email,\n          id: decodedPayload.id,\n          roles: decodedPayload.roles,\n          phone: decodedPayload.phone,\n          cities: decodedPayload.cities,\n          adress: decodedPayload.adress,\n        },\n      });\n      navigate(\"/client/tableau-de-bord\");\n    } else {\n      setErrorMessage(\"Connexion échouée.\");\n    }\n  };\n  let containerForm;\n  if (isBigScreen) {\n    containerForm = \"d-flex   w-75 mx-auto\";\n  } else if (isTabletOrMobile) {\n    containerForm = \"d-flex flex-column align-items-center\";\n  }\n\n  let bloc;\n  if (isBigScreen) {\n    bloc = \"d-flex flex-column w-100 \";\n  } else if (isTabletOrMobile) {\n    bloc = \"d-flex justify-content-end w380  mb-3\";\n  }\n  return (\n    <div>\n      {errorMessage && <div role=\"alert\">{errorMessage}</div>}\n      <H1visiteur title=\"Connecter vous\" />\n      <form id=\"form\" onSubmit={handleSubmit(handleLogin)}>\n        <div className={containerForm}>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 50,\n                pattern: {\n                  value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,\n                  message: \"Le format de l'email est invalide.\",\n                },\n              }}\n              id=\"email\"\n              value=\"\"\n              messRequired=\"L'email est obligatoire.\"\n              messMinLength=\"Le minimum est 2 caractères.\"\n              messMaxLength=\"Le maximum est 50 caractères.\"\n              messPattern=\"Erreur dans l'email\"\n              container_input=\"h-20\"\n              required\n              classe=\"border rounded px-3 py-2\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              label=\"Mot de passe\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 8,\n                maxLength: 50,\n                pattern: {\n                  value:\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=[\\]{};:\"|,.<>/?~`])[A-Za-z\\d!@#$%^&*()_\\-+=$begin:math:display$$end:math:display${};:\"\\\\|,.<>/?~`]{8,}$/,\n                  message: \"Le format du mot de passe est invalide.\",\n                },\n              }}\n              id=\"password\"\n              value=\"\"\n              messRequired=\"Le mot de passe est obligatoire.\"\n              messMinLength=\"Le minimum est 8 caractères.\"\n              messMaxLength=\"Le maximum est 50 caractères.\"\n              container_input=\"h-20\"\n              required\n              classe=\"border rounded px-3 py-2\"\n            />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <BtnSubmit\n            click={() => {}}\n            container_submit=\"container_mobile\"\n            classe=\"btn btn-success shadow\"\n            id=\"submit\"\n            value=\"Se connecter\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <NavLink className=\"d-block\" to=\"/inscription\">\n            Inscription\n          </NavLink>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginCart;\n","import React from \"react\";\nimport \"../../../App.css\";\nimport \"./onesummary.css\";\n\ninterface Product {\n  title: string;\n  price: string;\n  quantity: number;\n  description: string;\n}\nconst OneSummary: React.FC<Product> = ({\n  title,\n  price,\n  quantity,\n  description,\n}) => {\n  function ajouterTexteAvantDeuxDerniers(chaine: string) {\n    if (chaine.length < 2) {\n      return `0,${chaine}€`;\n    }\n\n    return `${chaine.slice(0, -2)},${chaine.slice(-2)}€`;\n  }\n  const p = ajouterTexteAvantDeuxDerniers(price);\n  return (\n    <div className=\"containerOneProduct d-flex mb-3 shadow\">\n      <div className=\"w-100\">\n        <div className=\"d-flex justify-content-between\">\n          <h3 className=\"titleOneProduct w-100\">{title}</h3>\n          <div className=\"containerAmountOneProduct d-flex justify-content-between align-items-center\">\n            <div id=\"amount\" className=\"amountOneProduct\">\n              QTE{quantity}\n            </div>\n          </div>\n        </div>\n        <p className=\"descriptionOneProduct\">{description}</p>\n        <div className=\"containerPriceAdd d-flex justify-content-end align-items-center w-100\">\n          <div className=\"price\">\n            <strong>{p}</strong>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OneSummary;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { NavLink } from \"react-router-dom\";\nimport useAuthHeader from \"react-auth-kit/hooks/useAuthHeader\";\nimport useAuthUser from \"react-auth-kit/hooks/useAuthUser\";\n// components\nimport H1visiteur from \"../../../components/h1visiteur/H1visiteur\";\n\nimport LoginCart from \"../../../components/logincart/LoginCart\";\nimport \"./summary.css\";\nimport OneSummary from \"../oneSummary/OneSummary\";\n\n// Définir l'interface pour les items du panier\ninterface User {\n  id: number;\n  email: string;\n  password: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  cities: string;\n  adress: string;\n  comment: string;\n}\ninterface CartItem {\n  id: string;\n  name: string;\n  price: string;\n  quantity: number;\n  description: string;\n  image: string;\n}\n\nconst Summary: React.FC = () => {\n  const authHeader = useAuthHeader();\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  // Accéder au contenu du panier avec des types stricts\n  const items = useSelector(\n    (state: { cart: { items: CartItem[] } }) => state.cart.items,\n  );\n  const totalAmount = useSelector(\n    (state: { cart: { totalAmount: number } }) => state.cart.totalAmount,\n  );\n  function ajouterTexteAvantDeuxDerniers(chaine: string) {\n    if (chaine.length < 2) {\n      return `0,${chaine}€`;\n    }\n\n    return `${chaine.slice(0, -2)},${chaine.slice(-2)}€`;\n  }\n  const total = ajouterTexteAvantDeuxDerniers(String(totalAmount));\n  let className;\n  if (isBigScreen) {\n    className = \"d-flex flex-row flex-wrap mx-auto justify-content-evenly\";\n  } else if (isTabletOrMobile) {\n    className = \"d-flex flex-column mx-auto\";\n  }\n  let classNameTotal;\n  if (isBigScreen) {\n    classNameTotal = \"total shadow d-flex justify-content-between rounded-2 \";\n  } else if (isTabletOrMobile) {\n    classNameTotal = \"total shadow d-flex justify-content-between rounded-2\";\n  }\n  let classNameInfo;\n  if (isBigScreen) {\n    classNameInfo = \"d-flex justify-content-end me-5\";\n  } else if (isTabletOrMobile) {\n    classNameInfo = \"d-flex justify-content-center \";\n  }\n  if (!authHeader) {\n    return <LoginCart />;\n  }\n  const auth = useAuthUser<User>();\n  return (\n    <div>\n      <H1visiteur title=\"RECAPITULATIF\" />\n\n      {items.length > 0 ? (\n        <>\n          <div className={classNameInfo}>\n            <div className=\"d-flex flex-column p-5 info \">\n              {auth?.firstName} {auth?.lastName}\n              <br />\n              {auth?.cities}\n              {auth?.adress}\n            </div>\n          </div>\n          <div className={className}>\n            {items.map((item) => (\n              <OneSummary\n                key={item.id}\n                title={item.name}\n                price={String(item.price)}\n                quantity={item.quantity}\n                description={item.description}\n              />\n            ))}\n          </div>\n          <div className=\"d-flex justify-content-end\">\n            <h3 className={classNameTotal}>\n              <div>Montant Total :</div> <div>{total}</div>\n            </h3>\n          </div>\n          <div className=\"d-flex justify-content-center w-100\">\n            <NavLink\n              to=\"/client/commande/paiement\"\n              className=\"btn btn-success \"\n            >\n              PAIEMENT\n            </NavLink>\n          </div>\n        </>\n      ) : (\n        <p>Le panier est vide.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Summary;\n","import React from \"react\";\nimport {\n  UseFormRegister,\n  RegisterOptions,\n  FieldValues,\n  Path,\n} from \"react-hook-form\";\nimport \"./selectinput.css\";\n\ninterface SelectInputProps<T extends FieldValues> {\n  label?: string;\n  options: { value: string | number; label: string }[];\n  name: Path<T>; // Utilisation de Path<T> pour les champs de formulaire\n  validationSchema?: RegisterOptions<T>;\n  register: UseFormRegister<T>;\n  defaultValue?: string | number;\n  className: string;\n  id: string;\n  onchange?: (option: { value: string | number; label: string }) => void;\n}\n\nconst SelectInput = <T extends FieldValues>({\n  label,\n  options,\n  name,\n  validationSchema,\n  register,\n  defaultValue,\n  className,\n  id,\n  onchange,\n}: SelectInputProps<T>) => {\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedOption = options.find(\n      (option) => option.value === e.target.value,\n    );\n    if (onchange && selectedOption) {\n      onchange(selectedOption);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      {label && <label htmlFor={id}>{label}</label>}\n      <select\n        id={id}\n        defaultValue={defaultValue}\n        {...register(name, validationSchema)}\n        className={className}\n        onChange={handleChange} // Utilisation de handleChange ici\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SelectInput;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useNavigate } from \"react-router-dom\";\nimport Input from \"../../components/input/Input\";\nimport BtnSubmit from \"../../components/btnsubmit/BtnSubmit\";\nimport SelectInput from \"../../components/selectinput/SelectInput\";\nimport H1visiteur from \"../../components/h1visiteur/H1visiteur\";\nimport \"./register.css\";\n\ninterface RegisterForm {\n  email: string;\n  password: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  idCities: number;\n  adress: string;\n  comment: string;\n}\n\nconst Register = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const navigate = useNavigate();\n  const [options, setOptions] = useState<\n    { value: string | number; label: string }[]\n  >([]);\n  const handleSelectChange = (option: {\n    value: string | number;\n    label: string;\n  }) => {\n    setOptions([option]);\n  };\n  const fetchCities = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/cities/select`,\n      );\n      const cities = await response.json();\n      const formattedCities = cities.map(\n        (city: { value: number; label: string }) => ({\n          value: city.value,\n          label: city.label,\n        }),\n      );\n      setOptions(formattedCities);\n    } catch (error) {\n      setOptions([]);\n    }\n  };\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<RegisterForm>();\n  const [error, setError] = useState<string | null>(null);\n\n  const handleRegister: SubmitHandler<RegisterForm> = async (data) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/user/register`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data),\n        },\n      );\n\n      if (!response.ok) {\n        setError(\"erreur dans\");\n        return;\n      }\n      navigate(\"se-connecter\");\n    } catch (e) {\n      navigate(\"\");\n    }\n  };\n  let bloc;\n  if (isBigScreen) {\n    bloc = \"d-flex  flex-wrap w380\";\n  } else if (isTabletOrMobile) {\n    bloc = \"d-flex flex-column mx-auto align-items-center\";\n  }\n  let containerForm;\n  if (isBigScreen) {\n    containerForm = \"d-flex  flex-wrap w-75 mx-auto\";\n  } else if (isTabletOrMobile) {\n    containerForm = \"d-flex flex-column mx-auto align-items-center mx-auto\";\n  }\n  let blocPhone;\n  if (isBigScreen) {\n    blocPhone = \"d-flex  flex-wrap w-100 mx-auto\";\n  } else if (isTabletOrMobile) {\n    blocPhone = \"\";\n  }\n  useEffect(() => {\n    fetchCities();\n  }, []);\n  return (\n    <>\n      <H1visiteur title=\"CREER COMPTE\" />\n      {error && <div>{error}</div>}\n      <form\n        id=\"form\"\n        onSubmit={handleSubmit(handleRegister)}\n        className=\"d-flex flex-column align-items-center\"\n      >\n        <div className={containerForm}>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"firstName\"\n              label=\"Prénom\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 80,\n                pattern: {\n                  value: /^[a-zA-Z-]{2,80}$/,\n                  message: \"Le format du prénom est invalide.\",\n                },\n              }}\n              id=\"firstName\"\n              value=\"\"\n              messRequired=\"Le prénom est obligatoire.\"\n              messMinLength=\"Le minimum est de 2 caractères.\"\n              messMaxLength=\"Le maximum est de 40 caractères\"\n              messPattern=\"Erreur dans le prénom\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"lastName\"\n              label=\"Nom\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 80,\n                pattern: {\n                  value: /^[a-zA-Z-]{2,80}$/,\n                  message: \"Le format du nom est invalide.\",\n                },\n              }}\n              id=\"lastName\"\n              value=\"\"\n              messRequired=\"Le nom est obligatoire.\"\n              messMinLength=\"Le minimum est de 2 caractères.\"\n              messMaxLength=\"Le maximum est de 40 caractères\"\n              messPattern=\"Erreur dans le prénom\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"adress\"\n              label=\"Adresse\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 255,\n                pattern: {\n                  value: /^\\d+\\s[A-Za-zÀ-ÖØ-öø-ÿ0-9\\s,.\\-']+$/,\n                  message: \"Le format de l'adresse est invalide.\",\n                },\n              }}\n              id=\"lastName\"\n              value=\"\"\n              messRequired=\"L'adresse' est obligatoire.\"\n              messMinLength=\"Le minimum est de 2 caractères.\"\n              messMaxLength=\"Le maximum est de 255 caractères\"\n              messPattern=\"Erreur dans l'adresse'\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <SelectInput\n              options={options}\n              label=\"Ville\"\n              id=\"cities\"\n              name=\"idCities\"\n              onchange={handleSelectChange}\n              className=\"border rounded px-3 py-2 selectInput border border-primary\"\n              validationSchema={{ required: true }} // Exemple de schéma de validation\n              register={register}\n            />\n          </div>\n          <div className={blocPhone}>\n            <Input\n              type=\"text\"\n              name=\"phone\"\n              label=\"Téléphone\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 10,\n                maxLength: 10,\n                pattern: {\n                  value: /^\\d{10}$/,\n                  message: \"Le format du téléphone est invalide.\",\n                },\n              }}\n              id=\"phone\"\n              value=\"\"\n              messRequired=\"Le téléphone est obligatoire.\"\n              messMinLength=\"Le minimum est de 10 caractères.\"\n              messMaxLength=\"Le maximum est de 10 caractères\"\n              messPattern=\"Erreur dans le téléphone\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 10,\n                maxLength: 370,\n                pattern: {\n                  value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,\n                  message: \"Le format de l'email est invalide.\",\n                },\n              }}\n              id=\"email\"\n              value=\"\"\n              messRequired=\"L'email est obligatoire.\"\n              messMinLength=\"Le minimum est 2 caractères.\"\n              messMaxLength=\"Le maximum est 50 caractères.\"\n              messPattern=\"Erreur dans l'email\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              label=\"Mot de passe\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 12,\n                pattern: {\n                  value:\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=[\\]{};:\"|,.<>/?~`])[A-Za-z\\d!@#$%^&*()_\\-+=$begin:math:display$$end:math:display${};:\"\\\\|,.<>/?~`]{12,}$/,\n                  message: \"Le format de l'email est invalide.\",\n                },\n              }}\n              id=\"password\"\n              value=\"\"\n              messRequired=\"Le mot de passe est obligatoire.\"\n              messMinLength=\"Le minimum est 8 caractères.\"\n              messMaxLength=\"\"\n              messPattern=\"Erreur dans le mot de passe\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n        </div>\n        <BtnSubmit\n          click={() => {}}\n          container_submit=\"m-5\"\n          classe=\"btn btn-success shadow\"\n          id=\"submit\"\n          value=\"S'inscrire\"\n        />\n      </form>\n    </>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\n\nconst Payment = () => {\n  return <div />;\n};\n\nexport default Payment;\n","import React from \"react\";\nimport { UseFormRegister, FieldErrors, FieldValues } from \"react-hook-form\";\nimport \"./textarea.css\";\n\ntype TextareaProps<T extends FieldValues> = {\n  label: string;\n  name: keyof T; // Associe le nom à une clé valide de T\n  register: UseFormRegister<T>;\n  validationSchema: object;\n  errors: FieldErrors<T>;\n  messRequired: string;\n  messMinLength: string;\n  messMaxLength: string;\n  messPattern: string;\n  messMax: string;\n  messMin: string;\n  messValidate: string;\n  labelcss: string;\n  classname: string;\n};\n\nconst Textarea = <T extends FieldValues>({\n  label,\n  name,\n  register,\n  validationSchema,\n  errors,\n  messRequired,\n  messMinLength,\n  messMaxLength,\n  messPattern,\n  messMax,\n  messMin,\n  messValidate,\n  labelcss,\n  classname,\n}: TextareaProps<T>) => {\n  return (\n    <>\n      <label htmlFor={String(name)} className={labelcss}>\n        {label}\n      </label>\n      <br />\n      <div className=\"h-24\">\n        <textarea\n          id={String(name)}\n          {...register(name as any, validationSchema)} // Cast à cause des types génériques\n          className={classname}\n        />\n        <div className=\"h-2.5\">\n          {errors[name]?.type === \"required\" && (\n            <div className=\"text-red-500\">{messRequired}</div>\n          )}\n          {errors[name]?.type === \"minLength\" && (\n            <div className=\"text-red-500\">{messMinLength}</div>\n          )}\n          {errors[name]?.type === \"maxLength\" && (\n            <div className=\"text-red-500\">{messMaxLength}</div>\n          )}\n          {errors[name]?.type === \"pattern\" && (\n            <div className=\"text-red-500\">{messPattern}</div>\n          )}\n          {errors[name]?.type === \"max\" && (\n            <div className=\"text-red-500\">{messMax}</div>\n          )}\n          {errors[name]?.type === \"min\" && (\n            <div className=\"text-red-500\">{messMin}</div>\n          )}\n          {errors[name]?.type === \"validate\" && (\n            <div className=\"text-red-500\">{messValidate}</div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Textarea;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useNavigate } from \"react-router-dom\";\nimport useAuthHeader from \"react-auth-kit/hooks/useAuthHeader\";\nimport useAuthUser from \"react-auth-kit/hooks/useAuthUser\";\nimport useSignIn from \"react-auth-kit/hooks/useSignIn\";\nimport useSignOut from \"react-auth-kit/hooks/useSignOut\";\nimport Input from \"../../components/input/Input\";\nimport BtnSubmit from \"../../components/btnsubmit/BtnSubmit\";\nimport SelectInput from \"../../components/selectinput/SelectInput\";\nimport H1visiteur from \"../../components/h1visiteur/H1visiteur\";\nimport Textarea from \"../../components/textarea/Textarea\";\nimport \"./account.css\";\n\ninterface UpdateForm {\n  id: number;\n  email: string;\n  password: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  citiesId: number;\n  adress: string;\n  comment: string;\n}\n\nconst Account = () => {\n  const authHeader = useAuthHeader();\n  const auth = useAuthUser<UpdateForm>();\n  const signIn = useSignIn();\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n  } = useForm<UpdateForm>();\n  const navigate = useNavigate();\n  const [options, setOptions] = useState<\n    { value: string | number; label: string }[]\n  >([]);\n  const handleSelectChange = (option: {\n    value: string | number;\n    label: string;\n  }) => {\n    setOptions([option]);\n    setValue(\"citiesId\", option.value as number);\n  };\n  const fetchCities = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/cities/select`,\n      );\n      const cities = await response.json();\n      const formattedCities = cities.map(\n        (city: { value: number; label: string }) => ({\n          value: city.value,\n          label: city.label,\n        }),\n      );\n      setOptions(formattedCities);\n    } catch (error) {\n      setOptions([]);\n    }\n  };\n\n  const [error, setError] = useState<string | null>(null);\n\n  const handleUpdate: SubmitHandler<UpdateForm> = async (data) => {\n    try {\n      if (!auth) {\n        setError(\"Erreur : impossible de récupérer les données utilisateur\");\n        return;\n      }\n\n      const userId = auth.id;\n\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/user/update/${userId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `${authHeader}`,\n          },\n          body: JSON.stringify(data),\n        },\n      );\n\n      if (!response.ok) {\n        setError(\"erreur dans \");\n        return;\n      }\n      const responseData = await response.json(); // Traite la réponse JSON\n\n      const { token } = responseData;\n      const parts = token.split(\".\");\n      const encodedPayload = parts[1]; // Le payload encodé\n      const decodedPayload = JSON.parse(atob(encodedPayload));\n      // Passer les données utilisateur à signIn\n      const success = signIn({\n        auth: {\n          token,\n          type: \"Bearer\",\n        },\n        userState: {\n          firstName: decodedPayload.firstName,\n          lastName: decodedPayload.lastName,\n          email: decodedPayload.email,\n          id: decodedPayload.id,\n          roles: decodedPayload.roles,\n          phone: decodedPayload.phone,\n          cities: decodedPayload.cities,\n          adress: decodedPayload.adress,\n        },\n      });\n\n      if (!success) {\n        setError(\"Erreur lors de la mise à jour de l'authentification.\");\n      }\n      alert(\"Compte modifier.\");\n      //\n    } catch (e) {\n      navigate(\"\");\n    }\n  };\n  let bloc;\n  if (isBigScreen) {\n    bloc = \"d-flex  flex-wrap w380\";\n  } else if (isTabletOrMobile) {\n    bloc = \"d-flex flex-column mx-auto align-items-center\";\n  }\n  let containerForm;\n  if (isBigScreen) {\n    containerForm = \"d-flex  flex-wrap w-75 mx-auto\";\n  } else if (isTabletOrMobile) {\n    containerForm = \"d-flex flex-column mx-auto align-items-center mx-auto\";\n  }\n  let blocPhone;\n  if (isBigScreen) {\n    blocPhone = \"d-flex  flex-wrap w-100 mx-auto\";\n  } else if (isTabletOrMobile) {\n    blocPhone = \"\";\n  }\n  useEffect(() => {\n    fetchCities();\n  }, []);\n\n  const signOut = useSignOut();\n  return (\n    <>\n      <H1visiteur title=\"MON COMPTE\" />\n      <div className=\"d-flex justify-content-end  mt-md-5\">\n        <button\n          className=\"logout\"\n          type=\"button\"\n          aria-label=\"Submit form\"\n          onClick={() => {\n            signOut();\n            navigate(\"/\");\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" || e.key === \" \") {\n              signOut();\n            }\n          }}\n        >\n          Se déconnecter\n        </button>\n      </div>\n      {error && <div role=\"alert\">{error}</div>}\n      <form\n        id=\"form\"\n        onSubmit={handleSubmit(handleUpdate)}\n        className=\"d-flex flex-column align-items-center\"\n      >\n        <div className={containerForm}>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"firstName\"\n              label=\"Prénom\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 80,\n                pattern: {\n                  value: /^[a-zA-Z-]{2,80}$/,\n                  message: \"Le format du prénom est invalide.\",\n                },\n              }}\n              id=\"firstName\"\n              value={auth?.firstName}\n              messRequired=\"Le prénom est obligatoire.\"\n              messMinLength=\"Le minimum est de 2 caractères.\"\n              messMaxLength=\"Le maximum est de 40 caractères\"\n              messPattern=\"Erreur dans le prénom\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"lastName\"\n              label=\"Nom\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 80,\n                pattern: {\n                  value: /^[a-zA-Z-]{2,80}$/,\n                  message: \"Le format du nom est invalide.\",\n                },\n              }}\n              id=\"lastName\"\n              value={auth?.lastName}\n              messRequired=\"Le nom est obligatoire.\"\n              messMinLength=\"Le minimum est de 2 caractères.\"\n              messMaxLength=\"Le maximum est de 40 caractères\"\n              messPattern=\"Erreur dans le prénom\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"adress\"\n              label=\"Adresse\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 2,\n                maxLength: 255,\n                pattern: {\n                  value: /^\\d+\\s[A-Za-zÀ-ÖØ-öø-ÿ0-9\\s,.\\-']+$/,\n                  message: \"Le format de l'adresse est invalide.\",\n                },\n              }}\n              id=\"lastName\"\n              value={auth?.adress}\n              messRequired=\"L'adresse' est obligatoire.\"\n              messMinLength=\"Le minimum est de 2 caractères.\"\n              messMaxLength=\"Le maximum est de 255 caractères\"\n              messPattern=\"Erreur dans l'adresse'\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <SelectInput\n              options={options}\n              label=\"Ville\"\n              id=\"citiesId\"\n              name=\"citiesId\"\n              onchange={handleSelectChange}\n              className=\"border rounded px-3 py-2 selectInput border border-primary\"\n              validationSchema={{ required: true }} // Exemple de schéma de validation\n              register={register}\n            />\n          </div>\n          <div className={blocPhone}>\n            <Input\n              type=\"text\"\n              name=\"phone\"\n              label=\"Téléphone\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 10,\n                maxLength: 10,\n                pattern: {\n                  value: /^\\d{10}$/,\n                  message: \"Le format du téléphone est invalide.\",\n                },\n              }}\n              id=\"phone\"\n              value={auth?.phone}\n              messRequired=\"Le téléphone est obligatoire.\"\n              messMinLength=\"Le minimum est de 10 caractères.\"\n              messMaxLength=\"Le maximum est de 10 caractères\"\n              messPattern=\"Erreur dans le téléphone\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 10,\n                maxLength: 370,\n                pattern: {\n                  value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,\n                  message: \"Le format de l'email est invalide.\",\n                },\n              }}\n              id=\"email\"\n              value={auth?.email}\n              messRequired=\"L'email est obligatoire.\"\n              messMinLength=\"Le minimum est 2 caractères.\"\n              messMaxLength=\"Le maximum est 50 caractères.\"\n              messPattern=\"Erreur dans l'email\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              label=\"Mot de passe\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: true,\n                minLength: 8,\n                pattern: {\n                  value:\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=[\\]{};:\"|,.<>/?~`])[A-Za-z\\d!@#$%^&*()_\\-+=$begin:math:display$$end:math:display${};:\"\\\\|,.<>/?~`]{8,}$/,\n                  message: \"Le format de l'email est invalide.\",\n                },\n              }}\n              id=\"password\"\n              value=\"\"\n              messRequired=\"Le mot de passe est obligatoire.\"\n              messMinLength=\"Le minimum est 8 caractères.\"\n              messMaxLength=\"\"\n              messPattern=\"Erreur dans le mot de passe\"\n              container_input=\"d-flex flex-column\"\n              required\n              classe=\"border rounded px-3 py-2 border border-primary\"\n            />\n          </div>\n          <div className={bloc}>\n            <Textarea<UpdateForm>\n              label=\"Commentaire\"\n              name=\"comment\"\n              register={register}\n              validationSchema={{\n                required: false,\n                minLength: 0,\n                maxLength: 80,\n                pattern: {\n                  value: /^[a-zA-Z-]{0,255}$/,\n                  message: \"Le format du commentaire est invalide.\",\n                },\n              }}\n              errors={errors}\n              messRequired=\"Le commentaire est obligatoire.\"\n              messMinLength=\"Le minimum est de 0 caractères.\"\n              messMaxLength=\"Le maximum est de 255 caractères.\"\n              messPattern=\"Erreur dans le commentaire\"\n              messMax=\"\"\n              messMin=\"\"\n              messValidate=\"\"\n              labelcss=\"label-class\"\n              classname=\"textarea-class  border border-primary \"\n            />\n          </div>\n        </div>\n        <BtnSubmit\n          click={() => {}}\n          container_submit=\"m-5\"\n          classe=\"btn btn-success shadow\"\n          id=\"submit\"\n          value=\"MODIFIER\"\n        />\n      </form>\n    </>\n  );\n};\n\nexport default Account;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./oneorder.css\";\n\ninterface Order {\n  id: number;\n  date: string | Date; // Remplacez `unknown` par `string | Date` si vous attendez une date sous forme de chaîne ou d'objet Date\n  states: string;\n  userId: number;\n}\n\nconst OneOrder: React.FC<Order> = ({ id, date, states, userId }) => {\n  const formatDate = (dateInput: string | Date) => {\n    const d = typeof dateInput === \"string\" ? new Date(dateInput) : dateInput;\n    const day = d.getDate();\n    const month = d.getMonth() + 1; // Les mois commencent à 0\n    const year = d.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  return (\n    <div\n      className=\"border border-primary border-2 containerOneOrder p-2\"\n      key={id}\n    >\n      <h2 className=\"titleOneOrder\">COMMANDE N° {id}</h2>\n      <p className=\"paragrapheOneOrder\">\n        <strong>\n          DATE : {formatDate(date)}\n          <br />\n          État : {states}\n        </strong>\n      </p>\n      <div className=\"d-flex justify-content-end\">\n        <NavLink\n          className=\"detail\"\n          to={`/client/orders/detail/${userId}/${id}`}\n        >\n          DETAIL\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default OneOrder;\n","import React, { useEffect, useState } from \"react\";\nimport useAuthHeader from \"react-auth-kit/hooks/useAuthHeader\";\nimport useAuthUser from \"react-auth-kit/hooks/useAuthUser\";\nimport H1visiteur from \"../../components/h1visiteur/H1visiteur\";\nimport OneOrder from \"../../components/oneorder/OneOrder\";\n\ninterface Order {\n  id: number;\n  states: string;\n  userId: number;\n  isCreatedAt: {\n    date: string;\n    timezone_type: number;\n    timezone: string;\n  };\n}\n\ninterface ApiResponse {\n  result: Order[];\n}\n\ninterface AuthUser {\n  id: number;\n  email: string;\n  firstName: string;\n  lastName: string;\n  roles: string[];\n}\n\nconst BoardConsumer = () => {\n  const [error, setError] = useState<string | null>(null);\n  const [orders, setOrders] = useState<Order[]>([]);\n  const authHeader = useAuthHeader();\n  const auth = useAuthUser<AuthUser>(); // auth est une fonction\n  const fetchOrders = async () => {\n    if (!auth) {\n      setError(\"Erreur : impossible de récupérer les données utilisateur\");\n      return;\n    }\n    const userId = auth.id;\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/orders/listing/${userId}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `${authHeader}`,\n          },\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Erreur de chargement.\");\n      }\n\n      const data: ApiResponse = await response.json();\n      setOrders(data.result);\n    } catch (e) {\n      setError(e instanceof Error ? e.message : \"An unknown error occurred\");\n    }\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  return (\n    <>\n      <H1visiteur title=\"BONJOUR\" />\n\n      {orders.length > 0 ? (\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {orders.map((order) => (\n            <OneOrder\n              key={order.id}\n              id={order.id}\n              date={order.isCreatedAt.date}\n              states={order.states}\n              userId={order.userId}\n            />\n          ))}\n        </div>\n      ) : (\n        error && <p>{error}</p>\n      )}\n    </>\n  );\n};\n\nexport default BoardConsumer;\n","import React from \"react\";\nimport \"./detailorder.css\";\n\ninterface Order {\n  name: string;\n  price: string;\n  quantity: number;\n}\n\nconst DetailOrder: React.FC<Order> = ({ name, price, quantity }) => {\n  function ajouterTexteAvantDeuxDerniers(chaine: string) {\n    if (chaine.length < 2) {\n      return `0,${chaine}€`;\n    }\n    return `${chaine.slice(0, -2)}€${chaine.slice(-2)}`;\n  }\n  const p = ajouterTexteAvantDeuxDerniers(price);\n  return (\n    <div className=\"border border-primary w380 ps-3\">\n      <h2 className=\"text-center\">{name}</h2>\n      <div>\n        <p>Quantité : {quantity}</p>\n        <p>Prix : {p}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailOrder;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAuthHeader from \"react-auth-kit/hooks/useAuthHeader\";\nimport { useMediaQuery } from \"react-responsive\";\nimport H1visiteur from \"../../components/h1visiteur/H1visiteur\";\nimport Detail from \"../../components/detailorder/DetailOrder\";\nimport \"./detailorder.css\";\n\ninterface Product {\n  id: number;\n  name: string;\n  price: string;\n  quantity: number;\n}\n\ninterface Order {\n  id: number;\n  userId: number;\n  states: string;\n  isCreatedAt: Date;\n  products: Product[];\n}\n\nconst DetailOrder = () => {\n  const authHeader = useAuthHeader();\n  const { id, userId } = useParams<{ id: string; userId: string }>();\n  const [error, setError] = useState(\"\");\n  const [order, setOrder] = useState<Order | null>(null);\n  const [isCreated, setIsCreated] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [states, setStates] = useState(\"\");\n  const formatDate = (dateInput: string | Date) => {\n    const d = typeof dateInput === \"string\" ? new Date(dateInput) : dateInput;\n    const day = d.getDate();\n    const month = d.getMonth() + 1; // Les mois commencent à 0\n    const year = d.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n  const fetchOrder = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/orders/detail/${userId}/${id}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `${authHeader}`,\n          },\n        },\n      );\n\n      if (!response.ok) {\n        setError(\"Failed to fetch order\");\n        return;\n      }\n      const responseData = await response.json();\n      if (responseData.result) {\n        const fetchedOrder: Order = responseData.result;\n        setOrder(fetchedOrder);\n        const d = formatDate(responseData.result[0].isCreatedAt.date);\n        setIsCreated(d);\n        setStates(responseData.result[0].states);\n        const totalQuantity = fetchedOrder.products.reduce(\n          (sum, product) => sum + product.quantity,\n          0,\n        );\n        setAmount(totalQuantity);\n      } else {\n        setError(\"Order not found\");\n      }\n    } catch (e) {\n      setError(`Error fetching order: ${e}`);\n    }\n  };\n\n  useEffect(() => {\n    fetchOrder();\n  }, []);\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1225px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let className;\n  if (isBigScreen) {\n    className = \"d-flex flex-row flex-wrap mx-auto justify-content-evenly\";\n  } else if (isTabletOrMobile) {\n    className = \"d-flex flex-column mx-auto\";\n  }\n  return (\n    <>\n      <H1visiteur title={`DETAIL COMMANDE N° ${id}`} />\n      {error && <p>{error}</p>}\n      {order ? (\n        <div>\n          <p>DATE : {isCreated}</p>\n          <p>Nombre de produits : {amount}</p>\n          <p>ETAT : {states}</p>\n          <div className={className}>\n            {order.products.map((product) => (\n              <Detail\n                key={product.id}\n                name={product.name}\n                price={product.price}\n                quantity={product.quantity}\n              />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <p>Loading order details...</p>\n      )}\n    </>\n  );\n};\n\nexport default DetailOrder;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport {\n  Navigate,\n  RouterProvider,\n  createBrowserRouter,\n} from \"react-router-dom\";\nimport useAuthUser from \"react-auth-kit/hooks/useAuthUser\";\nimport createStore from \"react-auth-kit/createStore\";\nimport AuthProvider from \"react-auth-kit\";\nimport useAuthHeader from \"react-auth-kit/hooks/useAuthHeader\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport Admin from \"./Admin\";\nimport Consumer from \"./Consumer\";\n// pages\nimport Accueil from \"./pages/accueil/Accueil\";\nimport ListingProducts from \"./pages/listingproducts/ListingProducts\";\nimport LoginClient from \"./pages/loginclient/LoginClient\";\nimport Cart from \"./pages/cart/cart/Cart\";\nimport AppError from \"./AppError\";\nimport Summary from \"./pages/cart/summary/Summary\";\nimport Register from \"./pages/register/Register\";\nimport Payment from \"./pages/cart/payment/Payment\";\nimport Account from \"./pages/account/Account\";\nimport BoardConsumer from \"./pages/boardconsumer/BoardConsumer\";\nimport DetailOrder from \"./pages/detailorder/DetailOrder\";\n\nconst store = createStore({\n  authName: \"_auth\",\n  authType: \"cookie\",\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === \"https:\",\n});\n\n// Configuration de PrivateRoute\ninterface PrivateRouteProps {\n  children: React.ReactNode;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const auth = useAuthUser();\n  const token = useAuthHeader();\n\n  if (auth && token) {\n    try {\n      const tokenValue = token; // Appel de la fonction token\n      if (tokenValue) {\n        const user = JSON.parse(atob(tokenValue.split(\".\")[1])); // Décodage du token\n        if (user?.roles.includes(\"ROLE_ADMIN\")) {\n          return <>{children}</>;\n        }\n      }\n    } catch (error) {\n      return <AppError />;\n    }\n  }\n\n  // Redirection si non connecté ou non autorisé\n  return <Navigate to=\"/\" replace />;\n};\n\nconst PrivateConsumer: React.FC<PrivateRouteProps> = ({ children }) => {\n  const auth = useAuthUser();\n  const token = useAuthHeader();\n\n  if (auth && token) {\n    try {\n      const tokenValue = token; // Appel de la fonction token\n      if (tokenValue) {\n        const user = JSON.parse(atob(tokenValue.split(\".\")[1])); // Décodage du token\n        if (user?.roles?.includes(\"ROLE_CLIENT\")) {\n          return <>{children}</>;\n        }\n      }\n    } catch (error) {\n      return <AppError />;\n    }\n  }\n\n  // Redirection si non connecté ou non autorisé\n  return <Navigate to=\"/se-connecter\" replace />;\n};\nconst Login: React.FC<PrivateRouteProps> = ({ children }) => {\n  const auth = useAuthUser();\n  let isConnected = true; // Le type est inféré automatiquement\n  if (!auth) {\n    isConnected = false;\n  }\n  return isConnected ? (\n    <Navigate to=\"/client/tableau-de-bord\" />\n  ) : (\n    <>{children}</>\n  );\n};\n// Configuration du router\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n    errorElement: <AppError />,\n    children: [\n      {\n        path: \"/\",\n        element: <Accueil />,\n      },\n      {\n        path: \"produits/liste\",\n        element: <ListingProducts />,\n      },\n      {\n        path: \"se-connecter\",\n        element: (\n          <Login>\n            <LoginClient />\n          </Login>\n        ),\n      },\n      {\n        path: \"/panier/detail\",\n        element: <Cart />,\n      },\n      {\n        path: \"/panier/recapitulatif\",\n        element: <Summary />,\n      },\n      {\n        path: \"/inscription\",\n        element: <Register />,\n      },\n    ],\n  },\n  {\n    path: \"/admin\",\n    element: (\n      <PrivateRoute>\n        <Admin />\n      </PrivateRoute>\n    ),\n  },\n  {\n    path: \"/client\",\n    element: (\n      <PrivateConsumer>\n        <Consumer />\n      </PrivateConsumer>\n    ),\n    children: [\n      {\n        path: \"commande/paiement\",\n        element: <Payment />,\n      },\n      {\n        path: \"mon-compte\",\n        element: <Account />,\n      },\n      {\n        path: \"tableau-de-bord\",\n        element: <BoardConsumer />,\n      },\n      {\n        path: \"orders/detail/:userId/:id\",\n        element: <DetailOrder />,\n      },\n    ],\n  },\n]);\n\n// Rendu de l'application\nconst rootElement = document.getElementById(\"root\");\nif (!rootElement) {\n  throw new Error(\"L'élément racine n'a pas été trouvé dans le DOM.\");\n}\nconst root = createRoot(rootElement);\n\nroot.render(\n  <React.StrictMode>\n    <AuthProvider store={store}>\n      <RouterProvider router={router} />\n    </AuthProvider>\n  </React.StrictMode>,\n);\n\n// Mesurer les performances (optionnel)\nreportWebVitals();\n"],"names":["exports","mediaQuery","values","parseQuery","some","query","inverse","typeMatch","type","expressionsMatch","expressions","every","expression","feature","modifier","expValue","value","toLowerCase","toPx","toDpi","toDecimal","parseInt","RE_MEDIA_QUERY","RE_MQ_EXPRESSION","RE_MQ_FEATURE","RE_LENGTH_UNIT","RE_RESOLUTION_UNIT","split","map","captures","trim","match","parsed","ratio","numbers","decimal","Number","resolution","parseFloat","String","length","module","assign","target","i","arguments","source","key","init","converter","defaultAttributes","set","name","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","cookie","write","get","cookies","jar","parts","slice","join","found","read","e","Object","create","remove","withAttributes","this","withConverter","freeze","path","factory","staticMatch","require","dynamicMatch","window","matchMedia","Mql","forceStatic","mql","self","update","evt","matches","media","call","addListener","listener","removeListener","dispose","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","defineProperty","useReactAuthKit","context","_react","useContext","AuthKitContext","_errors","AuthError","createContext","_typeof","o","Symbol","iterator","constructor","prototype","r","__esModule","default","t","_getRequireWildcardCache","has","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","_interopRequireWildcard","obj","_AuthContext","_hooks","_reducers","_jsxRuntime","WeakMap","_ref","store","children","tokenObject","refresh","useInterval","_tokenObject$value$au","_tokenObject$value$re","refreshApiCallback","authToken","auth","token","authUserState","userState","refreshToken","then","result","isSuccess","doRefresh","doSignOut","catch","isSignIn","interval","jsx","Provider","_objectSpread","_defineProperty","_jsCookie","_rxjs","authStorageName","authStorageType","refreshTokenName","debug","cookieDomain","cookieSecure","_this","next","error","complete","authSubject","subscribe","data","log","console","dir","undefined","exp","getExpireDateTime","isUsingRefreshToken","refreshExpireTime","authValue","initialCookieToken_","initialLSToken_","authTokenType","authStorageTypeName","stateCookie","stateStorageName","checkTokenExist_","localStorage","getItem","concat","authState","refreshTokenExpiresAt","expiresAt","removeAllToken","JSON","parse","replaceAll","removeAuth","base64","jsonPayload","atob","c","charCodeAt","toString","jwtData","parseJwt","d","setUTCSeconds","setAuthToken","setRefreshToken","removeRefresh","domain","secure","stringify","setItem","removeAllCookieToken_","removeAllLSToken_","removeItem","removeAuthCookie","removeAuthToken","removeRefreshCookie","removeRefreshLocalStorage","msg","_len","optionalParams","Array","_key","initialToken_","BehaviorSubject","syncTokens","params","authType","authName","_RxTokenObject","message","super","_utils","isAuthenticated","signInConfig","doSignIn","_exportNames","enumerable","_AuthProvider","keys","forEach","callback","delay","savedCallback","useRef","intervalRef","useEffect","current","tick","setInterval","clearTimeout","refreshTokenParam","ret","newAuthToken","newAuthTokenType","newAuthUserState","newRefreshToken","signInParams","aa","ca","p","b","da","Set","ea","fa","ha","add","ia","createElement","ja","ka","la","ma","v","f","g","acceptsBooleans","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","toUpperCase","ta","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","A","Ma","stack","Na","Oa","prepareStackTrace","Reflect","construct","l","h","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","configurable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","D","of","pf","qf","rf","random","sf","bind","capture","passive","J","x","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","Hf","Promise","Jf","queueMicrotask","resolve","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","Ng","Og","index","Pg","Qg","Rg","implementation","Sg","Tg","q","y","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","digest","Ki","Li","Mi","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","Fragment","jsxs","setState","forceUpdate","_status","_result","Children","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","_currentValue2","_threadCount","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","Observable_1","Observable","ConnectableObservable_1","ConnectableObservable","observable_1","observable","animationFrames_1","animationFrames","Subject_1","Subject","BehaviorSubject_1","ReplaySubject_1","ReplaySubject","AsyncSubject_1","AsyncSubject","asap_1","asap","asapScheduler","async_1","async","asyncScheduler","queue_1","queueScheduler","animationFrame_1","animationFrame","animationFrameScheduler","VirtualTimeScheduler_1","VirtualTimeScheduler","VirtualAction","Scheduler_1","Scheduler","Subscription_1","Subscription","Subscriber_1","Subscriber","Notification_1","Notification","NotificationKind","pipe_1","pipe","noop_1","noop","identity_1","identity","isObservable_1","isObservable","lastValueFrom_1","lastValueFrom","firstValueFrom_1","firstValueFrom","ArgumentOutOfRangeError_1","ArgumentOutOfRangeError","EmptyError_1","EmptyError","NotFoundError_1","NotFoundError","ObjectUnsubscribedError_1","ObjectUnsubscribedError","SequenceError_1","SequenceError","timeout_1","TimeoutError","UnsubscriptionError_1","UnsubscriptionError","bindCallback_1","bindCallback","bindNodeCallback_1","bindNodeCallback","combineLatest_1","combineLatest","concat_1","connectable_1","connectable","defer_1","defer","empty_1","empty","forkJoin_1","forkJoin","from_1","from","fromEvent_1","fromEvent","fromEventPattern_1","fromEventPattern","generate_1","generate","iif_1","iif","interval_1","merge_1","merge","never_1","never","of_1","onErrorResumeNext_1","onErrorResumeNext","pairs_1","pairs","partition_1","partition","race_1","race","range_1","throwError_1","throwError","timer_1","timer","using_1","using","zip_1","zip","scheduled_1","scheduled","empty_2","EMPTY","never_2","NEVER","__exportStar","config_1","config","audit_1","audit","auditTime_1","auditTime","buffer_1","buffer","bufferCount_1","bufferCount","bufferTime_1","bufferTime","bufferToggle_1","bufferToggle","bufferWhen_1","bufferWhen","catchError_1","catchError","combineAll_1","combineAll","combineLatestAll_1","combineLatestAll","combineLatestWith_1","combineLatestWith","concatAll_1","concatAll","concatMap_1","concatMap","concatMapTo_1","concatMapTo","concatWith_1","concatWith","connect_1","connect","count_1","debounce_1","debounce","debounceTime_1","debounceTime","defaultIfEmpty_1","defaultIfEmpty","delay_1","delayWhen_1","delayWhen","dematerialize_1","dematerialize","distinct_1","distinct","distinctUntilChanged_1","distinctUntilChanged","distinctUntilKeyChanged_1","distinctUntilKeyChanged","elementAt_1","elementAt","endWith_1","endWith","every_1","exhaust_1","exhaust","exhaustAll_1","exhaustAll","exhaustMap_1","exhaustMap","expand_1","expand","filter_1","filter","finalize_1","finalize","find_1","find","findIndex_1","findIndex","first_1","first","groupBy_1","groupBy","ignoreElements_1","ignoreElements","isEmpty_1","isEmpty","last_1","map_1","mapTo_1","mapTo","materialize_1","materialize","max_1","max","mergeAll_1","mergeAll","flatMap_1","flatMap","mergeMap_1","mergeMap","mergeMapTo_1","mergeMapTo","mergeScan_1","mergeScan","mergeWith_1","mergeWith","min_1","multicast_1","multicast","observeOn_1","observeOn","onErrorResumeNextWith_1","onErrorResumeNextWith","pairwise_1","pairwise","pluck_1","pluck","publish_1","publish","publishBehavior_1","publishBehavior","publishLast_1","publishLast","publishReplay_1","publishReplay","raceWith_1","raceWith","reduce_1","reduce","repeat_1","repeatWhen_1","repeatWhen","retry_1","retry","retryWhen_1","retryWhen","refCount_1","refCount","sample_1","sample","sampleTime_1","sampleTime","scan_1","scan","sequenceEqual_1","sequenceEqual","share_1","share","shareReplay_1","shareReplay","single_1","single","skip_1","skip","skipLast_1","skipLast","skipUntil_1","skipUntil","skipWhile_1","skipWhile","startWith_1","startWith","subscribeOn_1","subscribeOn","switchAll_1","switchAll","switchMap_1","switchMap","switchMapTo_1","switchMapTo","switchScan_1","switchScan","take_1","take","takeLast_1","takeLast","takeUntil_1","takeUntil","takeWhile_1","takeWhile","tap_1","tap","throttle_1","throttle","throttleTime_1","throttleTime","throwIfEmpty_1","throwIfEmpty","timeInterval_1","timeInterval","timeout_2","timeout","timeoutWith_1","timeoutWith","timestamp_1","timestamp","toArray_1","window_1","windowCount_1","windowCount","windowTime_1","windowTime","windowToggle_1","windowToggle","windowWhen_1","windowWhen","withLatestFrom_1","withLatestFrom","zipAll_1","zipAll","zipWith_1","zipWith","_super","_value","_hasValue","_isComplete","__extends","_checkFinalizedStatuses","subscriber","_a","hasError","thrownError","isStopped","_subscribe","subscription","closed","_throwIfClosed","isFunction_1","kind","hasValue","observe","observer","observeNotification","do","nextHandler","errorHandler","completeHandler","accept","nextOrObserver","isFunction","toObservable","TypeError","createNext","createError","createComplete","completeNotification","notification","_d","_b","_c","createNotification","errorContext_1","lift","operator","observerOrNext","isObserver","isSubscription","SafeSubscriber","errorContext","_trySubscribe","sink","promiseCtor","getPromiseCtor","reject","unsubscribe","operations","_i","pipeFromArray","toPromise","dateTimestampProvider_1","_bufferSize","_windowTime","_timestampProvider","dateTimestampProvider","_buffer","_infiniteTimeWindow","_trimBuffer","_innerSubscribe","copy","adjustedBufferSize","schedulerActionCtor","schedule","work","arrRemove_1","currentObservers","observers","subject","AnonymousSubject","__values","EMPTY_SUBSCRIPTION","arrRemove","asObservable","destination","reportUnhandledError_1","NotificationFactories_1","timeoutProvider_1","EMPTY_OBSERVER","handleStoppedNotification","nextNotification","_next","errorNotification","_error","COMPLETE_NOTIFICATION","_complete","_bind","Function","fn","thisArg","ConsumerObserver","partialObserver","handleUnhandledError","context_1","useDeprecatedNextContext","useDeprecatedSynchronousErrorHandling","captureError","reportUnhandledError","onStoppedNotification","timeoutProvider","initialTeardown","_parentage","_finalizers","errors","_parentage_1","_parentage_1_1","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","__spreadArray","__read","teardown","_hasParent","_addParent","parent","_removeParent","onUnhandledError","hasConfig","OperatorSubscriber_1","lift_1","subjectFactory","_subject","_refCount","_connection","hasLift","getSubject","_teardown","connection","subject_1","createOperatorSubscriber","bindCallbackInternals_1","callbackFunc","resultSelector","scheduler","bindCallbackInternals","isScheduler_1","mapOneOrManyArgs_1","isNodeStyle","isScheduler","args","mapOneOrManyArgs","uninitialized","subs","isAsync_1","isComplete_1","results","argsArgArrayOrObject_1","args_1","createObject_1","executeSchedule_1","combineLatestInit","observables","valueTransform","maybeSchedule","active","remainingFirstValues","hasFirstValue","execute","executeSchedule","popScheduler","popResultSelector","argsArgArrayOrObject","createObject","DEFAULT_CONFIG","connector","resetOnDisconnect","innerFrom_1","observableFactory","innerFrom","performanceTimestampProvider_1","animationFrameProvider_1","animationFramesFactory","timestampProvider","provider","performanceTimestampProvider","run","animationFrameProvider","requestAnimationFrame","elapsed","cancelAnimationFrame","DEFAULT_ANIMATION_FRAMES","emptyScheduled","sources","remainingCompletions","remainingEmissions","sourceIndex","isArrayLike_1","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","toCommonHandlerRegistry","eventName","methodName","handler","isEventTarget","isNodeStyleEventEmitter","on","off","isJQueryStyleEventEmitter","isArrayLike","subTarget","addHandler","removeHandler","retValue","subscribable","scheduleIterable_1","initialStateOrOptions","condition","iterate","resultSelectorOrScheduler","initialState","gen","sent","scheduleIterable","trueResult","falseResult","isPromise_1","isInteropObservable_1","isAsyncIterable_1","throwUnobservableError_1","isIterable_1","isReadableStreamLike_1","fromInteropObservable","obs","fromArrayLike","fromPromise","promise","fromIterable","iterable","iterable_1","iterable_1_1","fromAsyncIterable","asyncIterable","asyncIterable_1","__asyncValues","asyncIterable_1_1","process","fromReadableStreamLike","readableStream","readableStreamLikeToAsyncGenerator","isInteropObservable","isPromise","isAsyncIterable","isIterable","isReadableStreamLike","createInvalidObservableTypeError","period","concurrent","popNumber","argsOrArgArray_1","nextSources","argsOrArgArray","subscribeNext","nextSource","innerSubscriber","OperatorSubscriber","entries","not_1","predicate","not","raceInit","subscriptions","s","errorOrErrorFactory","errorFactory","isDate_1","dueTime","intervalOrScheduler","intervalDuration","due","isValidDate","resourceFactory","resource","buffers","completed","onNext","onComplete","onFinalize","shouldUnsubscribe","closed_1","durationSelector","operate","lastValue","durationSubscriber","isComplete","endDuration","cleanupDuration","duration","closingNotifier","currentBuffer","bufferSize","startBufferEvery","toEmit","buffers_1","buffers_1_1","toEmit_1","toEmit_1_1","buffers_2","buffers_2_1","bufferTimeSpan","otherArgs","bufferCreationInterval","maxBufferSize","bufferRecords","restartOnEmit","emit","record","startBuffer","record_1","bufferTimeSubscriber","recordsCopy","recordsCopy_1","recordsCopy_1_1","openings","closingSelector","openValue","closingSubscription","closingSubscriber","openBuffer","selector","handledResult","innerSub","syncUnsub","joinAllInternals_1","project","joinAllInternals","otherSources","innerObservable","fromSubscribable_1","fromSubscribable","total","activeTask","lastTime","emitWhenIdle","targetTime","delayDurationSelector","subscriptionDelay","keySelector","flushes","distinctKeys","clear","defaultCompare","comparator","previousKey","currentKey","hasDefaultValue","outerValue","mergeInternals_1","mergeInternals","createFind","elementOrOptions","groups","notify","handleError","consumer","activeGroups","teardownAttempted","groupBySourceSubscriber","key_1","group_1","grouped","groupSubject","groupSubscriber","createGroupedObservable","durationSubscriber_1","joinFn","comparer","onBeforeNext","innerSubScheduler","additionalFinalizer","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","accumulator","seed","subjectOrSubjectFactory","prev","hasPrev","properties","currentProp","selectorOrScheduler","scanInternals_1","scanInternals","refCounter","sharedConnection","conn","countOrConfig","sourceSub","soFar","resubscribe","notifier","notifierSubscriber_1","subscribeToSource","completions$","syncResub","isNotifierComplete","isMainComplete","subscribeForRepeatWhen","configOrCount","resetOnSuccess","subscribeForRetry","resub_1","errors$","subscribeForRetryWhen","hasSeed","emitOnNext","emitBeforeComplete","hasState","compareTo","aState","bState","isEqual","createSubscriber","selfState","otherState","sequenceEqualSubscriber","handleReset","reset","onSubscriber","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","resetConnection","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","dest","configOrBufferSize","singleValue","seenValue","_","skipCount","ring","seen","valueIndex","oldValue","taking","skipSubscriber","innerIndex","outerIndex","buffer_1_1","inclusive","tapObserver","isUnsub","leading","trailing","sendValue","throttled","endThrottling","send","cleanupThrottling","startThrottle","duration$","defaultErrorFactory","TimeInterval","createErrorClass_1","timeoutErrorFactory","info","createErrorClass","schedulerArg","each","with","_with","originalSourceSubscription","timerSubscription","startTimer","withObservable","arrReducer","arr","windowBoundaries","windowSubject","windowSize","startWindowEvery","startEvery","windows","windows_1","windows_1_1","window_2","windowTimeSpan","windowCreationInterval","maxWindowSize","windowRecords","restartOnClose","closeWindow","startWindow","loop","terminate","windowsCopy","windowsCopy_1","windowsCopy_1_1","openWindow","inputs","len","otherValues","ready","otherInputs","asyncIterator","iterator_1","scheduleAsyncIterable_1","scheduleAsyncIterable","scheduleObservable_1","schedulePromise_1","scheduleArray_1","scheduleReadableStreamLike_1","scheduleObservable","scheduleArray","schedulePromise","scheduleReadableStreamLike","Action","AsyncAction_1","AnimationFrameAction","requestAsyncId","actions","_scheduled","flush","recycleAsyncId","AsyncAction","AnimationFrameScheduler","_active","flushId","AsyncScheduler","immediateProvider_1","AsapAction","immediateProvider","setImmediate","clearImmediate","AsapScheduler","Action_1","intervalProvider_1","_id","intervalProvider","_scheduler","clearInterval","_execute","_delay","errorValue","errored","SchedulerAction","QueueAction","QueueScheduler","maxFrames","frame","frameTimeFactor","isFinite","sort","sortActions","AnimationFrameAction_1","AnimationFrameScheduler_1","request","cancel","delegate","handle","AsapAction_1","AsapScheduler_1","AsyncScheduler_1","Immediate_1","Immediate","performance","QueueAction_1","QueueScheduler_1","getSymbolIterator","resolved","nextHandle","activeHandles","findAndClearHandle","pop","getPrototypeOf","objectProto","getKeys","item","createImpl","ctorFunc","isRoot","errorThrown","parentSubscription","scheduleSubscription","reader","getReader","__await","releaseLock","liftedSource","callOrApply","pred","fns","sortIndex","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","React","objectIs","useSyncExternalStoreWithSelector","getServerSnapshot","instRef","inst","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","toPropertyKey","writable","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptors","defineProperties","toPrimitive","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","ns","def","getOwnPropertyNames","definition","chunkId","all","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","onerror","onload","doneFns","head","toStringTag","installedChunks","j","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","immutableRouteKeys","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","score","siblings","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","decoded","decodePath","matchRouteBranch","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","paramName","RegExp","compilePath","captureGroups","splatValue","startIndex","nextChar","getInvalidPathError","field","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponseImpl","status","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","IDLE_FETCHER","IDLE_BLOCKER","proceed","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","isServer","detectErrorBoundary","inFlightDataRoutes","initialized","router","dataRoutes","dataStrategyImpl","dataStrategy","defaultDataStrategy","patchRoutesOnNavigationImpl","patchRoutesOnNavigation","future","v7_fetcherPersist","v7_normalizeFormMethod","v7_partialHydration","v7_prependBasename","v7_skipActionErrorRevalidation","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","loader","loaderData","shouldLoadRouteOnHydration","fogOfWar","pendingNavigationController","unblockBlockerHistoryUpdate","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","blockers","pendingAction","pendingPreventScrollReset","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","updateState","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","viewTransitionOpts","deleteFetcher","completeNavigation","_temp","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","mergeLoaderData","priorPaths","currentLocation","nextLocation","toPaths","getSavedScrollPosition","startNavigation","abort","startUninterruptedRevalidation","getScrollKey","saveScrollPosition","enableViewTransition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","handleNavigational404","isHashChangeOnly","submission","AbortController","pendingActionResult","createClientSideRequest","signal","pendingError","findNearestBoundary","actionResult","isFogOfWar","interruptActiveLoads","getSubmittingNavigation","discoverResult","discoverRoutes","shortCircuited","boundaryId","partialMatches","actionMatch","getTargetMatch","callDataStrategy","aborted","method","routeId","isRedirectResult","normalizeRedirectLocation","response","headers","startRedirectNavigation","isDeferredResult","isErrorResult","boundaryMatch","handleAction","getLoadingNavigation","updatedMatches","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","cancelActiveDeferreds","updatedFetchers","markFetchRedirectsDone","getActionDataForCommit","updates","revalidatingFetcher","getLoadingFetcher","getUpdatedRevalidatingFetchers","abortFetcher","controller","abortPendingFetchRevalidations","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect","findRedirect","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","handleLoaders","isNavigation","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","fetcherKey","dataResults","callDataStrategyImpl","isRedirectDataStrategyResultResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","currentMatches","loaderResultsPromise","fetcherResultsPromise","acc","resolveNavigationDeferredResults","resolveFetcherDeferredResults","updateFetcherState","setFetcherError","getFetcher","markFetchersDone","doneFetcher","getDoneFetcher","doneKeys","landedId","yeetedKeys","deleteBlocker","updateBlocker","newBlocker","blocker","shouldBlockNavigation","_ref2","blockerKey","blockerFunction","cancelledRouteIds","dfd","convertRouteMatchToUiMatch","isNonHMR","localManifest","patch","patchRoutesImpl","newMatches","newPartialMatches","initialize","nextHistoryUpdatePromise","_window","sessionPositions","sessionStorage","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","viewTransition","fetch","requestMatches","detectAndHandle405Error","existingFetcher","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResults","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","revalidate","getBlocker","patchRoutes","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","URLSearchParams","indexValues","getAll","append","qs","normalizeFormMethod","isFetcher","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","stripHashFromPath","FormData","_ref3","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","includeBoundary","skipActionErrorRevalidation","currentUrl","nextUrl","boundaryMatches","actionStatus","statusCode","shouldSkipRevalidation","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","hasData","currentPath","loaderMatch","arg","routeChoice","_childrenToPatch","childrenToPatch","newRoute","existingRoute","isSameRoute","aChild","_existingRoute$childr","bChild","_ref4","shouldLoad","requestContext","loadRouteDefinitionsPromises","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","loadLazyRouteModule","dsMatches","loadRoutePromise","handlerOverride","staticContext","onReject","runHandler","abortPromise","actualHandler","ctx","handlerPromise","handlerError","callLoaderOrAction","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","_result$init2","_result$init","_result$init3","_result$init4","_result$init5","_result$init6","deferred","resolveData","isDeferredData","Headers","trimmedMatches","normalizedLocation","protocol","isSameBasename","Request","processRouteLoaderData","skipLoaderErrorBubbling","foundError","loaderHeaders","newLoaderData","mergedLoaderData","reverse","_temp5","errorMessage","isRevalidatingLoader","unwrap","unwrappedData","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","routePathnamesJson","UNSAFE_getResolveToMatches","useNavigateUnstable","OutletContext","useResolvedPath","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","errorInfo","routeContext","component","RenderedRoute","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","errorIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","alreadyWarned$1","getChildren","hookName","useRouteContext","thisRoute","alreadyWarned","logDeprecation","flag","logV6DeprecationWarnings","renderFuture","routerFuture","v7_startTransition","Navigate","isStatic","jsonPath","Outlet","useOutlet","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","__reactRouterVersion","parseHydrationData","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","UNSAFE_ErrorResponseImpl","__subType","ErrorConstructor","ViewTransitionContext","isTransitioning","FetchersContext","startTransitionImpl","flushSyncImpl","ReactDOM","flushSyncSafe","Deferred","reason","RouterProvider","fallbackElement","setStateImpl","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","setTransition","interruption","setInterruption","fetcherData","optInStartTransition","startTransitionSafe","isViewTransitionUnavailable","startViewTransition","skipTransition","finished","finally","renderPromise","UNSAFE_logV6DeprecationWarnings","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","MemoizedDataRoutes","DataRoutes","UNSAFE_useRoutesImpl","Link","_ref7","absoluteHref","reloadDocument","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","NavLink","_ref8","ariaCurrentProp","className","classNameProp","styleProp","_excluded2","routerState","useViewTransitionState","nextPath","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","defaultNoopBatch","nullListeners","createSubscription","parentSub","subscriptionsAmount","selfSubscribed","handleChangeWrapper","onStateChange","trySubscribe","addNestedSub","isSubscribed","createListenerCollection","tryUnsubscribe","cleanupListener","removed","notifyNestedSubs","getListeners","isDOM","canUseDOM","isReactNative","isRunningInReactNative","product","getUseIsomorphicLayoutEffect","ContextKey","gT","globalThis","getContext","_gT$ContextKey","contextMap","realContext","ReactReduxContext","Provider_default","providerProps","serverState","contextValue","getServerState","previousState","getState","Context","createReduxContextHook","useReduxContext","createStoreHook","useReduxContext2","useStore2","useStore","withTypes","createDispatchHook","useDispatch2","useDispatch","refEquality","createSelectorHook","useSelector2","equalityFnOrOptions","equalityFn","reduxContext","wrappedSelector","selectedState","useSelector","propertyIsEnumerable","_objectSpread2","formatProdErrorMessage","symbol_observable_default","randomString","actionTypes_default","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","createStore","reducer","preloadedState","enhancer","currentReducer","currentState","currentListeners","nextListeners","listenerIdCounter","isDispatching","ensureCanMutateNextListeners","listenerId","replaceReducer","nextReducer","outerSubscribe","observeState","observerAsObserver","combineReducers","reducers","reducerKeys","finalReducers","finalReducerKeys","shapeAssertionError","assertReducerShape","hasChanged","nextState","previousStateForKey","nextStateForKey","compose","_len2","funcs","_key2","createThunkMiddleware","extraArgument","thunk","withExtraArgument","NOTHING","DRAFTABLE","DRAFT_STATE","die","isDraft","isDraftable","_value$constructor","isMap","isSet","objectCtorString","Ctor","iter","getArchtype","entry","thing","type_","propOrOldValue","latest","copy_","base_","shallowCopy","strict","isPlain","descriptors","desc","deep","isFrozen","dontMutateFrozenCollections","currentScope","plugins","getPlugin","pluginKey","plugin","getCurrentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer2","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","baseDraft","modified_","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","resultEach","isSet2","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","autoFreeze_","objectTraps","_desc$get","getDescriptorFromProto","draft_","readPropFromProto","peek","prepareCopy","createProxy","current2","markChanged","deleteProperty","owner","setPrototypeOf","arrayTraps","useStrictShallowCopy_","proxyMap_","proxySet_","isManual_","traps","revoke","proxy","Proxy","revocable","createProxyProxy","currentImpl","immer","produce","recipe","defaultBase","base2","ip","produceWithPatches","_len3","_key3","patches","inversePatches","autoFreeze","setAutoFreeze","useStrictShallowCopy","setUseStrictShallowCopy","createDraft","finishDraft","applyPatches","op","applyPatchesImpl","applyPatches_","composeWithDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__REDUX_DEVTOOLS_EXTENSION__","createAction","prepareAction","actionCreator","prepared","isAction","Tuple","_Tuple","species","prepend","freezeDraftable","createNextState","getOrInsertComputed","compute","SHOULD_AUTOBATCH","createQueueWithTimer","buildGetDefaultEnhancers","middlewareEnhancer","autoBatch","enhancerArray","notifying","shouldNotifyAtEndOfTick","notificationQueued","queueCallback","queueNotification","notifyListeners","listener2","wrappedListener","_action$meta","autoBatchEnhancer","executeReducerBuilderCallback","builderCallback","actionsMap","actionMatchers","defaultCaseReducer","builder","addCase","typeOrActionCreator","addMatcher","addDefaultCase","asyncThunkSymbol","getType","actionKey","buildCreateSlice","_creators$asyncThunk","creators","cAT","asyncThunk","reducerPath","payloadCreator","_reducerDefinitionType","caseReducer","preparedReducer","prepare","buildReducerCreators","reducerNames","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","sliceMatchers","contextMethods","reducer2","exposeAction","name2","exposeCaseReducer","buildReducer","extraReducers","finalCaseReducers","mapOrBuilderCallback","getInitialState","finalActionMatchers","finalDefaultCaseReducer","frozenInitialState","caseReducers","cr","isDraft2","isDraftable2","createNextState2","createReducer","sM","reducerName","reducerDefinition","reducerDetails","createNotation","isAsyncThunkSliceReducerDefinition","maybeReducerWithPrepare","prepareCallback","isCaseReducerWithPrepareDefinition","handleNormalReducerDefinition","_ref6","fulfilled","rejected","settled","handleThunkCaseReducerDefinition","selectSelf","injectedSelectorCache","_reducer","makeSelectorProps","reducerPath2","injected","selectSlice","sliceState","getSelectors","selectState","selectorCache","_options$selectors","selectors","wrapSelector","injectInto","injectable","pathOpt","_objectWithoutProperties","newReducerPath","wrapper","rootState","_len11","_key11","unwrapped","createSlice","cancelled","alm","cartSlice","items","totalAmount","addItemToCart","existingItem","quantity","price","removeItemFromCart","itemIndex","clearCart","getDefaultMiddleware","immutableCheck","serializableCheck","actionCreatorCheck","middlewareArray","thunkMiddleware","middleware","devTools","enhancers","rootReducer","finalMiddleware","isPlainObject2","finalCompose","compose2","trace","middlewares","createStore2","middlewareAPI","_len4","_key4","chain","applyMiddleware","getDefaultEnhancers","configureStore","cart","uppercasePattern","msPattern","toHyphenLower","hName","shallowEqualObjects","objA","objB","aKeys","bKeys","stringOrNumber","types","grid","aural","braille","handheld","print","projection","screen","tty","tv","embossed","matchers","orientation","deviceAspectRatio","deviceHeight","deviceWidth","colorIndex","monochrome","featureMatchers","features","minAspectRatio","maxAspectRatio","minDeviceAspectRatio","maxDeviceAspectRatio","minHeight","maxHeight","minDeviceHeight","maxDeviceHeight","minWidth","maxWidth","minDeviceWidth","maxDeviceWidth","minColor","maxColor","minColorIndex","maxColorIndex","minMonochrome","maxMonochrome","minResolution","maxResolution","mq","toQuery","rules","keyVal","realKey","hyphenate","hyphenateKeys","useIsUpdate","useQuery","settings","getQuery","makeQuery","setQuery","newQuery","useMediaQuery","device","onChange","deviceSettings","deviceFromProps","deviceFromContext","getDevice","setDevice","newDevice","useDevice","useMatchMedia","getMatchMedia","setMq","isUpdate","newMq","setMatches","updateMatches","ev","useMatches","Header","isBigScreen","isTabletOrMobile","useAuthUser","useAuthHeader","isconnected","setIsConnected","_jsx","_jsxs","Footer","alt","App","Admin","_Fragment","Accueil","title","discount","priceDiscount","description","image","amountRef","buttonRefs","ajouterTexteAvantDeuxDerniers","chaine","pdis","handleAddProduct","productId","btnAddElement","classList","amount","handleMore","currentAmount","handleLess","onKeyDown","role","tabIndex","ListingProducts","products","setProducts","setError","listing","H1visiteur","OneProduct","isCheckBoxInput","isDateObject","isNullOrUndefined","isObjectType","isObject","getEventValue","isNameInFieldArray","names","getNodeParentName","isWeb","HTMLElement","cloneObject","isFileListInstance","FileList","Blob","tempObject","prototypeCopy","compact","isUndefined","isBoolean","isKey","stringToPath","tempPath","lastIndex","newValue","objValue","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","getProxyFormState","formState","control","localProxyFormState","defaultValues","_defaultValues","_proxyFormState","isEmptyObject","shouldRenderFormState","formStateData","updateFormState","convertToArrayPayload","useSubscribe","_props","isString","generateWatchOutput","_names","formValues","isGlobal","watch","fieldName","watchAll","appendErrors","validateAllFieldCriteria","getValidationModes","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","watchName","iterateFieldsByAction","fields","fieldsNames","abortEarly","_f","currentField","_excluded4","updateFieldArrayRootError","fieldArrayErrors","isFileInput","isHTMLElement","isMessage","isRadioInput","isRegex","defaultResult","isValid","validResult","getCheckboxValue","option","defaultReturn","getRadioValue","previous","getValidateError","getValueAndMessage","validationData","validateField","shouldUseNativeValidation","isFieldArray","maxLength","minLength","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","unset","childObject","updatePath","baseGet","isEmptyArray","createSubject","_observers","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","NaN","getFieldValue","files","selectedOptions","getRuleValue","rule","ASYNC_FUNCTION","schemaErrorLookup","_fields","defaultOptions","reValidateMode","shouldFocusError","createFormControl","delayErrorCallback","_options","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitted","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","validatingFields","_formValues","shouldUnregister","_state","unMount","_subjects","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","criteriaMode","_updateValid","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","disabledField","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updateErrors","wait","updatedFormState","getResolverOptions","shouldOnlyCheckValid","valid","_excluded5","isFieldArrayRoot","isPromiseFunction","fieldReference","validateFunction","fieldError","getValues","_getWatch","optionRef","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","cloneValue","isFieldValueUpdated","_updateIsFieldValueUpdated","shouldSkipValidation","skipValidation","isTouched","watched","onBlur","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","executeSchemaAndUpdateState","shouldFocus","getFieldState","invalid","currentError","currentRef","restOfErrorTree","_excluded6","unregister","keepValue","keepError","keepDirty","keepTouched","keepIsValidating","keepDefaultValue","keepIsValid","_updateDisabledField","register","disabledIsDefined","progressive","fieldRef","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","onValidError","fieldValues","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","keepDefaultValues","keepValues","keepDirtyValues","fieldsToCheck","closest","keepSubmitCount","keepIsSubmitted","keepErrors","keepIsSubmitSuccessful","_removeUnmounted","_updateFieldArray","shouldSetValues","shouldUpdateFieldsAndState","argA","argB","unsetEmptyArray","_getFieldArray","_resetDefaultValues","resetOptions","_updateFormState","_disableForm","_setErrors","resetField","clearErrors","inputName","setFocus","shouldSelect","select","useForm","_formControl","_values","_errors$name","label","validationSchema","container_input","classe","messRequired","messMinLength","messMaxLength","messPattern","messMax","messMin","messValidate","onchange","labelcss","htmlFor","container_submit","click","LoginClient","signIn","useSignIn","containerForm","bloc","onSubmit","errorData","responseData","encodedPayload","decodedPayload","firstName","lastName","roles","phone","cities","adress","Input","BtnSubmit","handleDeleteProduct","Cart","classNameTotal","One","AppError","LoginCart","setErrorMessage","Summary","authHeader","classNameInfo","OneSummary","selectedOption","Register","setOptions","blocPhone","formattedCities","city","fetchCities","SelectInput","Payment","_errors$name2","_errors$name3","_errors$name4","_errors$name5","_errors$name6","_errors$name7","classname","Account","signOut","useSignOut","userId","Authorization","alert","Textarea","states","dateInput","day","getDate","getMonth","year","getFullYear","formatDate","BoardConsumer","orders","setOrders","fetchOrders","OneOrder","isCreatedAt","DetailOrder","useParams","setOrder","isCreated","setIsCreated","setAmount","setStates","fetchOrder","fetchedOrder","totalQuantity","sum","Detail","hostname","PrivateRoute","tokenValue","user","PrivateConsumer","_user$roles","Login","UNSAFE_mapRouteProperties","createBrowserRouter","rootElement","getElementById","AuthProvider","reportWebVitals"],"sourceRoot":""}